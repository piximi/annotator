{"version":3,"sources":["types/ToolType.ts","types/AnnotationModeType.ts","reportWebVitals.ts","store/selectors/annotatingSelector.ts","store/selectors/boundingClientRectSelector.ts","store/selectors/categoryCountsSelector.ts","store/selectors/categoriesSelector.ts","store/selectors/createdCategoriesSelector.ts","store/selectors/imageInstancesSelector.ts","store/selectors/imageSelector.ts","store/selectors/imageOriginalSrcSelector.ts","store/selectors/invertModeSelector.ts","store/selectors/selectedCategorySelector.ts","store/selectors/selectionModeSelector.ts","store/selectors/stageHeightSelector.ts","store/selectors/stageScaleSelector.ts","store/selectors/stageWidthSelector.ts","store/selectors/toolTypeSelector.ts","store/selectors/unknownCategorySelector.ts","store/selectors/zoomToolOptionsSelector.ts","store/selectors/zoomSelectionSelector.ts","images/texture.png","components/ImageViewer/CategoriesList/CategoriesList/CategoriesList.css.ts","components/ImageViewer/CategoriesList/CollapsibleList/CollapsibleList.tsx","images/cell-painting.png","types/LanguageType.ts","types/ZoomModeType.ts","image/rle.ts","image/imageHelper.ts","store/slices/applicationSlice.ts","store/slices/toolOptionsSlice.ts","store/reducer/reducer.ts","store/stores/store.ts","store/thunks/echoThunk.ts","store/thunks/loadLayersModelThunk.ts","components/ImageViewer/CategoriesList/CategoryListItemCheckbox/CategoryListItemCheckbox.tsx","store/selectors/languageSelector.ts","translations/de.ts","translations/en.ts","translations/fas.ts","translations/fi.ts","translations/gr.ts","translations/hi.ts","translations/hu.ts","translations/se.ts","translations/fr.ts","hooks/useTranslation/useTranslation.tsx","components/ImageViewer/CategoriesList/CategoryMenu/HideOrShowCategoryMenuItem/HideOrShowCategoryMenuItem.tsx","components/ImageViewer/CategoriesList/CategoryMenu/HideOtherCategoriesMenuItem/HideOtherCategoriesMenuItem.tsx","store/selectors/imagesSelector.ts","components/ImageViewer/CategoriesList/CategoryMenu/CategoryMenu/CategoryMenu.tsx","components/ImageViewer/CategoriesList/DeleteCategoryDialog/DeleteCategoryDialog.tsx","components/ImageViewer/CategoriesList/ColorIcon/ColorIcon.css.ts","components/ImageViewer/CategoriesList/ColorIcon/ColorIcon.tsx","components/ImageViewer/CategoriesList/EditCategoryDialog/EditCategoryDialog.css.ts","components/ImageViewer/CategoriesList/EditCategoryDialog/EditCategoryDialog.tsx","image/Tool/Tool/Tool.ts","image/simplify/simplify.ts","image/polygon-fill/util.ts","image/polygon-fill/slpf.ts","image/Tool/AnnotationTool/AnnotationTool/AnnotationTool.ts","image/flood.ts","image/Tool/AnnotationTool/ColorAnnotationTool/ColorAnnotationTool.ts","image/Tool/AnnotationTool/EllipticalAnnotationTool/EllipticalAnnotationTool.ts","image/Tool/AnnotationTool/LassoAnnotationTool/LassoAnnotationTool.ts","image/pathfinder/NodeHeap.ts","image/pathfinder/PathFinder.ts","image/GraphHelper.ts","image/Tool/AnnotationTool/MagneticAnnotationTool/MagneticAnnotationTool.ts","image/Tool/AnnotationTool/RectangularAnnotationTool/RectangularAnnotationTool.ts","image/Tool/AnnotationTool/ObjectAnnotationTool/ObjectAnnotationTool.ts","image/Tool/AnnotationTool/PenAnnotationTool/PenAnnotationTool.ts","image/Tool/AnnotationTool/PolygonalAnnotationTool/PolygonalAnnotationTool.ts","image/Tool/AnnotationTool/QuickAnnotationTool/QuickAnnotationTool.ts","image/slic.ts","store/selectors/penSelectionBrushSizeSelector.ts","store/selectors/quickSelectionBrushSizeSelector.ts","store/selectors/imageSrcSelector.ts","hooks/useDialog/useDialog.ts","hooks/useMarchingAnts/useMarchingAnts.ts","store/selectors/scaledImageWidthSelector.ts","store/selectors/soundEnabledSelector.ts","components/ImageViewer/SettingsButton/SettingsDialog/SettingsDialog.css.ts","components/ImageViewer/SettingsButton/SettingsDialog/SettingsDialog.tsx","components/ImageViewer/CategoriesList/CreateCategoryListItem/CreateCategoryDialog/CreateCategoryDialog.css.ts","components/ImageViewer/CategoriesList/CreateCategoryListItem/CreateCategoryDialog/CreateCategoryDialog.tsx","store/selectors/selectedAnnotationsIdsSelector.ts","store/selectors/activeImageIdSelector.ts","components/ImageViewer/CategoriesList/ImageMenu/ImageMenu.tsx","components/ImageViewer/CategoriesList/DeleteAllAnnotationsDialog/DeleteAllAnnotationsDialog.tsx","store/selectors/allSerializedAnnotationsSelector.ts","components/ImageViewer/CategoriesList/SaveMenu/SaveProjectFileMenuItem.tsx","components/ImageViewer/CategoriesList/SaveMenu/ExportAnnotationsAsImagesMenuItem.tsx","components/ImageViewer/CategoriesList/SaveMenu/ExportAnnotationsAsMatrixMenuItem.tsx","components/ImageViewer/CategoriesList/SaveMenu/ExportAnnotationsAsBinaryImageMenuItem.tsx","components/ImageViewer/CategoriesList/SaveMenu/SaveMenu.tsx","components/ImageViewer/CategoriesList/OpenMenu/OpenImageMenuItem.tsx","components/ImageViewer/CategoriesList/OpenMenu/OpenProjectFileMenuItem.tsx","images/malaria.png","components/ImageViewer/CategoriesList/ExampleImageDialog/ExampleImageDialog.tsx","components/ImageViewer/CategoriesList/OpenMenu/OpenExampleImageMenuItem.tsx","components/ImageViewer/CategoriesList/OpenMenu/OpenMenu.tsx","components/ImageViewer/Help/HelpDrawer/CollapsibleHelpContent.tsx","components/ImageViewer/Help/HelpDialog/HelpDialog.css.ts","components/ImageViewer/Help/HelpDialog/KeyboardKey.tsx","components/ImageViewer/Help/HelpDialog/HelpWindowToolIcons.tsx","components/ImageViewer/Help/HelpDialog/HelpWindowToolTitle.tsx","components/icons/CheckboxChecked.svg","components/icons/CheckboxUnchecked.svg","components/icons/ColorAdjustment.svg","components/icons/ColorAnnotation.svg","components/icons/EllipticalAnnotation.svg","components/icons/Hand.svg","components/icons/LassoAnnotation.svg","components/icons/MagneticAnnotation.svg","components/icons/ObjectAnnotation.svg","components/icons/FreehandAnnotation.svg","components/icons/PolygonalAnnotation.svg","components/icons/QuickAnnotation.svg","components/icons/RadioChecked.svg","components/icons/RadioUnchecked.svg","components/icons/RectangularAnnotation.svg","components/icons/Selection.svg","components/icons/Zoom.svg","components/ImageViewer/Help/HelpContent/HelpContent.tsx","components/ImageViewer/Help/HelpDrawer/HelpDrawer.tsx","components/ImageViewer/CategoriesList/ClearCategoryDialog/ClearCategoryDialog.tsx","components/ImageViewer/CategoriesList/CategoriesList/CategoriesList.tsx","components/ImageViewer/ToolOptions/ToolOptions/ToolOptions.css.ts","components/ImageViewer/ToolOptions/AnnotationMode/AnnotationModeTooltip/AnnotationModeTooltip.css.ts","components/ImageViewer/ToolOptions/AnnotationMode/AnnotationModeTooltip/AnnotationModeTooltip.tsx","components/ImageViewer/ToolOptions/AnnotationMode/NewTooltip/NewTooltip.tsx","components/ImageViewer/ToolOptions/AnnotationMode/AddTooltip/AddTooltip.tsx","components/ImageViewer/ToolOptions/AnnotationMode/SubtractTooltip/SubtractTooltip.tsx","components/ImageViewer/ToolOptions/AnnotationMode/IntersectionTooltip/IntersectionTooltip.tsx","components/ImageViewer/ToolOptions/AnnotationMode/AnnotationMode/AnnotationMode.tsx","components/ImageViewer/ToolOptions/InformationBox/InformationBox.css.ts","components/ImageViewer/ToolOptions/InformationBox/InformationBox.tsx","components/icons/InvertAnnotation.svg","components/ImageViewer/ToolOptions/InvertAnnotation/InvertAnnotation.tsx","components/ImageViewer/ToolOptions/RectangularAnnotationOptions/RectangularAnnotationOptions.tsx","components/ImageViewer/ToolOptions/EllipticalAnnotationOptions/EllipticalAnnotationOptions.tsx","components/ImageViewer/ToolOptions/FreehandAnnotationOptions/FreehandAnnotationOptions.tsx","components/ImageViewer/ToolOptions/LassoAnnotationOptions/LassoAnnotationOptions.tsx","components/ImageViewer/ToolOptions/PolygonalAnnotationOptions/PolygonalAnnotationOptions.tsx","components/ImageViewer/ToolOptions/MagneticAnnotationOptions/MagneticAnnotationOptions.tsx","components/ImageViewer/ToolOptions/ColorAnnotationOptions/ColorAnnotationOptions.tsx","components/ImageViewer/ToolOptions/QuickAnnotationOptions/QuickAnnotationOptions.tsx","components/ImageViewer/ToolOptions/ObjectAnnotationOptions/ObjectAnnotationOptions.tsx","store/selectors/offsetSelector.ts","components/ImageViewer/ToolOptions/HandToolOptions/ResetButton.tsx","components/ImageViewer/ToolOptions/ZoomOptions/ZoomOptions.tsx","components/ImageViewer/ToolOptions/HandToolOptions/HandToolOptions.tsx","store/selectors/intensityRangeSelector.ts","store/selectors/imageShapeSelector.ts","components/ImageViewer/ToolOptions/ColorAdjustmentOptions/ChannelsList/ChannelsList.tsx","components/ImageViewer/ToolOptions/ColorAdjustmentOptions/ColorAdjustmentOptions/ColorAdjustmentOptions.tsx","store/selectors/selectedAnnotationsSelector.ts","store/selectors/unselectedAnnotationsSelector.ts","components/ImageViewer/ToolOptions/PointerSelectionOptions/PointerSelectionOptions.tsx","components/ImageViewer/ToolOptions/ToolOptions/ToolOptions.tsx","components/ImageViewer/Tools/Tool/Tool.css.ts","components/ImageViewer/Tools/Tool/ToolBarToolTitle.tsx","components/ImageViewer/Tools/Tool/Tool.tsx","components/ImageViewer/Tools/Tools/Tools.css.ts","components/ImageViewer/Tools/Tools/Tools.tsx","store/selectors/scaledImageHeightSelector.ts","components/ImageViewer/Content/Stage/Image/Image.tsx","components/ImageViewer/Content/Stage/Selection/EllipticalSelection/EllipticalSelection.tsx","components/ImageViewer/Content/Stage/Selection/LassoSelection/LassoSelection.tsx","components/ImageViewer/Content/Stage/Selection/MagneticSelection/MagneticSelection.tsx","components/ImageViewer/Content/Stage/Selection/ObjectSelection/ObjectSelection.tsx","components/ImageViewer/Content/Stage/Selection/PolygonalSelection/PolygonalSelection.tsx","components/ImageViewer/Content/Stage/Selection/RectangularSelection/RectangularSelection.tsx","components/ImageViewer/Content/Stage/Selection/ColorSelection/ColorSelection.tsx","components/ImageViewer/Content/Stage/Selection/QuickSelection/QuickSelection.tsx","components/ImageViewer/Content/Stage/Selection/PenSelection/PenSelection.tsx","components/ImageViewer/Content/Stage/Selection/ZoomSelection/ZoomSelection.tsx","components/ImageViewer/Content/Stage/Selection/Selection/Selection.tsx","store/selectors/annotatedSelector.ts","components/ImageViewer/Content/Stage/Selecting/Selecting.tsx","components/ImageViewer/Content/Stage/ColorAnnotationToolTip/ColorAnnotationToolTip.tsx","sounds/pop-up-on.mp3","sounds/pop-up-off.mp3","components/ImageViewer/Content/Stage/Layer/Layer.tsx","store/selectors/selectedAnnotationSelector.ts","store/selectors/imageWidthSelector.ts","store/selectors/imageHeightSelector.ts","store/selectors/cursorSelector.ts","components/ImageViewer/Content/Stage/Transformer/Transformer.tsx","components/ImageViewer/Content/Stage/Transformers/Transformers.tsx","store/selectors/stagePositionSelector.ts","components/ImageViewer/Content/Stage/PenAnnotationToolTip/PenAnnotationToolTip.tsx","store/selectors/visibleCategoriesSelector.ts","image/toRGBA.ts","components/ImageViewer/Content/Stage/Annotations/ConfirmedAnnotations/Annotation/Annotation.tsx","components/ImageViewer/Content/Stage/Annotations/ConfirmedAnnotations/ConfirmedAnnotations.tsx","components/ImageViewer/Content/Stage/Annotations/SelectedAnnotation/SelectedAnnotation.tsx","components/ImageViewer/Content/Stage/Annotations/SelectedAnnotations/SelectedAnnotations.tsx","components/ImageViewer/Content/Stage/Annotations/Annotations.tsx","store/selectors/pointerSelectionSelector.ts","components/ImageViewer/Content/Stage/Selection/PointerSelection/PointerSelection.tsx","store/selectors/currentIndexSelector.ts","hooks/usePointer/usePointer.ts","components/ImageViewer/Content/Stage/Stage/Stage.tsx","hooks/useZoom/useZoom.ts","hooks/useAnnotationTool/useAnnotationTool.ts","hooks/useWindowFocusHandler/useWindowFocusHandler.ts","hooks/useCursor/useCursor.ts","hooks/useKeyboardShortcuts/useKeyboardShortcuts.tsx","hooks/useHandTool/useHandTool.tsx","components/ImageViewer/Content/Content/Content.css.ts","components/ImageViewer/Content/Content/Content.tsx","hooks/useBoundingClientRect/useBoundingClientRect.ts","components/ImageViewer/ImageViewer/ImageViewer.css.ts","components/ImageViewer/ImageViewer/theme.ts","components/ImageViewer/ImageViewer/ImageViewer.tsx","i18n.ts","index.tsx"],"names":["ToolType","AnnotationModeType","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","annotatingSelector","state","present","annotating","boundingClientRectSelector","boundingClientRect","categoryCountsSelector","catDict","categories","id","images","image","annotations","categoryId","categoriesSelector","createdCategoriesSelector","filter","category","sortBy","imageInstancesSelector","length","find","activeImageId","imageSelector","imageOriginalSrcSelector","originalSrc","invertModeSelector","invertMode","selectedCategorySelector","_","selectedCategory","selectionModeSelector","selectionMode","stageHeightSelector","stageHeight","stageScaleSelector","stageScale","stageWidthSelector","stageWidth","toolTypeSelector","toolType","unknownCategorySelector","zoomToolOptionsSelector","toolOptions","zoom","zoomSelectionSelector","zoomSelection","useStyles","makeStyles","theme","appBar","backgroundColor","borderBottom","boxShadow","position","drawer","flexShrink","width","spacing","iconButton","marginLeft","marginRight","paper","zIndex","toolbar","mixins","backgroundImage","texture","CollapsibleList","children","dense","closed","primary","React","useState","collapsed","setCollapsed","List","ListItem","button","onClick","ListItemIcon","ListItemText","Collapse","in","timeout","unmountOnExit","component","disablePadding","LanguageType","ZoomModeType","decode","encoded","decoded","background","i","j","push","Uint8ClampedArray","encode","lastElement","lastSequenceSize","connectPoints","coordinates","connectedPoints","slice","current","next","forEach","points","drawLine","p","q","x","y","x1","y1","dx","dy","step","coords","Math","round","abs","getIdx","nchannels","index","floor","colorOverlayROI","encodedMask","boundingBox","imageWidth","imageHeight","color","decodedData","endX","min","endY","boxWidth","boxHeight","croppedImage","ImageJS","components","alpha","colorROIImage","checkNeighbors","arr","getPixelXY","height","setPixelXY","src","toDataURL","useCanvas","Image","replaceDuplicateName","name","names","currentName","includes","saveAnnotationsAsMasks","zip","map","annotation","Promise","resolve","reject","mask","shape","boundingBoxWidth","boundingBoxHeight","roiMask","fullImageMaskData","Uint8Array","fill","fullImageMask","blob","toBlob","folder","file","base64","flat","saveAnnotationsAsMatrix","binary","fullLabelImage","n","importSerializedAnnotations","existingCategories","annotationMask","split","parseInt","newCategories","annotationCategoryId","annotationCategoryColor","annotationCategoryName","visible","annotation_out","annotationBoundingBoxX","annotationBoundingBoxY","annotationBoundingBoxWidth","annotationBoundingBoxHeight","annotationId","initialCategories","initialState","annotated","DOMRect","brightness","channels","range","currentIndex","cursor","contrast","exposure","hue","undefined","language","English","offset","penSelectionBrushSize","pointerSelection","dragging","minimum","maximum","selecting","quickSelectionBrushSize","saturation","selectedAnnotation","selectedAnnotations","New","soundEnabled","stagePosition","RectangularAnnotation","vibrance","applicationSlice","createSlice","reducers","addImages","action","imageNames","updatedImages","payload","newImages","initialName","updatedName","clearCategoryAnnotations","deleteCategory","deleteImage","deleteAllInstances","deleteImageInstances","imageId","deleteImageInstance","updatedAnnotations","instance","openAnnotations","loaded","avatar","imageData","imageFilename","imageChannels","frames","imageFrames","planes","imagePlanes","setAnnotated","setAnnotating","setBoundingClientRect","setBrightness","setCategories","setCategoryVisibility","setContrast","setCurrentIndex","setExposure","setHue","setActiveImage","activeImage","defaultChannels","setImageInstances","instances","setImageSrc","setImages","setChannels","setCursor","setInvertMode","setLanguage","setOffset","setOperation","operation","setPenSelectionBrushSize","setPointerSelection","setQuickSelectionBrushSize","setSaturation","setSelectedCategory","setSelectedAnnotations","setSelectionMode","setStageHeight","setStagePosition","setStageScale","setStageWidth","setSoundEnabled","setVibrance","setZoomSelection","extraReducers","console","info","actions","colorAdjustment","blackPoint","highlights","shadows","automaticCentering","mode","In","scale","toActualSize","toFit","toolOptionsSlice","setColorAdjustmentOptions","options","setZoomToolOptions","undoable","reducer","currentState","previousHistory","type","groupBy","groupByActionTypes","combineReducers","devTools","enhancers","Sentry","middleware","logger","thunk","preloadedState","store","configureStore","echo","message","a","createAsyncThunk","loadLayersModelThunk","path","tensorflow","CategoryListItemCheckbox","dispatch","useDispatch","Checkbox","checked","checkedIcon","style","disableRipple","edge","icon","tabIndex","languageSelector","de","translation","Cancel","Categories","Description","Edit","Help","Logo","Model","Open","Save","Settings","Unknown","en","fas","Create","Export","Intersection","Pointer","Name","Zoom","fi","gr","hi","hu","se","fr","useTranslation","useSelector","word","Farsi","Finnish","French","German","Greek","Hindi","Hungarian","HideOrShowCategoryMenuItem","onCloseCategoryMenu","t","translatedHide","translatedShow","MenuItem","event","Typography","variant","HideOtherCategoriesMenuItem","cat","imagesSelector","CategoryMenu","anchorElCategoryMenu","openCategoryMenu","onOpenDeleteCategoryDialog","onOpenEditCategoryDialog","onOpenClearCategoryDialog","Menu","anchorEl","anchorOrigin","horizontal","vertical","getContentAnchorEl","onClose","open","transformOrigin","MenuList","Divider","existAnnotations","DeleteCategoryDialog","selections","unknownCategory","Dialog","disableBackdropClick","fullWidth","DialogTitle","DialogContent","DialogActions","Button","alert","transition","transitions","create","duration","leavingScreen","easing","sharp","appBarShift","enteringScreen","easeOut","card","classifierSettingsDialogContent","marginTop","chip","borderWidth","fontSize","colorPicker","margin","container","paddingBottom","paddingTop","createCategoryDialogContent","paddingLeft","createCategoryDialogGrid","createCategoryDialogItem","drawerHeader","alignItems","display","drawerPaper","fileInput","gridList","transform","gridTileBar","gridTileBarIconButton","imageDialogAppBar","imageDialogContent","imageSelected","border","borderRadius","imageUnselected","main","flexGrow","padding","mainShift","media","progress","settingsDialogAppBar","slider","sliderInput","COLORS","ColorIcon","onColorChange","classes","colorMenuAnchorEl","setColorMenuAnchorEl","colorPopupOpen","Boolean","onCloseColorPicker","IconButton","currentTarget","Avatar","Popover","className","colors","onChange","EditCategoryDialog","onCloseDialog","openDialog","setColor","useEffect","setName","Grid","item","xs","hex","TextField","autoFocus","label","target","value","updatedCategories","v","Tool","this","getSqDist","p1","p2","getSqSegDist","simplifyDPStep","first","last","sqTolerance","simplified","maxSqDist","sqDist","simplifyDouglasPeucker","simplify","tolerance","highestQuality","prevPoint","newPoints","point","len","simplifyRadialDist","lerp","yScan","x2","y2","getYMin","getYMax","getXofYMin","getXofYMax","moveEdges","ET","AET","pop","removeEdges","getSpans","spans","drawSpans","img","fillSpan","AnnotationTool","manager","anchor","origin","buffer","_boundingBox","_mask","getRoiManager","newMaskImage","maskImage","newBoundingBox","encodedMaskData1","boundingBox1","maskData1","maskData2","boundingBox2","newBoundingBoxWidth","newBoundingBoxHeight","newMaskData","deltaX1","deltaY1","deltaX2","deltaY2","b1x","b1y","b2x","b2y","b1i","b2i","inBoundingBox","from","anchorIndex","segment","splice","computeBoundingBoxFromContours","computeMask","crop","data","error","decodedMask1","selectedMask","selectedBoundingBox","invertedBoundingBox","invertedMask","x_mask","y_mask","croppedInvertedMask","updatedBoundingBox","contour","pairs","bitDepth","edges","pointsToEdges","sort","e1","e2","cmp","slpf","getChannel","updatedMask","uuid","dirs","ColorAnnotationTool","roiContour","roiManager","overlayData","initialPosition","toleranceMap","floodMap","toleranceQueue","PriorityQueue","comparator","b","toolTipPosition","maxTol","seen","Set","clear","tol","red","green","blue","grey","maxValue","makeFloodMap","empty","Array","Infinity","queue","idx","add","updateOverlay","diff","ceil","hypot","fromMask","getMasks","roi","getRois","surface","minX","minY","maxX","maxY","imgMask","getBitXY","peek","currentPoint","dequeue","max","dir","newX","newY","has","doFlood","threshold","invert","colorOverlay","fillColor","overlay","EllipticalAnnotationTool","center","radius","resize","convertToPoints","convertToMask","canvas","document","createElement","ctx","getContext","beginPath","ellipse","PI","roiWidth","roiHeight","imageMask","fromCanvas","croppedImageMask","centerX","centerY","foo","sqrt","LassoAnnotationTool","distance","NodeHeap","fScore","node","heapIndex","setNodeId","_up","top","_down","pos","compare","parent","halfLength","left","right","best","NO_PATH","cachedAStarPathSearch","graph","factor","heuristic","fromNode","toNode","fromIdxToCoord","fromId","toId","getNode","cameFrom","to","dest","trace","openSet","distanceToSource","reconstructPath","forEachLinkedNode","visitNeighbour","otherNode","parentId","Number","POSITIVE_INFINITY","tentativeDistance","updateItem","searchNode","newCoord","parentNode","oldDirection","pathDirection","newDirection","log","validNeighbours","xoffsets","yoffsets","output","xoffset","yoffset","row","makeGraph","createGraph","cap","BYTES_PER_ELEMENT","startIdx","dist","addNode","pixels","pixel","addLink","createPathFinder","MagneticAnnotationTool","pathfinder","previous","response","source","destination","connected","sobelFilter","RectangularAnnotationTool","computeBoundingBox","ObjectAnnotationTool","prediction","predict","cropped","fromPixels","getCanvas","batch","resizeBilinear","div","expandDims","squeeze","tile","sub","sign","relu","pad","toPixels","clamped","greyMask","binaryMask","algorithm","rois","thresholded","optimizer","adam","compile","loss","metrics","PenAnnotationTool","brushSize","circlesData","outline","thresholdMask","bbox","arc","croppedRgbMask","computeCircleData","operator","PolygonalAnnotationTool","QuickAnnotationTool","brushsize","colorMasks","currentSuperpixels","lastSuperpixel","superpixels","superpixelsMap","currentMask","regionSize","minRegionSize","imWidth","imHeight","numRegionsX","String","numRegionsY","numRegions","numPixels","masses","currentCenters","Float32Array","newCenters","parameters","mcMap","msMap","distanceMap","xyz","gamma","r","pow","parseFloat","g","xw","yw","Yw","ix","iy","iz","lab","fx","fy","fz","gradient","k","c","d","u","centerx","centery","minEdgeValue","yp","xp","thisEdgeValue","iterations","segmentation","Int32Array","iteration","i1","region","cx","cy","spatial","dR","dG","dB","appearance","mc","ms","iMass","segmentSize","cleanedLabel","numExpanded","neighbor","cleaned","direction","count","slic","getRGBAData","flatPixelCoordinate","superpixel","setPixel","croppedGreyMask","update","penSelectionBrushSizeSelector","quickSelectionBrushSizeSelector","imageSrcSelector","useDialog","setOpen","useCallback","onOpen","useMarchingAnts","dashOffset","setDashOffset","timer","setTimeout","clearTimeout","scaledImageWidthSelector","soundEnabledSelector","form","maginLeft","content","boxLayout","justifyContent","typography","fontWeight","textAlign","menuButton","title","SettingsDialog","fullScreen","AppBar","Toolbar","aria-label","FormControl","InputLabel","shrink","Select","labelId","FormGroup","FormControlLabel","control","Switch","CreateCategoryDialog","sample","maxWidth","onSubmit","preventDefault","categoryNames","v4","toString","selectedAnnotationsIdsSelector","activeImageIdSelector","ImageMenu","anchorElImageMenu","onCloseImageMenu","openImageMenu","currentImageId","setAnchorEl","keepMounted","JSZip","all","generateAsync","saveAs","DeleteAllAnnotationsDialog","allSerializedAnnotationsSelector","columns","imageChecksum","serializedAnnotations","findIndex","join","SaveProjectFileMenuItem","popupState","serializedProject","Blob","JSON","stringify","close","ExportAnnotationsAsImagesMenuItem","ExportAnnotationsAsMatrixMenuItem","ExportAnnotationsAsBinaryImageMenuItem","SaveMenu","bindMenu","OpenImageMenuItem","accept","hidden","multiple","persist","files","arrayBuffer","load","imageDataURL","onOpenImage","OpenProjectFileMenuItem","reader","FileReader","onload","result","project","parse","serializedImage","readAsText","onOpenProjectFile","ExampleImageDialog","categories_in","examples","description","malaria","malariaAnnotations","cellpainting","cellpaintingAnnotations","role","example","divider","newAnnotations","serializedAnnotation","secondary","OpenExampleImageMenuItem","OpenMenu","CollapsibleHelpContent","kbd","paddingInline","whiteSpace","borderColor","borderStyle","lineHeight","KeyboardKey","letter","HelpWindowToolIcon","SvgIcon","HelpWindowToolTitle","toolName","Box","_extends","Object","assign","arguments","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","stroke","strokeWidth","fillRule","strokeLinecap","strokeLinejoin","SvgCheckboxChecked","_ref","svgRef","titleId","props","viewBox","xmlns","xmlnsXlink","ref","ForwardRef","SvgCheckboxUnchecked","SvgColorAdjustment","SvgColorAnnotation","SvgEllipticalAnnotation","SvgHand","SvgLassoAnnotation","SvgMagneticAnnotation","SvgObjectAnnotation","SvgFreehandAnnotation","SvgPolygonalAnnotation","SvgQuickAnnotation","SvgRadioChecked","SvgRadioUnchecked","SvgRectangularAnnotation","SvgSelection","SvgZoom","ManipulatingCanvasContent","Fragment","OpeningImagesHelpContent","CreatingCategoriesContent","MakingNewAnnotationsHelpContent","ChangingAnnotationsHelpContent","SavingProjectHelpContent","HelpDrawer","bottom","setState","toggleDrawer","Drawer","float","Container","ClearCategoryDialog","CategoriesList","createdCategories","selectedAnnotationsIds","categoryCounts","currentImage","onCloseDeleteCategoryDialog","openDeleteCategoryDialog","onCloseEditCategoryDialog","openEditCategoryDialog","onCloseClearCategoryDialog","openClearCategoryDialog","onCloseDeleteAllAnnotationsDialog","onOpenDeleteAllAnnotationsDialog","openDeleteAllAnnotationsDialog","imageAnchorEl","setImageAnchorEl","onCategoryClick","onCategoryMenuOpen","onCategoryMenuClose","onImageItemClick","evt","px","selected","ListItemAvatar","alt","primaryTypographyProps","noWrap","Chip","size","ListItemSecondaryAction","onImageMenuOpen","onOpenCategoryMenu","CreateCategoryListItem","OpenListItem","bindTrigger","SaveListItem","SendFeedbackDialog","onSend","input","setInput","DialogContentText","e","multiline","rows","SendFeedbackListItem","text","url","encodeURIComponent","window","SettingsListItem","root","palette","default","settingsPaper","settingsToolbar","operations","operationsPaper","operationsToolbar","logo","applicationDrawer","applicationDrawerHeader","applicationDrawerPaper","tooltip","AnnotationModeTooltip","Tooltip","placement","NewTooltip","AddTooltip","SubtractTooltip","IntersectionTooltip","AnnotationMode","annotationMode","onClickLabel","RadioGroup","subheader","ListSubheader","Radio","Add","Subtract","Intersect","InformationBox","disableGutters","SvgInvertAnnotation","InvertAnnotation","RectangularAnnotationOptions","EllipticalAnnotationOptions","FreehandAnnotationOptions","penSelectionBrushSizeBrushSize","Slider","aria-labelledby","changed","LassoAnnotationOptions","PolygonalAnnotationOptions","MagneticAnnotationOptions","ColorAnnotationOptions","QuickAnnotationOptions","setBrushSize","onChangeCommitted","ObjectAnnotationOptions","offsetSelector","ResetButton","ZoomOptions","onModeClick","defaultValue","onSliderChange","valueLabelDisplay","Out","centerOffset","HandToolOptions","channelsSelector","imageShapeSelector","ChannelsList","displayedValues","updateDisplayedValues","imageShape","visibleChannelsIndices","channel","reduce","concat","handler","debounce","values","copiedValues","updatedChannels","onCheckboxChanged","updated","copiedChannels","colorAdjustmentSlider","displayedValue","disabled","newValue","handleSliderChange","sliders","allSliders","ColorAdjustmentOptions","setDisplayedValues","generateDefaultChannels","selectedAnnotationsSelector","unselectedAnnotationsSelector","ids","PointerSelectionOptions","unselectedAnnotations","allAnnotations","desiredAnnotations","onSelectCategory","ToolOptions","activeOperation","method","ColorAdjustment","EllipticalAnnotation","PenAnnotation","LassoAnnotation","PolygonalAnnotation","MagneticAnnotation","ColorAnnotation","QuickAnnotation","ObjectAnnotation","Hand","cardContent","cardHeader","cardMedia","ToolBarToolTitle","TooltipCard","Card","raised","CardActionArea","CardContent","child","Tools","OperationType","scaledImageHeightSelector","forwardRef","useImage","filters","setFilters","isEqual","clearCache","IntensityFilter","scaleIntensity","createIntensityFilter","cache","ReactKonva","EllipticalSelection","dash","radiusX","radiusY","LassoSelection","MagneticSelection","ObjectSelection","PolygonalSelection","RectangularSelection","ColorSelection","setImage","QuickSelection","PenSelection","lineJoin","lineCap","ZoomSelection","Selection","tool","annotatedSelector","Selecting","ColorAnnotationToolTip","setText","opacity","Layer","setPosition","imageSmoothingEnabled","selectedAnnotationSelector","imageWidthSelector","imageHeightSelector","cursorSelector","Transformer","transformPosition","transformerRef","useRef","boundBox","setBoundBox","rotation","startBox","setStartBox","setCenter","useSound","createAnnotationSoundEffect","playCreateAnnotationSoundEffect","deleteAnnotationSoundEffect","playDeleteAnnotationSoundEffect","getRelativeBox","relativePosition","updateSelectedAnnotation","updatedAnnotation","onMouseEnter","getStage","onMouseLeave","posX","posY","boundBoxFunc","oldBox","newBox","relativeNewBox","onTransform","oppositeAnchorPosition","getActiveAnchor","findOne","getOppositeAnchorPosition","scaledOppositeAnchorPosition","relativeStartBox","onTransformEnd","relativeBoundBox","scaleX","scaleY","roiX","roiY","resizedMaskROI","preserveAspectRatio","scaledOffset","el","getScaledCoordinate","resizedMask","onTransformStart","rotateEnabled","detach","getLayer","batchDraw","cornerRadius","shadowColor","shadowBlur","shadowOffset","Transformers","stagePositionSelector","PenAnnotationToolTip","annotationTool","currentPosition","strokewidth","visibleCategoriesSelector","toRGBA","Annotation","setImageMask","ConfirmedAnnotations","visibleCategories","visibleAnnotations","setVisibleAnnotations","SelectedAnnotation","SelectedAnnotations","Annotations","pointerSelectionSelector","PointerSelection","currentIndexSelector","usePointer","overlappingAnnotationsIds","shift","setShift","useHotkeys","hotkeys","keyup","keydown","currentAnnotation","scaledCurrentPosition","getOverlappingAnnotations","nextAnnotationId","onMouseDown","onMouseUp","annotationsInBox","getAnnotationsInBox","additionalAnnotations","onMouseMove","onPointerClick","Stage","imageRef","stageRef","selectingRef","saveLabelRef","clearLabelRef","setCurrentPosition","scaledImageWidth","scaledImageHeight","zoomAndOffset","scaleBy","zoomIn","deselect","selectedWidth","onWheel","deltaY","useZoom","onZoomDeselect","onZoomMouseUp","onZoomMouseMove","onZoomMouseDown","onZoomWheel","onPointerMouseDown","onPointerMouseMove","onPointerMouseUp","setOperator","loadImage","setup","quickSelectionOperator","useAnnotationTool","useReducer","zoomDragging","zoomSelecting","pointerDragging","pointerSelecting","onBlur","addEventListener","removeEventListener","useWindowFocusHandler","deselectAllTransformers","toArray","tr","deselectAllAnnotations","deselectAnnotation","transformerId","transformer","detachTransformer","useCursor","combinedMask","combinedBoundingBox","subtract","intersect","annotate","line","nodes","layer","getRelativePointerPosition","getAbsoluteTransform","copy","memoizedOnMouseDown","useMemo","throttled","getPointerPosition","relative","getText","rawImagePosition","func","connect","setTool","useKeyboardShortcuts","draggable","setDraggable","useHandTool","Consumer","getParent","DndProvider","backend","HTML5Backend","Content","onDrop","useLayoutEffect","getBoundingClientRect","useResizeObserver","entry","contentRect","useBoundingClientRect","useDrop","NativeTypes","FILE","drop","collect","monitor","isOver","canDrop","settings","createMuiTheme","overrides","MuiDrawer","paperAnchorDockedLeft","borderRight","paperAnchorDockedRight","borderLeft","MuiListItem","MuiListItemIcon","minWidth","MuiSlider","rail","thumb","track","ImageViewer","setDropped","ThemeProvider","CssBaseline","resources","interpolation","escapeValue","keySeparator","lng","i18n","use","initReactI18next","init","dsn","release","process","npm_package_version","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.eacbdb9c.chunk.js","sourcesContent":["export enum ToolType {\n  ColorAdjustment,\n  ColorAnnotation,\n  EllipticalAnnotation,\n  Hand,\n  LassoAnnotation,\n  MagneticAnnotation,\n  ObjectAnnotation,\n  PenAnnotation,\n  Pointer,\n  PolygonalAnnotation,\n  QuickAnnotation,\n  RectangularAnnotation,\n  Zoom,\n}\n","export enum AnnotationModeType {\n  Add,\n  Intersect,\n  New,\n  Subtract,\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const annotatingSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): boolean => {\n  return state.present.annotating;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const boundingClientRectSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  return state.present.boundingClientRect;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const categoryCountsSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  const catDict: { [id: string]: number } = {};\n  for (let category of state.present.categories) {\n    catDict[category.id] = 0;\n  }\n  for (let image of state.present.images) {\n    for (let annotation of image.annotations) {\n      catDict[annotation.categoryId] += 1;\n    }\n  }\n  return catDict;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const categoriesSelector = ({ state }: { state: HistoryStateType }) => {\n  return state.present.categories;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { CategoryType } from \"../../types/CategoryType\";\nimport { sortBy } from \"underscore\";\n\nexport const createdCategoriesSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  const categories = state.present.categories.filter(\n    (category: CategoryType) => {\n      return category.id !== \"00000000-0000-0000-0000-000000000000\";\n    }\n  );\n\n  return sortBy(categories, \"name\");\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imageInstancesSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  if (!state.present.images.length) return;\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return;\n\n  return image.annotations;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imageSelector = ({ state }: { state: HistoryStateType }) => {\n  if (!state.present.images.length) return;\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return;\n\n  return image;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imageOriginalSrcSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  if (!state.present.images.length) return;\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return;\n\n  return image.originalSrc;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const invertModeSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): boolean => {\n  return state.present.invertMode;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport * as _ from \"lodash\";\nimport { CategoryType } from \"../../types/CategoryType\";\n\nexport const selectedCategorySelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): CategoryType => {\n  const category = _.find(\n    state.present.categories,\n    (category: CategoryType) => {\n      return category.id === state.present.selectedCategory;\n    }\n  );\n\n  return category!;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { AnnotationModeType } from \"../../types/AnnotationModeType\";\n\nexport const selectionModeSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): AnnotationModeType => {\n  return state.present.selectionMode;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const stageHeightSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): number => {\n  return state.present.stageHeight;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const stageScaleSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): number => {\n  return state.present.stageScale;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const stageWidthSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): number => {\n  return state.present.stageWidth;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ToolType } from \"../../types/ToolType\";\n\nexport const toolTypeSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): ToolType => {\n  return state.present.toolType;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { CategoryType } from \"../../types/CategoryType\";\n\nexport const unknownCategorySelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  return state.present.categories.find((category: CategoryType) => {\n    return category.id === \"00000000-0000-0000-0000-000000000000\";\n  })!;\n};\n","import { ZoomToolOptionsType } from \"../../types/ZoomToolOptionsType\";\nimport { ToolOptionsStateType } from \"../../types/ToolOptionsStateType\";\n\nexport const zoomToolOptionsSelector = ({\n  toolOptions,\n}: {\n  toolOptions: ToolOptionsStateType;\n}): ZoomToolOptionsType => {\n  return toolOptions.zoom;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const zoomSelectionSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): {\n  dragging: boolean;\n  minimum: { x: number; y: number } | undefined;\n  maximum: { x: number; y: number } | undefined;\n  selecting: boolean;\n} => {\n  return state.present.zoomSelection;\n};\n","export default __webpack_public_path__ + \"static/media/texture.2ed6f96c.png\";","import { makeStyles } from \"@material-ui/core/styles\";\nimport texture from \"../../../../images/texture.png\";\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    boxShadow: \"none\",\n    position: \"absolute\",\n  },\n  drawer: {\n    flexShrink: 0,\n    width: theme.spacing(32),\n  },\n  iconButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  paper: {\n    boxShadow: \"inset 0 0 16px #000000\",\n    width: theme.spacing(32),\n    zIndex: 0,\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    backgroundImage: `url(${texture})`,\n  },\n}));\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\n\ntype CollapsibleListProps = {\n  children: any;\n  dense: boolean;\n  primary: string;\n  closed?: boolean;\n};\n\nexport const CollapsibleList = ({\n  children,\n  dense,\n  closed,\n  primary,\n}: CollapsibleListProps) => {\n  const [collapsed, setCollapsed] = React.useState(closed);\n\n  const onClick = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <List dense={dense}>\n      <ListItem button onClick={onClick}>\n        <ListItemIcon>\n          {collapsed ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n        </ListItemIcon>\n\n        <ListItemText primary={primary} />\n      </ListItem>\n\n      <Collapse in={collapsed} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" dense={dense} disablePadding>\n          {children}\n        </List>\n      </Collapse>\n    </List>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/cell-painting.f118ef08.png\";","export enum LanguageType {\n  Arabic,\n  English,\n  Farsi,\n  Finnish,\n  French,\n  German,\n  Greek,\n  Hindi,\n  Hungarian,\n  Spanish,\n}\n","export enum ZoomModeType {\n  In,\n  Out,\n}\n","/*\n * Run-length encoding\n */\n\nexport const decode = (encoded: Array<number>): Uint8ClampedArray => {\n  let decoded = [];\n\n  let background = true;\n\n  for (let i = 0; i < encoded.length; i++) {\n    for (let j = 0; j < encoded[i]; j++) {\n      decoded.push(background ? 0 : 255);\n    }\n\n    background = !background;\n  }\n\n  return new Uint8ClampedArray(decoded);\n};\n\nexport const encode = (\n  decoded: Uint8Array | Uint8ClampedArray\n): Array<number> => {\n  let lastElement = decoded[0];\n\n  let lastSequenceSize = 1;\n\n  let encoded = [];\n\n  if (decoded[0] === 255) {\n    encoded.push(0);\n  }\n\n  for (let i = 1; i < decoded.length; i++) {\n    if (lastElement !== decoded[i]) {\n      encoded.push(lastSequenceSize);\n\n      lastElement = decoded[i];\n\n      lastSequenceSize = 1;\n    } else {\n      lastSequenceSize += 1;\n    }\n  }\n\n  encoded.push(lastSequenceSize);\n\n  return encoded;\n};\n\nexport const fromString = (s: Array<number>) => {\n  let counts = [];\n  let m = 0;\n  let p = 0;\n  let k;\n  let x;\n  let more;\n\n  while (s[p]) {\n    x = 0;\n    k = 0;\n    more = 1;\n\n    while (more) {\n      let c = s[p] - 48;\n      x = x | ((c & 0x1f) << (5 * k));\n      more = c & 0x20;\n      p += 1;\n      k += 1;\n\n      if (!more && c & 0x10) {\n        x = x | (-1 << (5 * k));\n      }\n    }\n\n    if (m > 2) {\n      x += counts[m - 2];\n    }\n\n    counts[m++] = x;\n  }\n\n  return counts;\n};\n\nexport const toImageData = (\n  decoded: Uint8ClampedArray,\n  width: number,\n  height: number\n) => {\n  let data = [];\n\n  for (let i = 0; i < decoded.length; i++) {\n    data.push(...[decoded[i], decoded[i], decoded[i], 255]);\n  }\n\n  const clamped = new Uint8ClampedArray(data);\n\n  return new ImageData(clamped, width, height);\n};\n","import * as _ from \"lodash\";\nimport * as ImageJS from \"image-js\";\nimport { AnnotationType } from \"../types/AnnotationType\";\nimport { decode } from \"./rle\";\nimport { isoLines } from \"marchingsquares\";\nimport { CategoryType } from \"../types/CategoryType\";\nimport { ImageType } from \"../types/ImageType\";\nimport { SerializedAnnotationType } from \"../types/SerializedAnnotationType\";\n\nexport const connectPoints = (\n  coordinates: Array<Array<number>>,\n  image: ImageJS.Image\n) => {\n  let connectedPoints: Array<Array<number>> = [];\n\n  const foo = _.filter(\n    _.zip(coordinates.slice(0, coordinates.length - 1), coordinates.slice(1)),\n    ([current, next]) => {\n      return !_.isEqual(current, next);\n    }\n  );\n  foo.forEach(([current, next]) => {\n    const points = drawLine(current!, next!);\n    connectedPoints = _.concat(connectedPoints, points);\n  });\n  return connectedPoints;\n};\n\nexport const drawLine = (p: Array<number>, q: Array<number>) => {\n  const coords: Array<Array<number>> = [];\n\n  let x: number,\n    y: number,\n    x1: number,\n    y1: number,\n    x2: number,\n    y2: number,\n    dx: number,\n    dy: number,\n    step: number,\n    i: number;\n\n  x1 = Math.round(p[0]);\n  y1 = Math.round(p[1]);\n  x2 = Math.round(q[0]);\n  y2 = Math.round(q[1]);\n\n  dx = x2 - x1;\n  dy = y2 - y1;\n\n  step = Math.abs(dy);\n\n  if (Math.abs(dx) >= Math.abs(dy)) {\n    step = Math.abs(dx);\n  }\n\n  dx = dx / step;\n  dy = dy / step;\n  x = x1;\n  y = y1;\n  i = 1;\n\n  while (i <= step) {\n    coords.push([Math.round(x), Math.round(y)]);\n    x = x + dx;\n    y = y + dy;\n    i = i + 1;\n  }\n\n  return coords;\n};\n\nexport const getIdx = (width: number, nchannels: number) => {\n  return (x: number, y: number, index: number) => {\n    index = index || 0;\n    return Math.floor((width * y + x) * nchannels + index);\n  };\n};\n\n/*\nGiven a click at a position, return all overlapping annotations ids\n */\nexport const getOverlappingAnnotations = (\n  position: { x: number; y: number },\n  annotations: Array<AnnotationType>,\n  imageWidth: number,\n  imageHeight: number\n) => {\n  const overlappingAnnotations = annotations.filter(\n    (annotation: AnnotationType) => {\n      const boundingBox = annotation.boundingBox;\n      if (\n        position.x >= boundingBox[0] &&\n        position.x <= boundingBox[2] &&\n        position.y >= boundingBox[1] &&\n        position.y <= boundingBox[3]\n      ) {\n        //return annotation if clicked on actual selected data\n        const maskROI = new ImageJS.Image(\n          boundingBox[2] - boundingBox[0],\n          boundingBox[3] - boundingBox[1],\n          decode(annotation.mask),\n          { components: 1, alpha: 0 }\n        );\n        if (\n          maskROI.getPixelXY(\n            Math.round(position.x - boundingBox[0]),\n            Math.round(position.y - boundingBox[1])\n          )[0]\n        )\n          return annotation;\n      }\n    }\n  );\n  return overlappingAnnotations.map((annotation: AnnotationType) => {\n    return annotation.id;\n  });\n};\n\nexport const getAnnotationsInBox = (\n  minimum: { x: number; y: number },\n  maximum: { x: number; y: number },\n  annotations: Array<AnnotationType>\n) => {\n  return annotations.filter((annotation: AnnotationType) => {\n    return (\n      minimum.x <= annotation.boundingBox[0] &&\n      minimum.y <= annotation.boundingBox[1] &&\n      maximum.x >= annotation.boundingBox[2] &&\n      maximum.y >= annotation.boundingBox[3]\n    );\n  });\n};\n\nexport const computeContoursFromIsolines = (\n  data: Array<Array<number>>\n): Array<number> => {\n  //pad array to obtain better estimate of contours around mask\n  const pad = 10;\n  const padY = new Array(data[0].length + 2 * pad).fill(0);\n  const padX = new Array(pad).fill(0);\n\n  const paddedMatrix: Array<Array<number>> = [];\n\n  let i;\n  for (i = 0; i < pad; i++) {\n    paddedMatrix.push(padY);\n  }\n  data.forEach((row: Array<number>) => {\n    paddedMatrix.push(padX.concat(row).concat(padX));\n  });\n  for (i = 0; i < pad; i++) {\n    paddedMatrix.push(padY);\n  }\n\n  const largestIsolines = isoLines(paddedMatrix, 1).sort(\n    (a: Array<number>, b: Array<number>) => {\n      return b.length - a.length;\n    }\n  );\n\n  let largestIsoline = largestIsolines[0];\n\n  if (largestIsoline.length <= 5) return [];\n\n  return _.flatten(\n    largestIsoline.map((coord: Array<number>) => {\n      return [Math.round(coord[0] - pad), Math.round(coord[1] - pad)];\n    })\n  );\n};\n\n/*\n * From encoded mask data, get the decoded data and return results as an HTMLImageElement to be used by Konva.Image\n */\nexport const colorOverlayROI = (\n  encodedMask: Array<number>,\n  boundingBox: [number, number, number, number],\n  imageWidth: number,\n  imageHeight: number,\n  color: Array<number>\n): HTMLImageElement | undefined => {\n  if (!encodedMask) return undefined;\n\n  const decodedData = decode(encodedMask);\n\n  const endX = Math.min(imageWidth, boundingBox[2]);\n  const endY = Math.min(imageHeight, boundingBox[3]);\n\n  //extract bounding box params\n  const boxWidth = endX - boundingBox[0];\n  const boxHeight = endY - boundingBox[1];\n\n  const croppedImage = new ImageJS.Image(boxWidth, boxHeight, decodedData, {\n    components: 1,\n    alpha: 0,\n  });\n\n  const colorROIImage = new ImageJS.Image(boxWidth, boxHeight, {\n    components: 3,\n    alpha: 1,\n  });\n\n  const checkNeighbors = (\n    arr: ImageJS.Image,\n    x: number,\n    y: number\n  ): boolean => {\n    if (x === 0 || x === boxWidth - 1) return true;\n    for (let [dx, dy] of [\n      [0, 1],\n      [1, 0],\n      [0, -1],\n      [-1, 0],\n    ]) {\n      if (!arr.getPixelXY(x + dx, y + dy)[0]) return true;\n    }\n    return false;\n  };\n\n  for (let i = 0; i < croppedImage.width; i++) {\n    for (let j = 0; j < croppedImage.height; j++) {\n      if (croppedImage.getPixelXY(i, j)[0] > 0) {\n        if (checkNeighbors(croppedImage, i, j)) {\n          colorROIImage.setPixelXY(i, j, [color[0], color[1], color[2], 255]);\n        } else {\n          colorROIImage.setPixelXY(i, j, [color[0], color[1], color[2], 128]);\n        }\n      } else {\n        colorROIImage.setPixelXY(i, j, [0, 0, 0, 0]);\n      }\n    }\n  }\n\n  const src = colorROIImage.toDataURL(\"image-png\", {\n    useCanvas: true,\n  });\n  const image = new Image();\n  image.src = src;\n\n  return image;\n};\n\n/*\n * Method to rename a cateogry/image if a category/image with this name already exists\n * */\nexport const replaceDuplicateName = (name: string, names: Array<string>) => {\n  let currentName = name;\n  let i = 1;\n  while (names.includes(currentName)) {\n    currentName = name + `_${i}`;\n    i += 1;\n  }\n  return currentName;\n};\n\nexport const saveAnnotationsAsMasks = (\n  images: Array<ImageType>,\n  categories: Array<CategoryType>,\n  zip: any\n): Array<Promise<unknown>> => {\n  return images\n    .map((current: ImageType) => {\n      return current.annotations.map((annotation: AnnotationType) => {\n        return new Promise((resolve, reject) => {\n          const encoded = annotation.mask;\n\n          const decoded = decode(encoded);\n\n          const boundingBox = annotation.boundingBox;\n\n          const endX = Math.min(current.shape.width, boundingBox[2]);\n          const endY = Math.min(current.shape.height, boundingBox[3]);\n\n          //extract bounding box params\n          const boundingBoxWidth = endX - boundingBox[0];\n          const boundingBoxHeight = endY - boundingBox[1];\n\n          const roiMask = new ImageJS.Image(\n            boundingBoxWidth,\n            boundingBoxHeight,\n            decoded,\n            {\n              components: 1,\n              alpha: 0,\n            }\n          );\n\n          const fullImageMaskData = new Uint8Array().fill(0);\n          const fullImageMask = new ImageJS.Image(\n            current.shape.width,\n            current.shape.height,\n            fullImageMaskData,\n            { components: 1, alpha: 0 }\n          );\n\n          for (let i = 0; i < boundingBoxWidth; i++) {\n            for (let j = 0; j < boundingBoxHeight; j++) {\n              if (roiMask.getPixelXY(i, j)[0] > 0) {\n                fullImageMask.setPixelXY(\n                  i + annotation.boundingBox[0],\n                  j + annotation.boundingBox[1],\n                  [255, 255, 255]\n                );\n              }\n            }\n          }\n\n          const blob = fullImageMask.toBlob(\"image/png\");\n\n          const category = categories.find((category: CategoryType) => {\n            return category.id === annotation.categoryId;\n          });\n\n          if (!category) return;\n\n          zip.folder(`${current.name}/${category.name}`);\n          zip.file(\n            `${current.name}/${category.name}/${annotation.id}.png`,\n            blob,\n            {\n              base64: true,\n            }\n          );\n          resolve(true);\n        });\n      });\n    })\n    .flat();\n};\n\nexport const saveAnnotationsAsMatrix = (\n  images: Array<ImageType>,\n  categories: Array<CategoryType>,\n  zip: any,\n  binary: boolean = false\n): Array<Promise<unknown>> => {\n  return images\n    .map((current: ImageType) => {\n      return categories.map((category: CategoryType) => {\n        return new Promise((resolve, reject) => {\n          const fullLabelImage = new ImageJS.Image(\n            current.shape.width,\n            current.shape.height,\n            new Uint8Array().fill(0),\n            { components: 1, alpha: 0 }\n          );\n          let n = binary ? 255 : 1;\n          for (let annotation of current.annotations) {\n            if (annotation.categoryId !== category.id) continue;\n            const encoded = annotation.mask;\n            const decoded = decode(encoded);\n            const boundingBox = annotation.boundingBox;\n            const endX = Math.min(current.shape.width, boundingBox[2]);\n            const endY = Math.min(current.shape.height, boundingBox[3]);\n\n            //extract bounding box params\n            const boundingBoxWidth = endX - boundingBox[0];\n            const boundingBoxHeight = endY - boundingBox[1];\n\n            const roiMask = new ImageJS.Image(\n              boundingBoxWidth,\n              boundingBoxHeight,\n              decoded,\n              {\n                components: 1,\n                alpha: 0,\n              }\n            );\n            for (let i = 0; i < boundingBoxWidth; i++) {\n              for (let j = 0; j < boundingBoxHeight; j++) {\n                if (roiMask.getPixelXY(i, j)[0] > 0) {\n                  fullLabelImage.setPixelXY(\n                    i + annotation.boundingBox[0],\n                    j + annotation.boundingBox[1],\n                    [n, n, n]\n                  );\n                }\n              }\n            }\n            if (!binary) n += 1;\n          }\n          const blob = fullLabelImage.toBlob(\"image/png\");\n          zip.folder(`${current.name}`);\n          zip.file(`${current.name}/${category.name}.png`, blob, {\n            base64: true,\n          });\n          resolve(true);\n        });\n      });\n    })\n    .flat();\n};\n\nexport const importSerializedAnnotations = (\n  annotation: SerializedAnnotationType,\n  existingCategories: Array<CategoryType>\n): { annotation_out: AnnotationType; categories: Array<CategoryType> } => {\n  const mask = annotation.annotationMask\n    .split(\" \")\n    .map((x: string) => parseInt(x));\n\n  let newCategories = existingCategories;\n  //if category does not already exist in state, add it\n  if (\n    !existingCategories\n      .map((category: CategoryType) => category.id)\n      .includes(annotation.annotationCategoryId)\n  ) {\n    const category: CategoryType = {\n      color: annotation.annotationCategoryColor,\n      id: annotation.annotationCategoryId,\n      name: annotation.annotationCategoryName,\n      visible: true,\n    };\n    newCategories = [...newCategories, category];\n  }\n\n  return {\n    annotation_out: {\n      boundingBox: [\n        annotation.annotationBoundingBoxX,\n        annotation.annotationBoundingBoxY,\n        annotation.annotationBoundingBoxWidth,\n        annotation.annotationBoundingBoxHeight,\n      ],\n      categoryId: annotation.annotationCategoryId,\n      id: annotation.annotationId,\n      mask: mask,\n    },\n    categories: newCategories,\n  };\n};\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { CategoryType } from \"../../types/CategoryType\";\nimport { ImageType } from \"../../types/ImageType\";\nimport { ToolType } from \"../../types/ToolType\";\nimport { AnnotationType } from \"../../types/AnnotationType\";\nimport { AnnotationModeType } from \"../../types/AnnotationModeType\";\nimport * as _ from \"lodash\";\nimport colorImage from \"../../images/cell-painting.png\";\nimport { LanguageType } from \"../../types/LanguageType\";\nimport * as tensorflow from \"@tensorflow/tfjs\";\nimport { StateType } from \"../../types/StateType\";\nimport { SerializedAnnotationType } from \"../../types/SerializedAnnotationType\";\nimport { ChannelType } from \"../../types/ChannelType\";\nimport { SerializedFileType } from \"../../types/SerializedFileType\";\nimport {\n  importSerializedAnnotations,\n  replaceDuplicateName,\n} from \"../../image/imageHelper\";\n\nconst initialImage =\n  process.env.NODE_ENV === \"development\"\n    ? {\n        avatar: colorImage,\n        id: \"f8eecf66-8776-4e14-acd2-94b44603a1a7\",\n        annotations: [],\n        name: \"example.png\",\n        shape: {\n          channels: 3,\n          frames: 1,\n          height: 512,\n          planes: 1,\n          width: 512,\n        },\n        originalSrc: colorImage,\n        src: colorImage,\n      }\n    : undefined;\n\nconst initialCategories =\n  process.env.NODE_ENV === \"development\"\n    ? [\n        {\n          color: \"#AAAAAA\",\n          id: \"00000000-0000-0000-0000-000000000000\",\n          name: \"Unknown\",\n          visible: true,\n        },\n        {\n          color: \"#a08cd2\",\n          id: \"00000000-0000-0000-0000-000000000001\",\n          name: \"Cell membrane\",\n          visible: true,\n        },\n        {\n          color: \"#b8ddf3\",\n          id: \"00000000-0000-0000-0000-000000000002\",\n          name: \"Cell nucleus\",\n          visible: true,\n        },\n      ]\n    : [\n        {\n          color: \"#AAAAAA\",\n          id: \"00000000-0000-0000-0000-000000000000\",\n          name: \"Unknown\",\n          visible: true,\n        },\n      ];\n\nconst initialState: StateType = {\n  annotated: false,\n  annotating: false,\n  boundingClientRect: new DOMRect(),\n  brightness: 0,\n  categories: initialCategories.length > 0 ? initialCategories : [],\n  channels: [\n    //R, G, and B channels by default\n    {\n      range: [0, 255],\n      visible: true,\n    },\n    {\n      range: [0, 255],\n      visible: true,\n    },\n    {\n      range: [0, 255],\n      visible: true,\n    },\n  ],\n  currentIndex: 0,\n  cursor: \"default\",\n  contrast: 0,\n  exposure: 0,\n  hue: 0,\n  activeImageId: initialImage ? initialImage.id : undefined,\n  images: initialImage ? [initialImage] : [],\n  invertMode: false,\n  language: LanguageType.English,\n  offset: { x: 0, y: 0 },\n  penSelectionBrushSize: 32,\n  pointerSelection: {\n    dragging: false,\n    minimum: undefined,\n    maximum: undefined,\n    selecting: false,\n  },\n  quickSelectionBrushSize: 40,\n  saturation: 0,\n  selectedAnnotation: undefined,\n  selectedAnnotations: [],\n  selectedCategory: \"00000000-0000-0000-0000-000000000000\",\n  selectionMode: AnnotationModeType.New,\n  soundEnabled: true,\n  stageHeight: 1000,\n  stageScale: 1,\n  stageWidth: 1000,\n  stagePosition: { x: 0, y: 0 },\n  toolType: ToolType.RectangularAnnotation,\n  vibrance: 0,\n  zoomSelection: {\n    dragging: false,\n    minimum: undefined,\n    maximum: undefined,\n    selecting: false,\n  },\n};\n\nexport const applicationSlice = createSlice({\n  initialState: initialState,\n  name: \"image-viewer-application\",\n  reducers: {\n    addImages(\n      state: StateType,\n      action: PayloadAction<{ newImages: Array<ImageType> }>\n    ) {\n      //we look for image name duplicates and append number if such duplicates are found\n      const imageNames = state.images.map((image: ImageType) => {\n        return image.name.split(\".\")[0];\n      });\n      const updatedImages = action.payload.newImages.map((image: ImageType) => {\n        const initialName = image.name.split(\".\")[0]; //get name before file extension\n        //add filename extension to updatedName\n        const updatedName =\n          replaceDuplicateName(initialName, imageNames) +\n          \".\" +\n          image.name.split(\".\")[1];\n        return { ...image, name: updatedName };\n      });\n\n      state.images.push(...updatedImages);\n    },\n    clearCategoryAnnotations(\n      state: StateType,\n      action: PayloadAction<{ category: CategoryType }>\n    ) {\n      for (let image of state.images) {\n        image.annotations = image.annotations.filter(\n          (annotation: AnnotationType) => {\n            return annotation.categoryId !== action.payload.category.id;\n          }\n        );\n      }\n    },\n    deleteCategory(\n      state: StateType,\n      action: PayloadAction<{ category: CategoryType }>\n    ) {\n      state.categories = state.categories.filter(\n        (category: CategoryType) => category.id !== action.payload.category.id\n      );\n    },\n    deleteImage(state: StateType, action: PayloadAction<{ id: string }>) {\n      state.images = state.images.filter(\n        (image: ImageType) => image.id !== action.payload.id\n      );\n      if (!state.images.length) state.activeImageId = undefined;\n      else if (\n        state.activeImageId === action.payload.id &&\n        state.images.length\n      ) {\n        state.activeImageId = state.images[0].id;\n      }\n    },\n    deleteAllInstances(\n      state: StateType,\n      action: PayloadAction<{ id: string }>\n    ) {\n      //deletes all instances across all images\n      state.images = state.images.map((image: ImageType) => {\n        return { ...image, annotations: [] };\n      });\n    },\n    deleteImageInstances(\n      state: StateType,\n      action: PayloadAction<{ imageId: string }>\n    ) {\n      //deletes all instances across a given image\n      state.images = state.images.map((image: ImageType) => {\n        if (image.id === action.payload.imageId) {\n          return { ...image, annotations: [] };\n        } else return image;\n      });\n    },\n    deleteImageInstance(\n      //deletes given instance on active image\n      state: StateType,\n      action: PayloadAction<{ id: string }>\n    ) {\n      if (!state.activeImageId) return;\n\n      state.images = state.images.map((image: ImageType) => {\n        if (image.id === state.activeImageId) {\n          const updatedAnnotations = image.annotations.filter(\n            (instance: AnnotationType) => instance.id !== action.payload.id\n          );\n          return { ...image, annotations: updatedAnnotations };\n        } else return image;\n      });\n    },\n    openAnnotations(\n      state: StateType,\n      action: PayloadAction<{ file: SerializedFileType }>\n    ) {\n      /*\n       * NOTE: The correct image to annotate is found by looking at the\n       * imageFilename property in the imported annotation file. -- Alice\n       */\n      if (!state.activeImageId) return;\n\n      const annotations = action.payload.file.annotations.map(\n        (annotation: SerializedAnnotationType): AnnotationType => {\n          const { annotation_out, categories } = importSerializedAnnotations(\n            annotation,\n            state.categories\n          );\n          state.categories = categories;\n          return annotation_out;\n        }\n      );\n\n      const loaded: ImageType = {\n        avatar: action.payload.file.imageData,\n        id: action.payload.file.imageId,\n        src: action.payload.file.imageData,\n        originalSrc: action.payload.file.imageData,\n        name: action.payload.file.imageFilename,\n        annotations: annotations,\n        shape: {\n          channels: action.payload.file.imageChannels,\n          frames: action.payload.file.imageFrames,\n          height: action.payload.file.imageHeight,\n          planes: action.payload.file.imagePlanes,\n          width: action.payload.file.imageWidth,\n        },\n      };\n\n      state.images.push(...[loaded]);\n    },\n    setAnnotated(\n      state: StateType,\n      action: PayloadAction<{ annotated: boolean }>\n    ) {\n      state.annotated = action.payload.annotated;\n    },\n    setAnnotating(\n      state: StateType,\n      action: PayloadAction<{ annotating: boolean }>\n    ) {\n      state.annotating = action.payload.annotating;\n    },\n    setBoundingClientRect(\n      state: StateType,\n      action: PayloadAction<{ boundingClientRect: DOMRect }>\n    ) {\n      state.boundingClientRect = action.payload.boundingClientRect;\n    },\n    setBrightness(\n      state: StateType,\n      action: PayloadAction<{ brightness: number }>\n    ) {\n      state.brightness = action.payload.brightness;\n    },\n    setCategories(\n      state: StateType,\n      action: PayloadAction<{ categories: Array<CategoryType> }>\n    ) {\n      state.categories = action.payload.categories;\n    },\n    setCategoryVisibility(\n      state: StateType,\n      action: PayloadAction<{ category: CategoryType; visible: boolean }>\n    ) {\n      const category = _.find(state.categories, (category) => {\n        return category.id === action.payload.category.id;\n      });\n      if (!category) return;\n      category.visible = action.payload.visible;\n      state.categories = [\n        ...state.categories.filter((category) => {\n          return category.id !== action.payload.category.id;\n        }),\n        category,\n      ];\n    },\n    setContrast(state: StateType, action: PayloadAction<{ contrast: number }>) {\n      state.contrast = action.payload.contrast;\n    },\n    setCurrentIndex(\n      state: StateType,\n      action: PayloadAction<{ currentIndex: number }>\n    ) {\n      state.currentIndex = action.payload.currentIndex;\n    },\n    setExposure(state: StateType, action: PayloadAction<{ exposure: number }>) {\n      state.exposure = action.payload.exposure;\n    },\n    setHue(state: StateType, action: PayloadAction<{ hue: number }>) {\n      state.hue = action.payload.hue;\n    },\n    setActiveImage(state: StateType, action: PayloadAction<{ image: string }>) {\n      state.activeImageId = action.payload.image;\n      const activeImage = state.images.find((image: ImageType) => {\n        return image.id === action.payload.image;\n      });\n      if (!activeImage) return;\n      const defaultChannels: Array<ChannelType> = []; //number of channels depends on whether image is greyscale or RGB\n      for (let i = 0; i < activeImage.shape.channels; i++) {\n        defaultChannels.push({\n          range: [0, 255],\n          visible: true,\n        });\n      }\n      state.channels = defaultChannels;\n    },\n    setImageInstances(\n      state: StateType,\n      action: PayloadAction<{ instances: Array<AnnotationType> }>\n    ) {\n      if (!state.activeImageId) return;\n\n      //update corresponding image object in array of Images stored in state\n      state.images = state.images.map((image: ImageType) => {\n        if (state.activeImageId !== image.id) {\n          return image;\n        } else {\n          return { ...image, annotations: action.payload.instances };\n        }\n      });\n    },\n    setImageSrc(state: StateType, action: PayloadAction<{ src: string }>) {\n      if (!state.activeImageId) return;\n      state.images = state.images.map((image: ImageType) => {\n        if (state.activeImageId !== image.id) {\n          return image;\n        } else {\n          return { ...image, src: action.payload.src };\n        }\n      });\n    },\n    setImages(\n      state: StateType,\n      action: PayloadAction<{ images: Array<ImageType> }>\n    ) {\n      state.images = action.payload.images;\n    },\n    setChannels(\n      state: StateType,\n      action: PayloadAction<{\n        channels: Array<ChannelType>;\n      }>\n    ) {\n      state.channels = action.payload.channels;\n    },\n    setCursor(\n      state: StateType,\n      action: PayloadAction<{\n        cursor: string;\n      }>\n    ) {\n      state.cursor = action.payload.cursor;\n    },\n    setInvertMode(\n      state: StateType,\n      action: PayloadAction<{ invertMode: boolean }>\n    ) {\n      state.invertMode = action.payload.invertMode;\n    },\n    setLanguage(\n      state: StateType,\n      action: PayloadAction<{ language: LanguageType }>\n    ) {\n      state.language = action.payload.language;\n    },\n    setOffset(\n      state: StateType,\n      action: PayloadAction<{ offset: { x: number; y: number } }>\n    ) {\n      state.offset = action.payload.offset;\n    },\n    setOperation(\n      state: StateType,\n      action: PayloadAction<{ operation: ToolType }>\n    ) {\n      state.toolType = action.payload.operation;\n    },\n    setPenSelectionBrushSize(\n      state: StateType,\n      action: PayloadAction<{ penSelectionBrushSize: number }>\n    ) {\n      state.penSelectionBrushSize = action.payload.penSelectionBrushSize;\n    },\n    setPointerSelection(\n      state: StateType,\n      action: PayloadAction<{\n        pointerSelection: {\n          dragging: boolean;\n          minimum: { x: number; y: number } | undefined;\n          maximum: { x: number; y: number } | undefined;\n          selecting: boolean;\n        };\n      }>\n    ) {\n      state.pointerSelection = action.payload.pointerSelection;\n    },\n    setQuickSelectionBrushSize(\n      state: StateType,\n      action: PayloadAction<{ quickSelectionBrushSize: number }>\n    ) {\n      state.quickSelectionBrushSize = action.payload.quickSelectionBrushSize;\n    },\n    setSaturation(\n      state: StateType,\n      action: PayloadAction<{ saturation: number }>\n    ) {\n      state.saturation = action.payload.saturation;\n    },\n    setSelectedCategory(\n      state: StateType,\n      action: PayloadAction<{ selectedCategory: string }>\n    ) {\n      state.selectedCategory = action.payload.selectedCategory;\n    },\n    setSelectedAnnotations(\n      state: StateType,\n      action: PayloadAction<{\n        selectedAnnotations: Array<AnnotationType>;\n        selectedAnnotation: AnnotationType | undefined;\n      }>\n    ) {\n      state.selectedAnnotations = action.payload.selectedAnnotations;\n      state.selectedAnnotation = action.payload.selectedAnnotation;\n    },\n    setSelectionMode(\n      state: StateType,\n      action: PayloadAction<{ selectionMode: AnnotationModeType }>\n    ) {\n      state.selectionMode = action.payload.selectionMode;\n    },\n    setStageHeight(\n      state: StateType,\n      action: PayloadAction<{ stageHeight: number }>\n    ) {\n      state.stageHeight = action.payload.stageHeight;\n    },\n    setStagePosition(\n      state: StateType,\n      action: PayloadAction<{ stagePosition: { x: number; y: number } }>\n    ) {\n      state.stagePosition = action.payload.stagePosition;\n    },\n    setStageScale(\n      state: StateType,\n      action: PayloadAction<{ stageScale: number }>\n    ) {\n      state.stageScale = action.payload.stageScale;\n    },\n    setStageWidth(\n      state: StateType,\n      action: PayloadAction<{ stageWidth: number }>\n    ) {\n      state.stageWidth = action.payload.stageWidth;\n    },\n    setSoundEnabled(\n      state: StateType,\n      action: PayloadAction<{ soundEnabled: boolean }>\n    ) {\n      state.soundEnabled = action.payload.soundEnabled;\n    },\n    setVibrance(state: StateType, action: PayloadAction<{ vibrance: number }>) {\n      state.vibrance = action.payload.vibrance;\n    },\n    setZoomSelection(\n      state: StateType,\n      action: PayloadAction<{\n        zoomSelection: {\n          dragging: boolean;\n          minimum: { x: number; y: number } | undefined;\n          maximum: { x: number; y: number } | undefined;\n          selecting: boolean;\n        };\n      }>\n    ) {\n      state.zoomSelection = action.payload.zoomSelection;\n    },\n  },\n  extraReducers: {\n    [\"thunks/loadLayersModel/fulfilled\"]: (\n      state: StateType,\n      action: PayloadAction<tensorflow.LayersModel>\n    ) => {\n      console.info(action.payload);\n    },\n  },\n});\n\nexport const {\n  addImages,\n  deleteCategory,\n  deleteAllInstances,\n  deleteImage,\n  deleteImageInstance,\n  deleteImageInstances,\n  setActiveImage,\n  setAnnotating,\n  setAnnotated,\n  setBoundingClientRect,\n  setBrightness,\n  setCategories,\n  setCategoryVisibility,\n  setChannels,\n  setContrast,\n  setCurrentIndex,\n  setCursor,\n  setExposure,\n  setHue,\n  setImageInstances,\n  setImages,\n  setInvertMode,\n  setLanguage,\n  setOffset,\n  setOperation,\n  setPenSelectionBrushSize,\n  setPointerSelection,\n  setQuickSelectionBrushSize,\n  setSaturation,\n  setSelectedAnnotations,\n  setSelectionMode,\n  setSelectedCategory,\n  setSoundEnabled,\n  setStageHeight,\n  setStagePosition,\n  setStageScale,\n  setStageWidth,\n  setVibrance,\n  setZoomSelection,\n} = applicationSlice.actions;\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ToolOptionsStateType } from \"../../types/ToolOptionsStateType\";\nimport { ZoomModeType } from \"../../types/ZoomModeType\";\nimport { ZoomToolOptionsType } from \"../../types/ZoomToolOptionsType\";\nimport { ColorAdjustmentOptionsType } from \"../../types/ColorAdjustmentOptionsType\";\n\nconst initialState: ToolOptionsStateType = {\n  colorAdjustment: {\n    blackPoint: 0,\n    brightness: 0,\n    contrast: 0,\n    exposure: 0,\n    highlights: 0,\n    hue: 0,\n    saturation: 0,\n    shadows: 0,\n    vibrance: 0,\n  },\n  zoom: {\n    automaticCentering: true,\n    mode: ZoomModeType.In,\n    scale: 1.0,\n    toActualSize: false,\n    toFit: false,\n  },\n};\n\nexport const toolOptionsSlice = createSlice({\n  initialState: initialState,\n  name: \"image-viewer-tool-options\",\n  reducers: {\n    setColorAdjustmentOptions(\n      state: ToolOptionsStateType,\n      action: PayloadAction<{ options: ColorAdjustmentOptionsType }>\n    ) {\n      state.colorAdjustment = action.payload.options;\n    },\n    setZoomToolOptions(\n      state: ToolOptionsStateType,\n      action: PayloadAction<{ options: ZoomToolOptionsType }>\n    ) {\n      state.zoom = action.payload.options;\n    },\n  },\n});\n\nexport const { setZoomToolOptions } = toolOptionsSlice.actions;\n","import { combineReducers } from \"redux\";\nimport { applicationSlice } from \"../slices\";\nimport { toolOptionsSlice } from \"../slices/toolOptionsSlice\";\nimport undoable, { groupByActionTypes } from \"redux-undo\";\nimport { StateType } from \"../../types/StateType\";\nimport { HistoryStateType } from \"../../types/HistoryStateType\";\nimport * as _ from \"lodash\";\n\nconst filterActions = (\n  action: any,\n  currentState: StateType,\n  previousHistory: HistoryStateType\n) => {\n  const actions = [\n    \"image-viewer-application/setImageInstances\",\n    \"image-viewer-application/setAnnotated\",\n    \"image-viewer-application/setAnnotating\",\n    \"image-viewer-application/deleteImageInstance\",\n    \"image-viewer-application/setSelectedAnnotation\",\n    \"image-viewer-application/setSelectedAnnotationId\",\n  ];\n  return _.includes(actions, action.type);\n};\n\nconst reducers = {\n  state: undoable(applicationSlice.reducer, {\n    filter: filterActions,\n    groupBy: groupByActionTypes(\"image-viewer-application/deleteImageInstance\"),\n  }),\n  toolOptions: toolOptionsSlice.reducer,\n};\n\nexport const reducer = combineReducers(reducers);\n","import {\n  configureStore,\n  EnhancedStore,\n  Middleware,\n  StoreEnhancer,\n} from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport { reducer } from \"../reducer\";\nimport * as Sentry from \"@sentry/react\";\nimport thunk from \"redux-thunk\";\n\nconst sentryReduxEnhancer = Sentry.createReduxEnhancer({});\n\nconst enhancers: StoreEnhancer[] = [sentryReduxEnhancer];\n\nconst middleware: Middleware[] = [logger, thunk];\n\nconst preloadedState = {};\n\nconst options = {\n  devTools: true,\n  enhancers: enhancers,\n  middleware: middleware,\n  preloadedState: preloadedState,\n  reducer: reducer,\n};\n\nexport const store: EnhancedStore = configureStore(options);\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst echo = async (message: string): Promise<string> => {\n  return message;\n};\n\nexport const echoThunk = createAsyncThunk(\n  \"thunks/echo\",\n  async (message: string) => {\n    return await echo(message);\n  }\n);\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport * as tensorflow from \"@tensorflow/tfjs\";\n\nexport const loadLayersModelThunk = createAsyncThunk(\n  \"thunks/loadLayersModel\",\n  async ({ name, path }: { name: string; path: string }) => {\n    return await tensorflow.loadLayersModel(path);\n  }\n);\n","import React from \"react\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport LabelIcon from \"@material-ui/icons/Label\";\nimport LabelOutlinedIcon from \"@material-ui/icons/LabelOutlined\";\nimport { CategoryType } from \"../../../../types/CategoryType\";\nimport { useDispatch } from \"react-redux\";\nimport { applicationSlice } from \"../../../../store\";\n\ntype CategoryListItemCheckboxProps = {\n  category: CategoryType;\n};\n\nexport const CategoryListItemCheckbox = ({\n  category,\n}: CategoryListItemCheckboxProps) => {\n  const dispatch = useDispatch();\n\n  const onCheckboxClick = () => {\n    dispatch(\n      applicationSlice.actions.setCategoryVisibility({\n        category: category,\n        visible: !category.visible,\n      })\n    );\n  };\n\n  return (\n    <ListItemIcon>\n      <Checkbox\n        checked={category.visible}\n        checkedIcon={<LabelIcon style={{ color: category.color }} />}\n        disableRipple\n        edge=\"start\"\n        icon={<LabelOutlinedIcon style={{ color: category.color }} />}\n        onClick={onCheckboxClick}\n        tabIndex={-1}\n      />\n    </ListItemIcon>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const languageSelector = ({ state }: { state: HistoryStateType }) => {\n  return state.present.language;\n};\n","// prettier-ignore\nimport {language} from \"./language\";\n\nconst de: language = {\n  translation: {\n    Cancel: \"Abbrechen\",\n    Categories: \"Kategorien\",\n    \"Create category\": \"Neue Kategorie\",\n    \"Create new classifier\": \"Neuer Classifier\",\n    \"Delete category\": \"Lösche Kategorie\",\n    \"Delete images\": \"Lösche Bilder\",\n    Description: \"Beschreibung\",\n    Edit: \"Edit\",\n    \"Edit category\": \"Bearbeite Kategorie\",\n    Help: \"Hilfe\",\n    \"Hide other categories\": \"Blende andere Kategorien aus\",\n    \"Hide sidebar\": \"Blende Sidebar aus\",\n    \"Import images\": \"Bilder hinzufügen\",\n    Logo: \"Logo\",\n    Model: \"Modell\",\n    \"Open classifier\": \"Öffne Classifier\",\n    \"Open example classifier\": \"Öffne Beispiel Classifier\",\n    \"Open weights\": \"Öffne Gewichte\",\n    Open: \"Öffnen\",\n    \"Run classifier\": \"Starte Classfier\",\n    \"Save annotations and predictions\": \"Speicher Labels und Predictions\",\n    \"Save classifier\": \"Speicher Classifier\",\n    \"Save weights\": \"Speicher Gewichte\",\n    Save: \"Speichern\",\n    \"Search images\": \"Durchsuche Bilder\",\n    \"Send feedback\": \"Sende Feedback\",\n    Settings: \"Einstellungen\",\n    \"Show sidebar\": \"Blende Sidebar ein\",\n    Unknown: \"Unbekannt\",\n  },\n};\n\nexport default de;\n","import { language } from \"./language\";\n\nconst en: language = {\n  translation: {\n    Cancel: \"Cancel\",\n    Categories: \"Categories\",\n    \"Create category\": \"Create category\",\n    \"Create new classifier\": \"Create new classifier\",\n    \"Delete category\": \"Delete category\",\n    \"Delete images\": \"Delete images\",\n    Description: \"Description\",\n    Edit: \"Edit\",\n    \"Edit category\": \"Edit category\",\n    Help: \"Help\",\n    \"Hide other categories\": \"Hide other categories\",\n    \"Hide sidebar\": \"Hide sidebar\",\n    \"Import images\": \"Import images\",\n    Logo: \"Logo\",\n    Model: \"Model\",\n    \"Open classifier\": \"Open classifier\",\n    \"Open example classifier\": \"Open example classifier\",\n    \"Open weights\": \"Open weights\",\n    Open: \"Open\",\n    \"Run classifier\": \"Run classifier\",\n    \"Save annotations and predictions\": \"Save annotations and predictions\",\n    \"Save classifier\": \"Save classifier\",\n    \"Save weights\": \"Save weights\",\n    Save: \"Save\",\n    \"Search images\": \"Search images\",\n    \"Send feedback\": \"Send feedback\",\n    Settings: \"Settings\",\n    \"Show sidebar\": \"Show sidebar\",\n    Unknown: \"Unknown\",\n  },\n};\n\nexport default en;\n","import { language } from \"./language\";\n\nconst fas: language = {\n  translation: {\n    \"Actual size\": \"سایز اصلی\",\n    \"Add area\": \"ناحیه اضافه کنید\",\n    \"Annotation mode\": \"حالت گروه توضیحی\",\n    Cancel: \"لفو کردن\",\n    Categories: \"دسته بندی کردن\",\n    \"Center image automatically\": \"تصویر را به طور اتوماتیک در مرکز قرار می دهد\",\n    \"Color annotation\": \"توضیح رنگ ها\",\n    \"Create category\": \"ایجاد دسته بندی\",\n    \"Create new classifier\": \"ایجاد طبقه بندی جدید\",\n    Create: \"ایجاد\",\n    \"Delete category\": \"پاک کردن دسته بندی\",\n    \"Delete images\": \"پاک کردن تصویر\",\n    Description: \"توضیحات\",\n    Edit: \"ویرایش\",\n    \"Edit category\": \"ویرایش دسته بندی\",\n    \"Elliptical annotation\": \"گروه توضیحی بیضوی\",\n    Export: \"فرستادن\",\n    \"Export annotations\": \"فرستادن گروه توضیحی\",\n    \"Freehand annotation\": \"گروه توضیحی آزاد\",\n    Help: \"کمک یابی\",\n    \"Hide category\": \"پنهان سازی طبقه بندی\",\n    \"Hide other categories\": \"پنهان سازی سایر طبقه بندی ها\",\n    \"Hide sidebar\": \"پنهان سازی منوی کناری\",\n    \"Import images\": \"آوردن تصاویر\",\n    Intersection: \"تلاقی کردن\",\n    \"Invert annotation\": \"معکوس کردن گروه توضیحی\",\n    \"Lasso annotation\": \"گروه توضیحی کمند\",\n    Logo: \"علامت\",\n    \"Magnetic annotation\": \"گروه توضیحی آهنربایی\",\n    Model: \"نمونه\",\n    \"Object annotation\": \"گروه توضیحی هدف\",\n    \"Open classifier\": \"باز کردن طبقه بندی\",\n    \"Open example classifier\": \"باز کردن طبقه بندی نمونه\",\n    \"Open image\": \"باز کردن تصویر\",\n    \"Open weights\": \"باز کردن وزن ها\",\n    Open: \"باز کردن\",\n    \"Pen annotation\": \"گروه توضیحی خودکار\",\n    Pointer: \"نشانه گر\",\n    \"Polygonal annotation\": \"گروه توضیحی چند ظلعی\",\n    Name: \"نام\",\n    \"New annotation\": \"گروه توضیحی جدید\",\n    \"Quick annotation\": \"گروه توضیحی سریع\",\n    \"Rectangular annotation\": \"گروه توضیحی مستطیلی\",\n    \"Run classifier\": \"اجرا کردن طبقه بندی\",\n    \"Save annotations and predictions\": \"ذخیره کردن گروه های توضیحی و پیش بینی ها\",\n    \"Save classifier\": \"ذخیره کردن طبقه بندی\",\n    \"Save weights\": \"ذخیره کردن وزن ها\",\n    Save: \"ذخیره کردن\",\n    \"Search images\": \"جستجوی تصاویر\",\n    \"Send feedback\": \"فرستادن پیشنهادات\",\n    Settings: \"تنظیمات\",\n    \"Show category\": \"نشان دادن گروه ها\",\n    \"Show sidebar\": \"نشان دادن منوی کناری\",\n    \"Subtract area\": \"کم کردن ناحیه\",\n    Unknown: \"تعریف نشده\",\n    Zoom: \"بزرگ نمایی\",\n    \"Zoom in\": \"بزرگ نمایی کردن\",\n    \"Zoom mode\": \"حالت بزرگ نمایی\",\n    \"Zoom out\": \"کوچک نمایی کردن\",\n  },\n};\n\nexport default fas;\n\n","// prettier-ignore\nimport {language} from \"./language\";\n\nconst fi: language = {\n  translation: {\n    Cancel: \"Peruuta\",\n    Categories: \"Kategoriat\",\n    \"Create category\": \"Luo kategoria\",\n    \"Create new classifier\": \"Luo uusi luokittelija\",\n    \"Delete category\": \"Poista kategoria\",\n    \"Delete images\": \"Poista kuvat\",\n    Description: \"Kuvaus\",\n    Edit: \"Edit\",\n    \"Edit category\": \"Muokkaa kategoriaa\",\n    Help: \"Apua\",\n    \"Hide other categories\": \"Piilota muut kategoriat\",\n    \"Hide sidebar\": \"Piilota sivupalkki\",\n    \"Import images\": \"Tuo kuvat\",\n    Logo: \"Logo\",\n    Model: \"Malli\",\n    \"Open classifier\": \"Avaa luokittelija\",\n    \"Open example classifier\": \"Avaa esimerkkiluokittelija\",\n    \"Open weights\": \"Avaa painot\",\n    Open: \"Avaa\",\n    \"Run classifier\": \"Suorita luokittelija\",\n    \"Save annotations and predictions\":\n      \"Tallenna annotaatiot ja luokittelun tulos\",\n    \"Save classifier\": \"Tallenna luokittelija\",\n    \"Save weights\": \"Tallenna painot\",\n    Save: \"Tallenna\",\n    \"Search images\": \"Etsi kuvia\",\n    \"Send feedback\": \"Lähetä palautetta\",\n    Settings: \"Asetukset\",\n    \"Show sidebar\": \"Näytä sivupalkki\",\n    Unknown: \"Tuntematon\",\n  },\n};\n\nexport default fi;\n","// prettier-ignore\nimport {language} from \"./language\";\n\nconst gr: language = {\n  translation: {\n    Cancel: \"Άκυρο\",\n    Categories: \"Κατηγορίες\",\n    \"Create category\": \"Δημιουργία κατηγορίας\",\n    \"Create new classifier\": \"Νέος ταξινομητής\",\n    \"Delete category\": \"Διαγραφή κατηγορίας\",\n    \"Delete images\": \"Διαγραφή εικόνων\",\n    Description: \"Περιγραφή\",\n    Edit: \"Επεξεργασία\",\n    \"Edit category\": \"Επεξεργασία κατηγορίας\",\n    Help: \"Βοήθεια\",\n    \"Hide other categories\": \"Απόκρυψη άλλων κατηγοριών\",\n    \"Hide sidebar\": \"Απόκρυψη πλευρικής γραμμής\",\n    \"Import images\": \"Εισαγωγή εικόνων\",\n    Logo: \"Λογότυπο\",\n    Model: \"Mοντέλο\",\n    \"Open classifier\": \"Άνοιγμα ταξινομητή\",\n    \"Open example classifier\": \"Παράδειγμα ταξινομητή\",\n    \"Open weights\": \"Άνοιγμα παραμέτρων\",\n    Open: \"Άνοιγμα\",\n    \"Run classifier\": \"Εκτέλεση ταξινομητή\",\n    \"Save annotations and predictions\": \"Αποθήκευση ετικετών και προβλέψεων\",\n    \"Save classifier\": \"Αποθήκευση ταξινομητή\",\n    \"Save weights\": \"Αποθήκευση παραμέτρων\",\n    Save: \"Αποθήκευση\",\n    \"Search images\": \"Αναζήτηση εικόνων\",\n    \"Send feedback\": \"Eπικοινωνια\",\n    Settings: \"Ρυθμίσεις\",\n    \"Show sidebar\": \"Εμφάνιση πλευρικής γραμμής\",\n    Unknown: \"Άγνωστο\",\n  },\n};\n\nexport default gr;\n","// prettier-ignore\nimport {language} from \"./language\";\n\nconst hi: language = {\n  translation: {\n    Cancel: \"रद्द करें\",\n    Categories: \"सारे वर्ग\",\n    \"Create category\": \"वर्ग बनाएँ\",\n    \"Create new classifier\": \"नया वर्गीकर्त्ता बनाएं\", // वर्गीकर्त्ता = classifier but is rarely used; consider transliterating instead\n    \"Delete category\": \"वर्ग हटाएँ\",\n    \"Delete images\": \"चित्रों को हटाएँ\",\n    Description: \"विवरण\",\n    \"Edit category\": \"वर्ग का बदलाव करें\",\n    Help: \"सहायता\",\n    \"Hide other categories\": \"बाकि वर्गों को छिपाएं\",\n    \"Hide sidebar\": \"साइडबार छिपाएं\",\n    \"Import images\": \"चित्रों को आयात करें\",\n    Logo: \"लोगो\", // transliterated (Logo) but that's ok because it is a loanword\n    Model: \"मॉडल\", // transliterated (Model) but should figure out an appropriate abstraction and translate that\n    \"Open classifier\": \"वर्गीकर्त्ता खोलें\",\n    \"Open example classifier\": \"उदाहरण का वर्गीकर्त्ता खोलें\",\n    \"Open weights\": \"वेइट्स खोलें\",\n    Open: \"खोलें\",\n    \"Run classifier\": \"वर्गीकर्त्ता को चलाएं\",\n    \"Save annotations and predictions\": \"टिप्पणी तथा अनुमान सहेजें\", // व्याख्या is an alternative to टिप्पणी\n    \"Save classifier\": \"वर्गीकर्त्ता सहेजें\",\n    \"Save weights\": \"वेइट्स सहेजें\",\n    Save: \"सहेजें\",\n    \"Search images\": \"चित्र खोजें\",\n    \"Send feedback\": \"प्रतिक्रिया भेजें\",\n    Settings: \"सेटिंग्स\",\n    \"Show sidebar\": \"साइडबार दिखाएं\",\n    Unknown: \"अज्ञात\", // should be used as an adjective before a noun\n  },\n};\n\nexport default hi;\n","// prettier-ignore\nimport {language} from \"./language\";\n\nconst hu: language = {\n  translation: {\n    Cancel: \"Mégse\",\n    Categories: \"Osztályok\",\n    \"Create category\": \"Új osztály létrehozása\",\n    \"Create new classifier\": \"Új osztályozó létrehozása\",\n    \"Delete category\": \"Osztály törlése\",\n    \"Delete images\": \"Képek törlése\",\n    Description: \"Leírás\",\n    Edit: \"Edit\",\n    \"Edit category\": \"Kategória szerkesztése\",\n    Help: \"Súgó\",\n    \"Hide other categories\": \"Többi osztály elrejtése\",\n    \"Hide sidebar\": \"Oldalsáv elrejtése\",\n    \"Import images\": \"Képek importálása\",\n    Logo: \"Logó\",\n    Model: \"Modell\",\n    \"Open classifier\": \"Osztályozó betöltése\",\n    \"Open example classifier\": \"Példa osztályozó betöltése\",\n    \"Open weights\": \"Súlyok betöltése\",\n    Open: \"Megnyitás\",\n    \"Run classifier\": \"Osztályozó futtatása\",\n    \"Save annotations and predictions\": \"Címkék és predikciók mentése\",\n    \"Save classifier\": \"Osztályozó mentése\",\n    \"Save weights\": \"Súlyok mentése\",\n    Save: \"Mentés\",\n    \"Search images\": \"Képek keresése\",\n    \"Send feedback\": \"Visszajelzés küldése\",\n    Settings: \"Beállítások\",\n    \"Show sidebar\": \"Oldalsáv megjelenítése\",\n    Unknown: \"Ismeretlen\",\n  },\n};\n\nexport default hu;\n","// prettier-ignore\nimport {language} from \"./language\";\n\nconst se: language = {\n  translation: {\n    Cancel: \"Annullera\",\n    Categories: \"kategorier\",\n    \"Create category\": \"Skapa kategori\",\n    \"Create new classifier\": \"Skapa ny klassificerare\",\n    \"Delete category\": \"Ta bort kategori\",\n    \"Delete images\": \"Ta bort bilder\",\n    Description: \"Beskrivning\",\n    Edit: \"Edit\",\n    \"Edit category\": \"Redigera kategori\",\n    Help: \"Hjälp\",\n    \"Hide other categories\": \"gömma andra kategorier\",\n    \"Hide sidebar\": \"Dölj sidfältet\",\n    \"Import images\": \"Importera bilder\",\n    Logo: \"Logo\",\n    Model: \"Modell\",\n    \"Open classifier\": \"Öppna klassificerare\",\n    \"Open example classifier\": \"Öppna exempel klassificeraren\",\n    \"Open weights\": \"Öppna vikter\",\n    Open: \"Öppna\",\n    \"Run classifier\": \"Kör klassificeringsenheten\",\n    \"Save annotations and predictions\": \"Spara kommentarer och förutsägelser\",\n    \"Save classifier\": \"Spara klassificerare\",\n    \"Save weights\": \"Spara vikter\",\n    Save: \"Spara\",\n    \"Search images\": \"Sök bilder\",\n    \"Send feedback\": \"Skicka feedback\",\n    Settings: \"Inställningar\",\n    \"Show sidebar\": \"Visa sidofältet\",\n    Unknown: \"Okänd\",\n  },\n};\n\nexport default se;\n","import { language } from \"./language\";\n\nconst fr: language = {\n  translation: {\n    \"Actual size\": \"Taille réelle\",\n    \"Add area\": \"Ajouter région\",\n    \"Annotation mode\": \"Mode d'annotation\",\n    Cancel: \"Annuler\",\n    Categories: \"Catégories\",\n    \"Center image automatically\": \"Centrer image automatiquement\",\n    \"Color annotation\": \"Annotation couleur\",\n    \"Create category\": \"Nouvelle catégorie\",\n    \"Create new classifier\": \"Nouveau classifieur\",\n    Create: \"Ajouter\",\n    \"Delete category\": \"Supprimer catégorie\",\n    \"Delete images\": \"Supprimer images\",\n    Description: \"Description\",\n    Edit: \"Modifier\",\n    \"Edit category\": \"Modifier catégorie\",\n    \"Elliptical annotation\": \"Annotation elliptique\",\n    Export: \"Exporter\",\n    \"Export annotations\": \"Exporter annotations\",\n    \"Freehand annotation\": \"Annotation main-libres\",\n    Help: \"Aide\",\n    \"Hide category\": \"Cacher catégorie\",\n    \"Hide other categories\": \"Cacher autres catégories\",\n    \"Hide sidebar\": \"Cacher sidebar\",\n    \"Import images\": \"Importer images\",\n    Intersection: \"Intersection\",\n    \"Invert annotation\": \"Inverser annotation\",\n    \"Lasso annotation\": \"Annotation lasso\",\n    Logo: \"Logo\",\n    \"Magnetic annotation\": \"Annotation magnétique\",\n    Model: \"Modèle\",\n    \"Object annotation\": \"Annotation objet\",\n    \"Open classifier\": \"Ouvrir classifieur\",\n    \"Open example classifier\": \"Ouvrir example classifieur\",\n    \"Open image\": \"Ouvrir image\",\n    \"Open weights\": \"Ouvrir poids\",\n    Open: \"Ouvrir\",\n    \"Pen annotation\": \"Annotation pinceau\",\n    Pointer: \"Pointeur\",\n    \"Polygonal annotation\": \"Annotation polygonale\",\n    Name: \"Nom\",\n    \"New annotation\": \"Nouvelle annotation\",\n    \"Quick annotation\": \"Annotation rapide\",\n    \"Rectangular annotation\": \"Annotation rectangulaire\",\n    \"Run classifier\": \"Initier classifieur\",\n    \"Save annotations and predictions\": \"Sauver annotations et predictions\",\n    \"Save classifier\": \"Sauver classifieur\",\n    \"Save weights\": \"Sauver poids\",\n    Save: \"Sauver\",\n    \"Search images\": \"Rechercher images\",\n    \"Send feedback\": \"Envoyer feedback\",\n    Settings: \"Préférences\",\n    \"Show category\": \"Montrer catégorie\",\n    \"Show sidebar\": \"Montrer sidebar\",\n    \"Subtract area\": \"Soustraire région\",\n    Unknown: \"Inconnu\",\n    Zoom: \"Zoom\",\n    \"Zoom in\": \"Zoom intérieur\",\n    \"Zoom mode\": \"Mode zoom\",\n    \"Zoom out\": \"Zoom extérieur\",\n  },\n};\n\nexport default fr;\n","import { useSelector } from \"react-redux\";\nimport { languageSelector } from \"../../store/selectors/languageSelector\";\nimport { de, en, fas, fi, gr, hi, hu } from \"../../translations/\";\nimport { LanguageType } from \"../../types/LanguageType\";\nimport fr from \"../../translations/fr\";\n\nexport const useTranslation = () => {\n  const language = useSelector(languageSelector);\n\n  const t = (word: string) => {\n    switch (language) {\n      case LanguageType.English:\n        if (!en.translation[word]) return word;\n        return en.translation[word];\n      case LanguageType.Farsi:\n        if (!fas.translation[word]) return word;\n        return fas.translation[word];\n      case LanguageType.Finnish:\n        if (!fi.translation[word]) return word;\n        return fi.translation[word];\n      case LanguageType.French:\n        if (!fr.translation[word]) return word;\n        return fr.translation[word];\n      case LanguageType.German:\n        if (!de.translation[word]) return word;\n        return de.translation[word];\n      case LanguageType.Greek:\n        if (!gr.translation[word]) return word;\n        return gr.translation[word];\n      case LanguageType.Hindi:\n        if (!hi.translation[word]) return word;\n        return hi.translation[word];\n      case LanguageType.Hungarian:\n        if (!hu.translation[word]) return word;\n        return hu.translation[word];\n      default:\n        return word;\n    }\n  };\n\n  return t;\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CategoryType } from \"../../../../../types/CategoryType\";\nimport { useTranslation } from \"../../../../../hooks/useTranslation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { applicationSlice } from \"../../../../../store\";\nimport { selectedCategorySelector } from \"../../../../../store/selectors\";\n\ntype HideOrShowCategoryMenuItemProps = {\n  category: CategoryType;\n  onCloseCategoryMenu: (\n    event: React.MouseEvent<HTMLLIElement, MouseEvent>\n  ) => void;\n};\n\nexport const HideOrShowCategoryMenuItem = ({\n  onCloseCategoryMenu,\n}: HideOrShowCategoryMenuItemProps) => {\n  const dispatch = useDispatch();\n\n  const category = useSelector(selectedCategorySelector);\n\n  const onClick = (event: React.MouseEvent<HTMLLIElement, MouseEvent>) => {\n    dispatch(\n      applicationSlice.actions.setCategoryVisibility({\n        category: category,\n        visible: !category.visible,\n      })\n    );\n\n    onCloseCategoryMenu(event);\n  };\n\n  const t = useTranslation();\n\n  const translatedHide = t(\"Hide category\");\n  const translatedShow = t(\"Show category\");\n\n  return (\n    <MenuItem onClick={onClick}>\n      <Typography variant=\"inherit\">\n        {category.visible ? translatedHide : translatedShow}\n      </Typography>\n    </MenuItem>\n  );\n};\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { CategoryType } from \"../../../../../types/CategoryType\";\nimport { useTranslation } from \"../../../../../hooks/useTranslation\";\nimport { applicationSlice } from \"../../../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  categoriesSelector,\n  selectedCategorySelector,\n} from \"../../../../../store/selectors\";\n\ntype HideOtherCategoriesMenuItemProps = {\n  onCloseCategoryMenu: (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => void;\n};\n\nexport const HideOtherCategoriesMenuItem = ({\n  onCloseCategoryMenu,\n}: HideOtherCategoriesMenuItemProps) => {\n  const categories = useSelector(categoriesSelector);\n\n  const category = useSelector(selectedCategorySelector);\n\n  const dispatch = useDispatch();\n\n  const onClick = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    for (let cat of categories) {\n      if (category.id != cat.id) {\n        dispatch(\n          applicationSlice.actions.setCategoryVisibility({\n            category: cat,\n            visible: false,\n          })\n        );\n      }\n    }\n    onCloseCategoryMenu(event);\n  };\n\n  const t = useTranslation();\n\n  return (\n    <MenuItem onClick={onClick}>\n      <Typography variant=\"inherit\">{t(\"Hide other categories\")}</Typography>\n    </MenuItem>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imagesSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): Array<ImageType> => {\n  return state.present.images;\n};\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { CategoryType } from \"../../../../../types/CategoryType\";\nimport { HideOrShowCategoryMenuItem } from \"../HideOrShowCategoryMenuItem\";\nimport { HideOtherCategoriesMenuItem } from \"../HideOtherCategoriesMenuItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useTranslation } from \"../../../../../hooks/useTranslation\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { imagesSelector } from \"../../../../../store/selectors/imagesSelector\";\nimport { applicationSlice } from \"../../../../../store/slices\";\nimport { selectedCategorySelector } from \"../../../../../store/selectors\";\n\ntype CategoryMenuProps = {\n  anchorElCategoryMenu: any;\n  onCloseCategoryMenu: (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => void;\n  onOpenCategoryMenu: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  openCategoryMenu: boolean;\n  onOpenDeleteCategoryDialog: () => void;\n  onOpenEditCategoryDialog: () => void;\n  onOpenClearCategoryDialog: () => void;\n};\n\nexport const CategoryMenu = ({\n  anchorElCategoryMenu,\n  onCloseCategoryMenu,\n  openCategoryMenu,\n  onOpenDeleteCategoryDialog,\n  onOpenEditCategoryDialog,\n  onOpenClearCategoryDialog,\n}: CategoryMenuProps) => {\n  const images = useSelector(imagesSelector);\n\n  const dispatch = useDispatch();\n\n  const category = useSelector(selectedCategorySelector);\n\n  const onOpenDeleteCategoryDialogClick = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    //cycle through the annotations to determine if annotations of that category exist\n    // show a warning dialog box is they do exist\n    let existAnnotations = false;\n    for (let i = 0; i < images.length; i++) {\n      if (!existAnnotations) {\n        for (let j = 0; j < images[i].annotations.length; j++) {\n          if (images[i].annotations[j].categoryId === category.id) {\n            existAnnotations = true;\n          }\n        }\n      }\n    }\n    if (existAnnotations) {\n      onOpenDeleteCategoryDialog();\n    } //warn user that these annotations will be relabeled as unknown\n    else {\n      dispatch(\n        applicationSlice.actions.setSelectedCategory({\n          selectedCategory: \"00000000-0000-0000-0000-000000000000\",\n        })\n      );\n\n      dispatch(applicationSlice.actions.deleteCategory({ category: category }));\n    }\n    onCloseCategoryMenu(event);\n  };\n\n  const onOpenEditCategoryDialogClick = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    onOpenEditCategoryDialog();\n    onCloseCategoryMenu(event);\n  };\n\n  const onOpenClearCategoryDialogClick = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    onOpenClearCategoryDialog();\n    onCloseCategoryMenu(event);\n  };\n\n  const t = useTranslation();\n\n  return (\n    <Menu\n      anchorEl={anchorElCategoryMenu}\n      anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\n      getContentAnchorEl={null}\n      onClose={onCloseCategoryMenu}\n      open={openCategoryMenu}\n      transformOrigin={{ horizontal: \"center\", vertical: \"top\" }}\n    >\n      <MenuList dense variant=\"menu\">\n        <HideOtherCategoriesMenuItem\n          onCloseCategoryMenu={onCloseCategoryMenu}\n        />\n\n        <HideOrShowCategoryMenuItem\n          category={category}\n          onCloseCategoryMenu={onCloseCategoryMenu}\n        />\n\n        <div>\n          <Divider />\n\n          <MenuItem onClick={onOpenEditCategoryDialogClick}>\n            <Typography variant=\"inherit\">{t(\"Edit category\")}</Typography>\n          </MenuItem>\n        </div>\n        <MenuItem onClick={onOpenClearCategoryDialogClick}>\n          <Typography variant=\"inherit\">{t(\"Clear Annotations\")}</Typography>\n        </MenuItem>\n\n        {category.id !== \"00000000-0000-0000-0000-000000000000\" && (\n          <MenuItem onClick={onOpenDeleteCategoryDialogClick}>\n            <Typography variant=\"inherit\">{t(\"Delete category\")}</Typography>\n          </MenuItem>\n        )}\n      </MenuList>\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AnnotationType } from \"../../../../types/AnnotationType\";\nimport { applicationSlice } from \"../../../../store\";\nimport {\n  imageInstancesSelector,\n  selectedCategorySelector,\n  unknownCategorySelector,\n} from \"../../../../store/selectors\";\n\ntype DeleteCategoryDialogProps = {\n  onClose: () => void;\n  open: boolean;\n};\n\nexport const DeleteCategoryDialog = ({\n  onClose,\n  open,\n}: DeleteCategoryDialogProps) => {\n  const dispatch = useDispatch();\n\n  const category = useSelector(selectedCategorySelector);\n\n  const selections = useSelector(imageInstancesSelector);\n\n  const unknownCategory = useSelector(unknownCategorySelector);\n\n  const onDelete = () => {\n    dispatch(\n      applicationSlice.actions.setSelectedCategory({\n        selectedCategory: \"00000000-0000-0000-0000-000000000000\",\n      })\n    );\n\n    const instances = selections?.map((instance: AnnotationType) => {\n      if (instance.categoryId === category.id) {\n        return {\n          ...instance,\n          categoryId: \"00000000-0000-0000-0000-000000000000\",\n        };\n      } else {\n        return instance;\n      }\n    });\n\n    dispatch(\n      applicationSlice.actions.setImageInstances({\n        instances: instances as Array<AnnotationType>,\n      })\n    );\n\n    dispatch(applicationSlice.actions.deleteCategory({ category: category }));\n\n    onClose();\n  };\n\n  return (\n    <Dialog disableBackdropClick={true} fullWidth onClose={onClose} open={open}>\n      <DialogTitle>Delete \"{category.name}\" category?</DialogTitle>\n\n      <DialogContent>\n        Annotations categorized as \"{category.name}\" will not be deleted and\n        instead will be labeled as \"{unknownCategory.name}\".\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n\n        <Button onClick={onDelete} color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  alert: {\n    width: theme.spacing(64),\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  appBarShift: {\n    marginLeft: theme.spacing(32),\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.easeOut,\n    }),\n    width: `calc(100% - ${theme.spacing(32)}px)`,\n  },\n  card: {},\n  classifierSettingsDialogContent: {\n    marginTop: theme.spacing(8),\n  },\n  chip: {\n    height: \"20px\",\n    borderWidth: \"2px\",\n    fontSize: \"0.875rem\",\n    color: \"white\",\n  },\n  colorPicker: {\n    margin: \"16px\",\n  },\n  container: {\n    paddingBottom: theme.spacing(8),\n    paddingTop: theme.spacing(8),\n  },\n  createCategoryDialogContent: {\n    paddingLeft: \"0 !important\",\n  },\n  createCategoryDialogGrid: {\n    margin: theme.spacing(1),\n  },\n  createCategoryDialogItem: {\n    // paddingLeft: \"0 !important\",\n  },\n  drawer: {\n    flexShrink: 0,\n    width: theme.spacing(32),\n  },\n  drawerHeader: {\n    ...theme.mixins.toolbar,\n    alignItems: \"center\",\n    display: \"flex\",\n    paddingLeft: theme.spacing(3),\n  },\n  drawerPaper: {\n    width: theme.spacing(32),\n  },\n  fileInput: {\n    display: \"none\",\n  },\n  gridList: {\n    transform: \"translateZ(0)\",\n  },\n  gridTileBar: {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 50%, rgba(0,0,0,0) 100%)\",\n  },\n  gridTileBarIconButton: {\n    color: \"white\",\n  },\n  imageDialogAppBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  imageDialogContent: {\n    paddingBottom: theme.spacing(12),\n    paddingTop: theme.spacing(12),\n  },\n  imageSelected: {\n    border: \"solid 2px blue\",\n    borderRadius: \"3px\",\n  },\n  imageUnselected: {\n    border: \"none\",\n  },\n  main: {\n    flexGrow: 1,\n    marginLeft: -theme.spacing(32),\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  mainShift: {\n    marginLeft: theme.spacing(32),\n    transition: theme.transitions.create(\"margin\", {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.easeOut,\n    }),\n  },\n  media: {},\n  progress: {\n    width: \"100%\",\n  },\n  settingsDialogAppBar: {},\n  slider: {\n    padding: theme.spacing(3),\n  },\n  sliderInput: {\n    width: 42,\n  },\n}));\n","import { Label } from \"@material-ui/icons\";\nimport * as React from \"react\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { CirclePicker, ColorResult } from \"react-color\";\nimport { useStyles } from \"./ColorIcon.css\";\n\nconst COLORS = [\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n  \"#795548\",\n  \"#607d8b\",\n];\n\ntype ColorIconButtonProps = {\n  color: string;\n  onColorChange: (color: any) => void;\n};\n\nexport const ColorIcon = ({ color, onColorChange }: ColorIconButtonProps) => {\n  const classes = useStyles();\n\n  const [\n    colorMenuAnchorEl,\n    setColorMenuAnchorEl,\n  ] = React.useState<null | HTMLButtonElement>(null);\n\n  const colorPopupOpen = Boolean(colorMenuAnchorEl);\n\n  const onOpenColorPicker = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setColorMenuAnchorEl(event.currentTarget);\n  };\n\n  const onCloseColorPicker = () => {\n    setColorMenuAnchorEl(null);\n  };\n\n  const onChange = (color: ColorResult) => {\n    onColorChange(color);\n    onCloseColorPicker();\n  };\n\n  return (\n    <React.Fragment>\n      <IconButton onClick={onOpenColorPicker}>\n        <Avatar style={{ backgroundColor: \"#F3F3F3\" }}>\n          <Label style={{ color: color }} />\n        </Avatar>\n      </IconButton>\n      <Popover\n        id=\"color-menu\"\n        open={colorPopupOpen}\n        anchorEl={colorMenuAnchorEl}\n        onClose={onCloseColorPicker}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"center\",\n        }}\n      >\n        <div className={classes.colorPicker}>\n          <CirclePicker colors={COLORS} onChange={onChange} />\n        </div>\n      </Popover>\n    </React.Fragment>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  alert: {\n    width: theme.spacing(64),\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  appBarShift: {\n    marginLeft: theme.spacing(32),\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.easeOut,\n    }),\n    width: `calc(100% - ${theme.spacing(32)}px)`,\n  },\n  card: {},\n  classifierSettingsDialogContent: {\n    marginTop: theme.spacing(8),\n  },\n  chip: {\n    height: \"20px\",\n    borderWidth: \"2px\",\n    fontSize: \"0.875rem\",\n    color: \"white\",\n  },\n  colorPicker: {\n    margin: \"16px\",\n  },\n  container: {\n    paddingBottom: theme.spacing(8),\n    paddingTop: theme.spacing(8),\n  },\n  createCategoryDialogContent: {\n    paddingLeft: \"0 !important\",\n  },\n  createCategoryDialogGrid: {\n    margin: theme.spacing(1),\n  },\n  createCategoryDialogItem: {\n    // paddingLeft: \"0 !important\",\n  },\n  drawer: {\n    flexShrink: 0,\n    width: theme.spacing(32),\n  },\n  drawerHeader: {\n    ...theme.mixins.toolbar,\n    alignItems: \"center\",\n    display: \"flex\",\n    paddingLeft: theme.spacing(3),\n  },\n  drawerPaper: {\n    width: theme.spacing(32),\n  },\n  fileInput: {\n    display: \"none\",\n  },\n  gridList: {\n    transform: \"translateZ(0)\",\n  },\n  gridTileBar: {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 50%, rgba(0,0,0,0) 100%)\",\n  },\n  gridTileBarIconButton: {\n    color: \"white\",\n  },\n  imageDialogAppBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  imageDialogContent: {\n    paddingBottom: theme.spacing(12),\n    paddingTop: theme.spacing(12),\n  },\n  imageSelected: {\n    border: \"solid 2px blue\",\n    borderRadius: \"3px\",\n  },\n  imageUnselected: {\n    border: \"none\",\n  },\n  main: {\n    flexGrow: 1,\n    marginLeft: -theme.spacing(32),\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  mainShift: {\n    marginLeft: theme.spacing(32),\n    transition: theme.transitions.create(\"margin\", {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.easeOut,\n    }),\n  },\n  media: {},\n  progress: {\n    width: \"100%\",\n  },\n  settingsDialogAppBar: {},\n  slider: {\n    padding: theme.spacing(3),\n  },\n  sliderInput: {\n    width: 42,\n  },\n}));\n","import Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { ChangeEvent, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { ColorIcon } from \"../ColorIcon\";\nimport { useStyles } from \"./EditCategoryDialog.css\";\nimport { CategoryType } from \"../../../../types/CategoryType\";\nimport { applicationSlice } from \"../../../../store\";\nimport {\n  categoriesSelector,\n  selectedCategorySelector,\n} from \"../../../../store/selectors\";\n\ntype EditCategoryDialogProps = {\n  onCloseDialog: () => void;\n  openDialog: boolean;\n};\n\nexport const EditCategoryDialog = ({\n  onCloseDialog,\n  openDialog,\n}: EditCategoryDialogProps) => {\n  const dispatch = useDispatch();\n\n  const category = useSelector(selectedCategorySelector);\n\n  const classes = useStyles();\n\n  const [color, setColor] = useState<string>(category.color);\n\n  const onColorChange = (color: any) => {\n    setColor(color.hex);\n  };\n\n  useEffect(() => {\n    setName(category.name);\n    setColor(category.color);\n  }, [category]);\n\n  const [name, setName] = useState<string>(category.name);\n\n  const onNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  const categories = useSelector(categoriesSelector);\n\n  const onEdit = () => {\n    const updatedCategories = categories?.map((v: CategoryType) => {\n      if (v.id === category.id) {\n        return {\n          ...category,\n          color: color,\n          name: name,\n        };\n      } else {\n        return v;\n      }\n    });\n    dispatch(\n      applicationSlice.actions.setCategories({ categories: updatedCategories })\n    );\n\n    onCloseDialog();\n  };\n\n  return (\n    <Dialog\n      disableBackdropClick={true}\n      fullWidth\n      onClose={onCloseDialog}\n      open={openDialog}\n    >\n      <DialogTitle>Edit category</DialogTitle>\n\n      <DialogContent>\n        <div>\n          <Grid container spacing={1}>\n            <Grid item xs={2} className={classes.createCategoryDialogItem}>\n              <ColorIcon color={color} onColorChange={onColorChange} />\n            </Grid>\n            <Grid item xs={10}>\n              <TextField\n                autoFocus\n                fullWidth\n                id=\"name\"\n                label=\"Name\"\n                margin=\"dense\"\n                onChange={onNameChange}\n                value={name}\n              />\n            </Grid>\n          </Grid>\n        </div>\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onCloseDialog} color=\"primary\">\n          Cancel\n        </Button>\n\n        <Button onClick={onEdit} color=\"primary\">\n          Update\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import * as ImageJS from \"image-js\";\n\nexport abstract class Tool {\n  image: ImageJS.Image;\n\n  constructor(image: ImageJS.Image) {\n    this.image = image;\n  }\n}\n","/*\n (c) 2017, Vladimir Agafonkin\n Simplify.js, a high-performance JS polyline simplification library\n mourner.github.io/simplify-js\n*/\n\n// (function () { 'use strict';\n\n// to suit your point format, run search/replace for '.x' and '.y';\n// for 3D version, see 3d branch (configurability would draw significant performance overhead)\n\n// square distance between 2 points\nfunction getSqDist(p1: Array<number>, p2: Array<number>) {\n  var dx = p1[0] - p2[0],\n    dy = p1[1] - p2[1];\n\n  return dx * dx + dy * dy;\n}\n\n// square distance from a point to a segment\nfunction getSqSegDist(p: Array<number>, p1: Array<number>, p2: Array<number>) {\n  var x = p1[0],\n    y = p1[1],\n    dx = p2[0] - x,\n    dy = p2[1] - y;\n\n  if (dx !== 0 || dy !== 0) {\n    var t = ((p[0] - x) * dx + (p[1] - y) * dy) / (dx * dx + dy * dy);\n\n    if (t > 1) {\n      x = p2[0];\n      y = p2[1];\n    } else if (t > 0) {\n      x += dx * t;\n      y += dy * t;\n    }\n  }\n\n  dx = p[0] - x;\n  dy = p[1] - y;\n\n  return dx * dx + dy * dy;\n}\n// rest of the code doesn't care about point format\n\n// basic distance-based simplification\nfunction simplifyRadialDist(points: Array<Array<number>>, sqTolerance: number) {\n  var prevPoint = points[0];\n  var newPoints = [prevPoint];\n  var point: Array<number> = [];\n\n  for (var i = 1, len = points.length; i < len; i++) {\n    point = points[i];\n\n    if (getSqDist(point, prevPoint) > sqTolerance) {\n      newPoints.push(point);\n      prevPoint = point;\n    }\n  }\n\n  if (prevPoint !== point) newPoints.push(point);\n\n  return newPoints;\n}\n\nfunction simplifyDPStep(\n  points: Array<Array<number>>,\n  first: number,\n  last: number,\n  sqTolerance: number,\n  simplified: Array<Array<number>>\n) {\n  let maxSqDist = sqTolerance;\n  let index: number = 0;\n\n  for (var i = first + 1; i < last; i++) {\n    var sqDist = getSqSegDist(points[i], points[first], points[last]);\n\n    if (sqDist > maxSqDist) {\n      index = i;\n      maxSqDist = sqDist;\n    }\n  }\n\n  if (maxSqDist > sqTolerance) {\n    if (index - first > 1)\n      simplifyDPStep(points, first, index, sqTolerance, simplified);\n    simplified.push(points[index]);\n    if (last - index > 1)\n      simplifyDPStep(points, index, last, sqTolerance, simplified);\n  }\n}\n\n// simplification using Ramer-Douglas-Peucker algorithm\nfunction simplifyDouglasPeucker(\n  points: Array<Array<number>>,\n  sqTolerance: number\n) {\n  var last = points.length - 1;\n\n  var simplified = [points[0]];\n  simplifyDPStep(points, 0, last, sqTolerance, simplified);\n  simplified.push(points[last]);\n\n  return simplified;\n}\n\n// both algorithms combined for awesome performance\nexport function simplify(\n  points: Array<Array<number>>,\n  tolerance: number,\n  highestQuality: boolean\n) {\n  if (points.length <= 2) return points;\n\n  var sqTolerance = tolerance !== undefined ? tolerance * tolerance : 1;\n\n  points = highestQuality ? points : simplifyRadialDist(points, sqTolerance);\n  points = simplifyDouglasPeucker(points, sqTolerance);\n\n  return points;\n}\n\n// // export as AMD module / Node module / browser or worker variable\n//     if (typeof define === 'function' && define.amd) define(function() { return simplify; });\n//     else if (typeof module !== 'undefined') {\n//         module.exports = simplify;\n//         module.exports.default = simplify;\n//     } else if (typeof self !== 'undefined') self.simplify = simplify;\n//     else window.simplify = simplify;\n\n// })();\n","// Code from: https://github.com/kamoroso94/polygon-fill-benchmark\n\n// linear interpolation\n// finds x-value from scanline intersecting edge\nexport function lerp(\n  yScan: number,\n  [[x1, y1], [x2, y2]]: Array<Array<number>>\n) {\n  return Math.floor(((yScan - y1) / (y2 - y1)) * (x2 - x1) + x1);\n}\n\n// returns minimum y-value of two points\nexport function getYMin([[, y1], [, y2]]: Array<Array<number>>) {\n  return y1 <= y2 ? y1 : y2;\n}\n\n// returns maximum y-value of two points\nexport function getYMax([[, y1], [, y2]]: Array<Array<number>>) {\n  return y1 > y2 ? y1 : y2;\n}\n\n// returns the x-value of the point with the minimum y-value\nexport function getXofYMin([[x1, y1], [x2, y2]]: Array<Array<number>>) {\n  return y1 <= y2 ? x1 : x2;\n}\n\n// returns the x-value of the point with the maximum y-value\nexport function getXofYMax([[x1, y1], [x2, y2]]: Array<Array<number>>) {\n  return y1 > y2 ? x1 : x2;\n}\n\n// converts list of points to list of non-horizontal edges\nexport function pointsToEdges(points: Array<Array<number>>) {\n  let edges = [];\n  let p1 = points[points.length - 1];\n  for (let i = 0; i < points.length; i++) {\n    const p2 = points[i];\n    // ignore horizontal edges\n    if (p1[1] != p2[1]) edges.push([p1, p2]);\n    p1 = p2;\n  }\n  return edges;\n}\n","// Code from: https://github.com/kamoroso94/polygon-fill-benchmark\n\nimport * as ImageJS from \"image-js\";\n\nimport {\n  getXofYMax,\n  getXofYMin,\n  getYMax,\n  getYMin,\n  lerp,\n  pointsToEdges,\n} from \"./util\";\n\n// Scnaline Polygon Fill\nexport function slpf(points: Array<Array<number>>, img: ImageJS.Image) {\n  if (points.length < 3) return;\n\n  // initialize ET and AET\n  const ET: Array<Array<Array<number>>> = pointsToEdges(points).sort(\n    (e1: Array<Array<number>>, e2: Array<Array<number>>) =>\n      getYMin(e2) - getYMin(e1)\n  );\n  const AET: Array<Array<Array<number>>> = [];\n  let yScan = getYMin(ET[ET.length - 1]);\n\n  // repeat until both ET and AET are empty\n  while (ET.length > 0 || AET.length > 0) {\n    // manage AET\n    moveEdges(yScan, ET, AET);\n    removeEdges(yScan, AET);\n    AET.sort((e1, e2) => {\n      const cmp = getXofYMin(e1) - getXofYMin(e2);\n      return cmp == 0 ? getXofYMax(e1) - getXofYMax(e2) : cmp;\n    });\n    // fill spans on scanline\n    const spans = getSpans(yScan, AET);\n    drawSpans(spans, yScan, img);\n    yScan++;\n  }\n}\n\n// move active edges from ET to AET\nfunction moveEdges(\n  yScan: number,\n  ET: Array<Array<Array<number>>>,\n  AET: Array<Array<Array<number>>>\n) {\n  while (ET.length > 0 && yScan === getYMin(ET[ET.length - 1])) {\n    AET.push(ET.pop()!);\n  }\n}\n\n// remove inactive edges from AET\nfunction removeEdges(yScan: number, AET: Array<Array<Array<number>>>) {\n  for (let i = 0; i < AET.length; i++) {\n    if (yScan >= getYMax(AET[i])) {\n      const last = AET.pop();\n      if (i < AET.length && last) {\n        AET[i] = last;\n        i--;\n      }\n    }\n  }\n}\n\n// find spans along scanline\nfunction getSpans(yScan: number, AET: Array<Array<Array<number>>>) {\n  const spans = [];\n  for (const edge of AET) {\n    spans.push(lerp(yScan, edge));\n  }\n  return spans;\n}\n\nfunction drawSpans(spans: Array<number>, yScan: number, img: ImageJS.Image) {\n  for (let i = 0; i < spans.length; i += 2) {\n    fillSpan(spans[i], spans[i + 1], yScan, img);\n  }\n}\n\n// fill pixels within a span\nfunction fillSpan(x1: number, x2: number, y: number, img: ImageJS.Image) {\n  for (let x = x1; x < x2; x++) {\n    img.setPixelXY(x, y, [255, 255, 255, 255]);\n  }\n}\n","import { AnnotationType } from \"../../../../types/AnnotationType\";\nimport * as ImageJS from \"image-js\";\nimport { CategoryType } from \"../../../../types/CategoryType\";\nimport * as _ from \"lodash\";\nimport { connectPoints, drawLine } from \"../../../imageHelper\";\nimport { simplify } from \"../../../simplify/simplify\";\nimport { slpf } from \"../../../polygon-fill/slpf\";\nimport * as uuid from \"uuid\";\nimport { decode, encode } from \"../../../rle\";\nimport { Tool } from \"../../Tool\";\n\nexport abstract class AnnotationTool extends Tool {\n  manager: ImageJS.RoiManager;\n  points?: Array<number> = [];\n  annotated: boolean = false;\n  annotating: boolean = false;\n  annotation?: AnnotationType;\n\n  anchor?: { x: number; y: number } = undefined;\n  origin?: { x: number; y: number } = undefined;\n  buffer?: Array<number> = [];\n\n  protected _boundingBox?: [number, number, number, number];\n  protected _mask?: Array<number>;\n\n  constructor(image: ImageJS.Image) {\n    super(image);\n\n    this.manager = image.getRoiManager();\n  }\n\n  /*\n   * Method for add, subtract and intersect modes.\n   * Draw a ROI mask in the coordinate space of the new combined bounding box.\n   * */\n  drawMaskInNewBoundingBox(\n    newMaskImage: ImageJS.Image,\n    maskImage: ImageJS.Image,\n    boundingBox: [number, number, number, number],\n    newBoundingBox: [number, number, number, number]\n  ) {\n    for (let x = 0; x < maskImage.width; x++) {\n      for (let y = 0; y < maskImage.height; y++) {\n        const pixel = maskImage.getPixelXY(x, y)[0];\n        // if (x > boundingBox1[2] && pixel > 0) console.info(\"Not supposed to happen\")\n        if (pixel === 255) {\n          newMaskImage.setPixelXY(\n            x + boundingBox[0] - newBoundingBox[0],\n            y + boundingBox[1] - newBoundingBox[1],\n            [255]\n          );\n        }\n      }\n    }\n    return newMaskImage;\n  }\n\n  inBoundingBox(\n    x: number,\n    y: number,\n    boundingBox: [number, number, number, number]\n  ) {\n    if (x < 0 || y < 0) return false;\n    if (x >= boundingBox[2] - boundingBox[0]) return false;\n    if (y >= boundingBox[3] - boundingBox[1]) return false;\n    return true;\n  }\n  /*\n   * Adding to a Operator adds any new areas you select to your existing\n   * Operator.\n   */\n  add(\n    encodedMaskData1: Array<number>,\n    boundingBox1: [number, number, number, number]\n  ): [Array<number>, [number, number, number, number]] {\n    if (!this._mask || !this._boundingBox) return [[], [0, 0, 0, 0]];\n\n    const maskData1 = decode(encodedMaskData1);\n    const maskData2 = decode(this._mask);\n    const boundingBox2 = this._boundingBox;\n\n    const newBoundingBox = [\n      boundingBox2[0] < boundingBox1[0] ? boundingBox2[0] : boundingBox1[0],\n      boundingBox2[1] < boundingBox1[1] ? boundingBox2[1] : boundingBox1[1],\n      boundingBox2[2] > boundingBox1[2] ? boundingBox2[2] : boundingBox1[2],\n      boundingBox2[3] > boundingBox1[3] ? boundingBox2[3] : boundingBox1[3],\n    ] as [number, number, number, number];\n    //\n    const newBoundingBoxWidth = newBoundingBox[2] - newBoundingBox[0];\n    const newBoundingBoxHeight = newBoundingBox[3] - newBoundingBox[1];\n\n    const newMaskData = [];\n    const deltaX1 = boundingBox1[0] - newBoundingBox[0];\n    const deltaY1 = boundingBox1[1] - newBoundingBox[1];\n    const deltaX2 = boundingBox2[0] - newBoundingBox[0];\n    const deltaY2 = boundingBox2[1] - newBoundingBox[1];\n\n    for (let i = 0; i < newBoundingBoxWidth * newBoundingBoxHeight; i++) {\n      const x = i % newBoundingBoxWidth;\n      const y = Math.floor(i / newBoundingBoxWidth);\n      const b1x = x - deltaX1;\n      const b1y = y - deltaY1;\n      const b2x = x - deltaX2;\n      const b2y = y - deltaY2;\n\n      const b1i = b1x + b1y * (boundingBox1[2] - boundingBox1[0]);\n      const b2i = b2x + b2y * (boundingBox2[2] - boundingBox2[0]);\n      if (\n        (this.inBoundingBox(b1x, b1y, boundingBox1) &&\n          maskData1[b1i] === 255) ||\n        (this.inBoundingBox(b2x, b2y, boundingBox2) && maskData2[b2i] === 255)\n      ) {\n        newMaskData.push(255);\n      } else {\n        newMaskData.push(0);\n      }\n    }\n\n    return [encode(Uint8Array.from(newMaskData)), newBoundingBox];\n  }\n\n  connect() {\n    if (this.annotated) return;\n\n    if (!this.anchor || !this.origin) return;\n\n    if (!this.buffer) return;\n\n    const anchorIndex = _.findLastIndex(this.buffer, (point) => {\n      return point === this.anchor!.x;\n    });\n\n    const segment = _.flatten(\n      drawLine([this.anchor.x, this.anchor.y], [this.origin.x, this.origin.y])\n    );\n\n    this.buffer.splice(anchorIndex, segment.length, ...segment);\n\n    this._boundingBox = this.computeBoundingBoxFromContours(this.buffer);\n\n    this.points = this.buffer;\n\n    const maskImage = this.computeMask().crop({\n      x: this._boundingBox[0],\n      y: this._boundingBox[1],\n      width: this._boundingBox[2] - this._boundingBox[0],\n      height: this._boundingBox[3] - this._boundingBox[1],\n    });\n\n    this._mask = encode(maskImage.data);\n\n    console.error(maskImage.toDataURL());\n\n    this.anchor = undefined;\n    this.origin = undefined;\n    this.buffer = [];\n\n    this.annotated = true;\n    this.annotating = false;\n  }\n\n  /*\n   * When using the Intersect Operator mode, any currently selected areas you\n   * select over will be kept and any currently selected areas outside your\n   * new Operator will be removed from the Operator.\n   */\n  intersect(\n    decodedMask1: Array<number>,\n    boundingBox1: [number, number, number, number]\n  ): [Array<number>, [number, number, number, number]] {\n    if (!this._mask || !this._boundingBox) return [[], [0, 0, 0, 0]];\n\n    const maskData1 = decode(decodedMask1);\n    const maskData2 = decode(this._mask);\n\n    const boundingBox2 = this._boundingBox;\n\n    const newBoundingBox = [\n      boundingBox2[0] > boundingBox1[0] ? boundingBox2[0] : boundingBox1[0],\n      boundingBox2[1] > boundingBox1[1] ? boundingBox2[1] : boundingBox1[1],\n      boundingBox2[2] < boundingBox1[2] ? boundingBox2[2] : boundingBox1[2],\n      boundingBox2[3] < boundingBox1[3] ? boundingBox2[3] : boundingBox1[3],\n    ] as [number, number, number, number];\n\n    const newBoundingBoxWidth = newBoundingBox[2] - newBoundingBox[0];\n    const newBoundingBoxHeight = newBoundingBox[3] - newBoundingBox[1];\n\n    const newMaskData = [];\n    const deltaX1 = boundingBox1[0] - newBoundingBox[0];\n    const deltaY1 = boundingBox1[1] - newBoundingBox[1];\n    const deltaX2 = boundingBox2[0] - newBoundingBox[0];\n    const deltaY2 = boundingBox2[1] - newBoundingBox[1];\n\n    for (let i = 0; i < newBoundingBoxWidth * newBoundingBoxHeight; i++) {\n      const x = i % newBoundingBoxWidth;\n      const y = Math.floor(i / newBoundingBoxWidth);\n      const b1x = x - deltaX1;\n      const b1y = y - deltaY1;\n      const b2x = x - deltaX2;\n      const b2y = y - deltaY2;\n\n      const b1i = b1x + b1y * (boundingBox1[2] - boundingBox1[0]);\n      const b2i = b2x + b2y * (boundingBox2[2] - boundingBox2[0]);\n      if (\n        this.inBoundingBox(b1x, b1y, boundingBox1) &&\n        maskData1[b1i] === 255 &&\n        this.inBoundingBox(b2x, b2y, boundingBox2) &&\n        maskData2[b2i] === 255\n      ) {\n        newMaskData.push(255);\n      } else {\n        newMaskData.push(0);\n      }\n    }\n\n    return [encode(Uint8Array.from(newMaskData)), newBoundingBox];\n  }\n\n  /*\n   * Invert selected mask and compute inverted bounding box coordinates\n   * */\n  invert(\n    selectedMask: Array<number>,\n    selectedBoundingBox: [number, number, number, number]\n  ): [Array<number>, [number, number, number, number]] {\n    const mask = decode(selectedMask);\n\n    const imageWidth = this.image.width;\n    const imageHeight = this.image.height;\n\n    //find min and max boundary points when computing the mask\n    const invertedBoundingBox: [number, number, number, number] = [\n      imageWidth,\n      imageHeight,\n      0,\n      0,\n    ];\n\n    const invertedMask = new ImageJS.Image(imageWidth, imageHeight, {\n      components: 1,\n      alpha: 0,\n    });\n    for (let x = 0; x < imageWidth; x++) {\n      for (let y = 0; y < imageHeight; y++) {\n        const x_mask = x - selectedBoundingBox[0];\n        const y_mask = y - selectedBoundingBox[1];\n        const value =\n          mask[\n            x_mask + y_mask * (selectedBoundingBox[2] - selectedBoundingBox[0])\n          ];\n        if (\n          value > 0 &&\n          this.inBoundingBox(x_mask, y_mask, selectedBoundingBox)\n        ) {\n          invertedMask.setPixelXY(x, y, [0]);\n        } else {\n          invertedMask.setPixelXY(x, y, [255]);\n          if (x < invertedBoundingBox[0]) {\n            invertedBoundingBox[0] = x;\n          } else if (x > invertedBoundingBox[2]) {\n            invertedBoundingBox[2] = x + 1;\n          }\n          if (y < invertedBoundingBox[1]) {\n            invertedBoundingBox[1] = y;\n          } else if (y > invertedBoundingBox[3]) {\n            invertedBoundingBox[3] = y + 1;\n          }\n        }\n      }\n    }\n\n    //now crop the mask using the new bounding box\n    const croppedInvertedMask = invertedMask.crop({\n      x: invertedBoundingBox[0],\n      y: invertedBoundingBox[1],\n      width: invertedBoundingBox[2] - invertedBoundingBox[0],\n      height: invertedBoundingBox[3] - invertedBoundingBox[1],\n    });\n\n    const invertedmaskData = encode(Uint8Array.from(croppedInvertedMask.data));\n\n    return [invertedmaskData, invertedBoundingBox];\n  }\n\n  /*\n   * Subtracting from a Operator deselects the areas you draw over, keeping\n   * the rest of your existing Operator.\n   */\n  subtract(\n    encodedMaskData1: Array<number>,\n    boundingBox1: [number, number, number, number]\n  ): [Array<number>, [number, number, number, number]] {\n    if (!this._mask || !this._boundingBox) return [[], [0, 0, 0, 0]];\n\n    const maskData1 = decode(encodedMaskData1);\n    const maskData2 = decode(this._mask);\n\n    const boundingBox2 = this._boundingBox;\n\n    const newBoundingBox = [\n      boundingBox2[2] > boundingBox1[0] &&\n      boundingBox2[0] < boundingBox1[0] &&\n      boundingBox2[1] < boundingBox1[1] &&\n      boundingBox2[3] > boundingBox1[3]\n        ? boundingBox2[2]\n        : boundingBox1[0],\n      boundingBox2[3] > boundingBox1[1] &&\n      boundingBox2[1] < boundingBox1[1] &&\n      boundingBox2[0] < boundingBox1[0] &&\n      boundingBox2[2] > boundingBox1[2]\n        ? boundingBox2[3]\n        : boundingBox1[1],\n      boundingBox2[0] < boundingBox1[2] &&\n      boundingBox2[2] > boundingBox1[2] &&\n      boundingBox2[1] < boundingBox1[1] &&\n      boundingBox2[3] > boundingBox1[3]\n        ? boundingBox2[0]\n        : boundingBox1[2],\n      boundingBox2[1] < boundingBox1[3] &&\n      boundingBox2[3] > boundingBox1[3] &&\n      boundingBox2[0] < boundingBox1[0] &&\n      boundingBox2[2] > boundingBox1[2]\n        ? boundingBox2[1]\n        : boundingBox1[3],\n    ] as [number, number, number, number];\n\n    const newBoundingBoxWidth = newBoundingBox[2] - newBoundingBox[0];\n    const newBoundingBoxHeight = newBoundingBox[3] - newBoundingBox[1];\n\n    const newMaskData = [];\n    const deltaX1 = boundingBox1[0] - newBoundingBox[0];\n    const deltaY1 = boundingBox1[1] - newBoundingBox[1];\n    const deltaX2 = boundingBox2[0] - newBoundingBox[0];\n    const deltaY2 = boundingBox2[1] - newBoundingBox[1];\n\n    for (let i = 0; i < newBoundingBoxWidth * newBoundingBoxHeight; i++) {\n      const x = i % newBoundingBoxWidth;\n      const y = Math.floor(i / newBoundingBoxWidth);\n      const b1x = x - deltaX1;\n      const b1y = y - deltaY1;\n      const b2x = x - deltaX2;\n      const b2y = y - deltaY2;\n\n      const b1i = b1x + b1y * (boundingBox1[2] - boundingBox1[0]);\n      const b2i = b2x + b2y * (boundingBox2[2] - boundingBox2[0]);\n      if (\n        this.inBoundingBox(b1x, b1y, boundingBox1) &&\n        maskData1[b1i] === 255 &&\n        this.inBoundingBox(b2x, b2y, boundingBox2) &&\n        maskData2[b2i] === 255\n      ) {\n        newMaskData.push(0);\n      } else {\n        newMaskData.push(maskData1[b1i]);\n      }\n    }\n\n    return [encode(Uint8Array.from(newMaskData)), newBoundingBox];\n  }\n\n  get boundingBox(): [number, number, number, number] | undefined {\n    return this._boundingBox;\n  }\n\n  set boundingBox(\n    updatedBoundingBox: [number, number, number, number] | undefined\n  ) {\n    this._boundingBox = updatedBoundingBox;\n  }\n\n  computeBoundingBoxFromContours(\n    contour: Array<number>\n  ): [number, number, number, number] {\n    const pairs = _.chunk(contour, 2);\n\n    return [\n      Math.round(_.min(_.map(pairs, _.first))!),\n      Math.round(_.min(_.map(pairs, _.last))!),\n      Math.round(_.max(_.map(pairs, _.first))!),\n      Math.round(_.max(_.map(pairs, _.last))!),\n    ];\n  }\n\n  computeMask() {\n    const maskImage = new ImageJS.Image({\n      width: this.image.width,\n      height: this.image.height,\n      bitDepth: 8,\n    });\n\n    const coords = _.chunk(this.points, 2);\n\n    const connectedPoints = connectPoints(coords, maskImage); // get coordinates of connected points and draw boundaries of mask\n    simplify(connectedPoints, 1, true);\n    slpf(connectedPoints, maskImage);\n\n    //@ts-ignore\n    return maskImage.getChannel(0);\n  }\n\n  get mask(): Array<number> | undefined {\n    return this._mask;\n  }\n\n  set mask(updatedMask: Array<number> | undefined) {\n    this._mask = updatedMask;\n  }\n\n  abstract deselect(): void;\n\n  abstract onMouseDown(position: { x: number; y: number }): void;\n\n  abstract onMouseMove(position: { x: number; y: number }): void;\n\n  abstract onMouseUp(position: { x: number; y: number }): void;\n\n  annotate(category: CategoryType): void {\n    if (!this.boundingBox || !this.mask) return;\n\n    this.annotation = {\n      boundingBox: this.boundingBox,\n      categoryId: category.id,\n      id: uuid.v4(),\n      mask: this.mask,\n    };\n  }\n}\n","import * as ImageJS from \"image-js\";\nimport PriorityQueue from \"ts-priority-queue\";\n\nconst dirs = [\n  [1, 0],\n  [0, 1],\n  [-1, 0],\n  [0, -1],\n];\n\nclass Position {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  add(that: Position) {\n    this.x += that.x;\n    this.y += that.y;\n\n    return this;\n  }\n\n  clone() {\n    return new Position(this.x, this.y);\n  }\n\n  in(maximum: Position) {\n    return this.x >= 0 && this.x <= maximum.x && this.y >= 0 && maximum.y;\n  }\n\n  overwrite(that: Position) {\n    this.x = that.x;\n    this.y = that.y;\n\n    return this;\n  }\n\n  subtract(that: Position) {\n    this.x -= that.x;\n    this.y -= that.y;\n\n    return this;\n  }\n}\n\nexport interface FloodImage extends ImageJS.Image {\n  overlay: ImageJS.Image;\n  toleranceMap: ImageJS.Image;\n  target: Position;\n  overlayTolerance: number;\n}\n\n// Generate a tolerance map and associate it with the image itself\nexport const makeFloodMap = ({\n  x,\n  y,\n  image,\n}: {\n  x: number;\n  y: number;\n  image: ImageJS.Image;\n}) => {\n  const tol: Array<number> = [];\n\n  const color = image.getPixelXY(x, y);\n\n  if (image.data.length === image.width * image.height * 3) {\n    //RGB image\n    for (let i = 0; i < image.data.length; i += 3) {\n      const red = Math.abs(image.data[i] - color[0]);\n      const green = Math.abs(image.data[i + 1] - color[1]);\n      const blue = Math.abs(image.data[i + 2] - color[2]);\n      tol.push(Math.floor((red + green + blue) / 3));\n    }\n  } else if (image.data.length === image.width * image.height * 4) {\n    //RGBA image\n    for (let i = 0; i < image.data.length; i += 4) {\n      const red = Math.abs(image.data[i] - color[0]);\n      const green = Math.abs(image.data[i + 1] - color[1]);\n      const blue = Math.abs(image.data[i + 2] - color[2]);\n      tol.push(Math.floor((red + green + blue) / 3));\n    }\n  } else if (image.data.length === image.width * image.height) {\n    //greyscale\n    for (let i = 0; i < image.data.length; i++) {\n      const grey = Math.abs(image.data[i] - color[0]);\n      tol.push(Math.floor((grey / image.maxValue) * 255));\n    }\n  }\n\n  return new ImageJS.Image(image.width, image.height, tol, {\n    alpha: 0,\n    components: 1,\n  });\n};\n\n// Expand a watershed map until the desired tolerance is reached.\nexport const doFlood = ({\n  floodMap,\n  toleranceMap,\n  queue,\n  tolerance,\n  maxTol,\n  seen,\n}: {\n  floodMap: ImageJS.Image;\n  toleranceMap: ImageJS.Image;\n  queue: PriorityQueue<Array<number>>;\n  tolerance: number;\n  maxTol: number;\n  seen: Set<number>;\n}) => {\n  while (queue.length > 0 && queue.peek()[2] <= tolerance) {\n    let currentPoint = queue.dequeue();\n    maxTol = Math.max(currentPoint[2], maxTol);\n    floodMap.setPixelXY(currentPoint[0], currentPoint[1], [maxTol]);\n    for (let dir of dirs) {\n      let newX = currentPoint[0] + dir[0];\n      let newY = currentPoint[1] + dir[1];\n      let idx = newX + newY * toleranceMap.width;\n      if (\n        !seen.has(idx) &&\n        newX >= 0 &&\n        newY >= 0 &&\n        newX < toleranceMap.width &&\n        newY < toleranceMap.height\n      ) {\n        queue.queue([newX, newY, toleranceMap.getPixelXY(newX, newY)[0]]);\n        seen.add(idx);\n      }\n    }\n  }\n};\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport { doFlood, makeFloodMap } from \"../../../flood\";\nimport * as ImageJS from \"image-js\";\nimport { encode } from \"../../../rle\";\nimport PriorityQueue from \"ts-priority-queue\";\n\nexport class ColorAnnotationTool extends AnnotationTool {\n  roiContour?: ImageJS.Image;\n  roiMask?: ImageJS.Image;\n  roiManager?: ImageJS.RoiManager;\n  offset: { x: number; y: number } = { x: 0, y: 0 };\n  overlayData: string = \"\";\n  points: Array<number> = [];\n  initialPosition: { x: number; y: number } = { x: 0, y: 0 };\n  tolerance: number = 1;\n  toleranceMap?: ImageJS.Image;\n  floodMap?: ImageJS.Image;\n  toleranceQueue: PriorityQueue<Array<number>> = new PriorityQueue({\n    comparator: function (a: Array<number>, b: Array<number>) {\n      return a[2] - b[2];\n    },\n  });\n  toolTipPosition?: { x: number; y: number };\n  maxTol: number = 0;\n  seen: Set<number> = new Set();\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.overlayData = \"\";\n\n    this.roiManager = undefined;\n    this.roiMask = undefined;\n\n    this.points = [];\n\n    this.initialPosition = { x: 0, y: 0 };\n    this.toolTipPosition = undefined;\n\n    this.tolerance = 1;\n    this.toleranceMap = undefined;\n    this.toleranceQueue.clear();\n    this.seen.clear();\n    this.maxTol = 0;\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    this.annotated = false;\n    this.annotating = true;\n    this.tolerance = 1;\n    this.maxTol = 0;\n    this.initialPosition = position;\n    this.toolTipPosition = position;\n\n    this.toleranceMap = makeFloodMap({\n      x: Math.floor(position.x),\n      y: Math.floor(position.y),\n      image: this.image!,\n    });\n\n    const empty = new Array(this.image.height * this.image.width).fill(\n      Infinity\n    );\n\n    this.floodMap = new ImageJS.Image(\n      this.image.width,\n      this.image.height,\n      empty,\n      {\n        alpha: 0,\n        components: 1,\n      }\n    );\n\n    this.toleranceQueue.clear();\n    this.seen.clear();\n    this.roiManager = this.floodMap.getRoiManager();\n\n    this.toleranceQueue.queue([\n      Math.floor(position.x),\n      Math.floor(position.y),\n      0,\n    ]);\n    const idx =\n      Math.floor(position.x) + Math.floor(position.y) * this.image.width;\n    this.seen.add(idx);\n\n    this.updateOverlay(position);\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (this.annotating) {\n      const diff = Math.ceil(\n        Math.hypot(\n          position.x - this.initialPosition!.x,\n          position.y - this.initialPosition!.y\n        )\n      );\n      if (diff !== this.tolerance) {\n        this.tolerance = diff;\n        this.updateOverlay(this.initialPosition);\n      }\n      this.toolTipPosition = position;\n    }\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (!this.roiManager || !this.roiMask) return;\n\n    // @ts-ignore\n    this.roiManager.fromMask(this.roiMask);\n    // @ts-ignore\n    this.roiMask = this.roiManager.getMasks()[0];\n\n    //@ts-ignore\n    const rois = this.roiManager.getRois();\n    const roi = rois.sort((a: any, b: any) => {\n      return b.surface - a.surface;\n    })[1]; // take the second roi because the first one will be of the size of the image,the second one is the actual largest roi\n    this._boundingBox = [roi.minX, roi.minY, roi.maxX + 1, roi.maxY + 1];\n\n    if (!this.roiMask || !this.boundingBox) return;\n\n    const boundingBoxWidth = this.boundingBox[2] - this.boundingBox[0];\n    const boundingBoxHeight = this.boundingBox[3] - this.boundingBox[1];\n\n    //mask should be the whole image, not just the ROI\n    const imgMask = new ImageJS.Image(boundingBoxWidth, boundingBoxHeight, {\n      components: 1,\n      alpha: 0,\n    });\n\n    for (let x = 0; x < boundingBoxWidth; x++) {\n      for (let y = 0; y < boundingBoxHeight; y++) {\n        //@ts-ignore\n        if (this.roiMask.getBitXY(x, y)) {\n          imgMask.setPixelXY(x, y, [255]);\n        }\n      }\n    }\n\n    // @ts-ignore\n    this._mask = encode(imgMask.data as Uint8Array);\n\n    this.annotated = true;\n    this.annotating = false;\n  }\n\n  private static colorOverlay(\n    mask: ImageJS.Image,\n    offset: { x: number; y: number },\n    position: { x: number; y: number },\n    width: number,\n    height: number,\n    color: string\n  ) {\n    const r = parseInt(color.slice(1, 3), 16);\n    const g = parseInt(color.slice(3, 5), 16);\n    const b = parseInt(color.slice(5, 7), 16);\n    const fillColor = [r, g, b, 150];\n\n    let overlay = new ImageJS.Image(\n      width,\n      height,\n      new Uint8Array(width * height * 4),\n      { alpha: 1 }\n    );\n\n    // roiPaint doesn't respect alpha, so we'll paint it ourselves.\n    for (let x = 0; x < mask.width; x++) {\n      for (let y = 0; y < mask.height; y++) {\n        if (mask.getBitXY(x, y)) {\n          overlay.setPixelXY(x + offset.x, y + offset.y, fillColor);\n        }\n      }\n    }\n\n    // Set the origin point to white, for visibility.\n    overlay.setPixelXY(position.x, position.y, [255, 255, 255, 255]);\n\n    return overlay.toDataURL(\"image/png\", { useCanvas: true });\n  }\n\n  private updateOverlay(position: { x: number; y: number }) {\n    if (this.maxTol <= this.tolerance) {\n      doFlood({\n        floodMap: this.floodMap!,\n        toleranceMap: this.toleranceMap!,\n        queue: this.toleranceQueue,\n        tolerance: this.tolerance,\n        maxTol: this.maxTol,\n        seen: this.seen,\n      });\n    }\n    // Make a threshold mask\n    this.roiMask = this.floodMap!.mask({\n      threshold: this.tolerance,\n      invert: true,\n    });\n\n    if (!this.roiMask) return;\n\n    this.overlayData = ColorAnnotationTool.colorOverlay(\n      this.roiMask,\n      this.offset,\n      position,\n      this.image.width,\n      this.image.height,\n      \"red\"\n    );\n  }\n}\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport * as _ from \"lodash\";\nimport * as ImageJS from \"image-js\";\nimport { decode, encode } from \"../../../rle\";\n\nexport class EllipticalAnnotationTool extends AnnotationTool {\n  center?: { x: number; y: number };\n  origin?: { x: number; y: number };\n  radius?: { x: number; y: number };\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.center = undefined;\n    this.origin = undefined;\n    this.radius = undefined;\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    if (!this.radius) {\n      this.origin = position;\n\n      this.annotating = true;\n    }\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    this.resize(position);\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    if (this.radius) {\n      this.annotated = true;\n\n      this.annotating = false;\n\n      this.points = this.convertToPoints();\n\n      this._boundingBox = this.computeBoundingBoxFromContours(this.points);\n\n      const mask = this.convertToMask();\n\n      if (!mask) return;\n\n      this._mask = encode(mask);\n    }\n  }\n\n  private convertToMask() {\n    if (!this.boundingBox) return;\n\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = this.image.width;\n    canvas.height = this.image.height;\n\n    const ctx = canvas.getContext(\"2d\");\n\n    if (!ctx || !this.center || !this.radius) return undefined;\n\n    ctx.beginPath();\n    ctx.ellipse(\n      this.center.x,\n      this.center.y,\n      this.radius.x,\n      this.radius.y,\n      2 * Math.PI,\n      0,\n      2 * Math.PI\n    );\n    ctx.fill();\n\n    const roiWidth = this.boundingBox[2] - this.boundingBox[0];\n    const roiHeight = this.boundingBox[3] - this.boundingBox[1];\n\n    //@ts-ignore\n    const imageMask = ImageJS.Image.fromCanvas(canvas).getChannel(3);\n    const croppedImageMask = new ImageJS.Image(roiWidth, roiHeight, {\n      components: 1,\n      alpha: 0,\n    });\n\n    for (let x = 0; x < roiWidth; x++) {\n      for (let y = 0; y < roiHeight; y++) {\n        if (\n          imageMask.getPixelXY(\n            x + this.boundingBox[0],\n            y + this.boundingBox[1]\n          )[0] > 1\n        ) {\n          croppedImageMask.setPixelXY(x, y, [255]);\n        } else {\n          croppedImageMask.setPixelXY(x, y, [0]);\n        }\n      }\n    }\n\n    return Uint8Array.from(croppedImageMask.data);\n  }\n\n  private convertToPoints() {\n    if (!this.radius || !this.origin || !this.center) return [];\n\n    const centerX = Math.round(this.center.x);\n    const centerY = Math.round(this.center.y);\n\n    const points: Array<number> = [];\n    const foo: Array<Array<number>> = [];\n    //first quadrant points\n    for (let y = centerY; y < centerY + this.radius.y; y += 0.5) {\n      const x =\n        this.radius.x *\n          Math.sqrt(\n            1 -\n              ((y - centerY) * (y - centerY)) / (this.radius.y * this.radius.y)\n          ) +\n        centerX;\n      points.push(Math.round(x));\n      points.push(Math.round(y));\n      foo.push([Math.round(x), Math.round(y)]);\n    }\n    // const reversedFoo = _.reverse(foo);\n    //second quadrant points\n    _.forEachRight(foo, (position: Array<number>) => {\n      let x = 2 * centerX - position[0];\n      points.push(x);\n      points.push(position[1]);\n    });\n    //third quadrant points\n    _.forEach(foo, (position: Array<number>) => {\n      let x = 2 * centerX - position[0];\n      let y = 2 * centerY - position[1];\n      points.push(x);\n      points.push(y);\n    });\n    //fourth quadant points\n    _.forEachRight(foo, (position: Array<number>) => {\n      let y = 2 * centerY - position[1];\n      points.push(position[0]);\n      points.push(y);\n    });\n\n    return points;\n  }\n\n  private resize(position: { x: number; y: number }) {\n    if (this.origin) {\n      this.center = {\n        x: (position.x - this.origin.x) / 2 + this.origin.x,\n        y: (position.y - this.origin.y) / 2 + this.origin.y,\n      };\n\n      this.radius = {\n        x: Math.abs((position.x - this.origin.x) / 2),\n        y: Math.abs((position.y - this.origin.y) / 2),\n      };\n    }\n  }\n}\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport * as _ from \"lodash\";\nimport { encode } from \"../../../rle\";\n\nexport class LassoAnnotationTool extends AnnotationTool {\n  anchor?: { x: number; y: number };\n  buffer: Array<number> = [];\n  origin?: { x: number; y: number };\n  points: Array<number> = [];\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.annotation = undefined;\n\n    this.anchor = undefined;\n    this.buffer = [];\n    this.origin = undefined;\n    this.points = [];\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    if (this.buffer && this.buffer.length === 0) {\n      this.annotating = true;\n\n      if (!this.origin) {\n        this.origin = position;\n        this.buffer = [...this.buffer, position.x, position.y];\n      }\n    }\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    if (this.anchor) {\n      if (\n        this.buffer[this.buffer.length - 2] !== this.anchor.x ||\n        this.buffer[this.buffer.length - 1] !== this.anchor.y\n      ) {\n        this.buffer.pop();\n        this.buffer.pop();\n      }\n\n      this.buffer = [...this.buffer, position.x, position.y];\n\n      return;\n    }\n\n    if (this.origin) {\n      this.buffer = [...this.buffer, position.x, position.y];\n    }\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating || !this.origin) return;\n\n    if (this.buffer.length < 3) return;\n\n    if (this.origin && this.buffer && this.buffer.length > 0) {\n      this.buffer = [\n        ...this.buffer,\n        position.x,\n        position.y,\n        this.origin.x,\n        this.origin.y,\n      ];\n\n      this.annotated = true;\n      this.annotating = false;\n\n      this.points = this.buffer;\n      this._boundingBox = this.computeBoundingBoxFromContours(this.points);\n\n      const maskImage = this.computeMask().crop({\n        x: this._boundingBox[0],\n        y: this._boundingBox[1],\n        width: this._boundingBox[2] - this._boundingBox[0],\n        height: this._boundingBox[3] - this._boundingBox[1],\n      });\n\n      this._mask = encode(maskImage.data);\n\n      this.buffer = [];\n    }\n\n    if (this.anchor) {\n      this.anchor = {\n        x: this.buffer[this.buffer.length - 2],\n        y: this.buffer[this.buffer.length - 1],\n      };\n\n      return;\n    }\n\n    if (this.origin && this.buffer && this.buffer.length > 0) {\n      this.anchor = {\n        x: this.buffer[this.buffer.length - 2],\n        y: this.buffer[this.buffer.length - 1],\n      };\n\n      return;\n    }\n  }\n\n  private connected(\n    position: { x: number; y: number },\n    threshold: number = 4\n  ): boolean | undefined {\n    if (!this.origin) return undefined;\n\n    const distance = Math.hypot(\n      position.x - this.origin.x,\n      position.y - this.origin.y\n    );\n\n    return distance < threshold;\n  }\n}\n","/**\n * Based on https://github.com/mourner/tinyqueue\n * Copyright (c) 2017, Vladimir Agafonkin https://github.com/mourner/tinyqueue/blob/master/LICENSE\n *\n * Adapted for PathFinding needs by @anvaka\n * Copyright (c) 2017, Andrei Kashcha\n *\n * Further adapted for Piximi\n */\nimport { PiximiNode } from \"../GraphHelper\";\n\nexport class NodeHeap {\n  public data: Array<any> = [];\n\n  public length: number = 0;\n\n  compare(a: PiximiNode, b: PiximiNode) {\n    return a.fScore - b.fScore;\n  }\n\n  setNodeId(node: PiximiNode, heapIndex: number) {\n    node.heapIndex = heapIndex;\n  }\n\n  push(item: any) {\n    this.data.push(item);\n    this.setNodeId(item, this.length);\n    this.length++;\n    this._up(this.length - 1);\n  }\n\n  pop() {\n    if (this.length === 0) return undefined;\n\n    const top = this.data[0];\n    this.length--;\n\n    if (this.length > 0) {\n      this.data[0] = this.data[this.length];\n      this.setNodeId(this.data[0], 0);\n      this._down(0);\n    }\n    this.data.pop();\n\n    return top;\n  }\n\n  updateItem(pos: number) {\n    this._down(pos);\n    this._up(pos);\n  }\n\n  _up(pos: number) {\n    const data = this.data;\n    const compare = this.compare;\n    const setNodeId = this.setNodeId;\n    const item = data[pos];\n\n    while (pos > 0) {\n      const parent = (pos - 1) >> 1;\n      const current = data[parent];\n      if (compare(item, current) >= 0) break;\n      data[pos] = current;\n\n      setNodeId(current, pos);\n      pos = parent;\n    }\n\n    data[pos] = item;\n    setNodeId(item, pos);\n  }\n\n  _down(pos: number) {\n    const data = this.data;\n    const compare = this.compare;\n    const halfLength = this.length >> 1;\n    const item = data[pos];\n    const setNodeId = this.setNodeId;\n\n    while (pos < halfLength) {\n      let left = (pos << 1) + 1;\n      const right = left + 1;\n      let best = data[left];\n\n      if (right < this.length && compare(data[right], best) < 0) {\n        left = right;\n        best = data[right];\n      }\n      if (compare(best, item) >= 0) break;\n\n      data[pos] = best;\n      setNodeId(best, pos);\n      pos = left;\n    }\n\n    data[pos] = item;\n    setNodeId(item, pos);\n  }\n}\n","import { NodeHeap } from \"./NodeHeap\";\nimport { fromIdxToCoord, PiximiGraph, PiximiNode } from \"../GraphHelper\";\nimport { Node } from \"ngraph.graph\";\n\n/**\n * Performs a uni-directional A Star search on graph.\n *\n * We will try to minimize f(n) = g(n) + h(n), where\n * g(n) is actual distance from source node to `n`, and\n * h(n) is heuristic distance from `n` to target node.\n */\n\nconst NO_PATH: never[] = [];\n\n/**\n * Creates a new instance of pathfinder. A pathfinder has just one method:\n * `find(fromId, toId)`, it may be extended in future.\n *\n * @param graph instance. See https://github.com/anvaka/ngraph.graph\n * @param {width} width of the original image\n * @param {factor} factor for scaling between image and graph\n *\n * @returns {Object} A pathfinder with single method `find()`.\n */\nexport function cachedAStarPathSearch(\n  graph: PiximiGraph,\n  width: number,\n  factor: number\n) {\n  // whether traversal should be considered over oriented graph.\n  const oriented = true;\n\n  const heuristic = (fromNode: PiximiNode, toNode: PiximiNode) => {\n    const [x1, y1] = fromIdxToCoord(fromNode.id as number, width);\n    const [x2, y2] = fromIdxToCoord(toNode.id as number, width);\n    if (x1 === x2 || y1 === y2) {\n      return 1;\n    }\n    return 1.41;\n  };\n\n  const distance = (fromNode: Node, toNode: Node) => {\n    const [x1, y1] = fromIdxToCoord(fromNode.id as number, width);\n    const [x2, y2] = fromIdxToCoord(toNode.id as number, width);\n    if (x1 === x2 || y1 === y2) {\n      return 1 * toNode.data;\n    }\n    return 1.41 * toNode.data;\n  };\n\n  return {\n    /**\n     * Finds a path between node `fromId` and `toId`.\n     * @returns {Array} of nodes between `toId` and `fromId`. Empty array is returned\n     * if no path is found.\n     */\n    find: find,\n  };\n\n  function find(fromId: number, toId: number) {\n    const from = graph.getNode(fromId) as PiximiNode;\n    if (!from) return NO_PATH;\n    const to = graph.getNode(toId) as PiximiNode;\n    if (!to) return NO_PATH;\n\n    let cameFrom: any;\n    // Maps nodeId to NodeSearchState.\n\n    const dest = graph.getNode(toId) as PiximiNode;\n    if (dest) {\n      if (dest.fromId === fromId && dest.trace.length > 0) {\n        return dest.trace;\n      }\n    }\n\n    if (graph.fromId !== fromId || graph.openSet.length === 0) {\n      graph.openSet = new NodeHeap();\n      // For the first node, fScore is completely heuristic.\n      from.fScore = heuristic(from, to);\n\n      // The cost of going from start to start is zero.\n      from.distanceToSource = 0;\n      graph.openSet.push(from);\n      from.open = 1;\n      graph.fromId = fromId;\n    }\n\n    while (graph.openSet.length > 0) {\n      cameFrom = graph.openSet.pop();\n\n      if (cameFrom.id === toId) {\n        cameFrom.trace = reconstructPath(graph, cameFrom, width, factor);\n        cameFrom.fromId = fromId;\n        return cameFrom.trace;\n      }\n\n      // no need to visit this node anymore\n      cameFrom.trace = reconstructPath(graph, cameFrom, width, factor);\n      cameFrom.fromId = fromId;\n      cameFrom.closed = true;\n      graph.forEachLinkedNode(cameFrom.id, visitNeighbour, oriented);\n    }\n\n    // If we got here, then there is no path.\n    return NO_PATH;\n\n    function visitNeighbour(otherNode: any) {\n      if (otherNode.fromId !== graph.fromId) {\n        // This is old data, reset all params\n        otherNode.fromId = graph.fromId;\n        otherNode.trace = [];\n        otherNode.parentId = null;\n        otherNode.closed = false;\n        otherNode.open = 0;\n        otherNode.distanceToSource = Number.POSITIVE_INFINITY;\n        otherNode.fScore = Number.POSITIVE_INFINITY;\n        otherNode.heapIndex = -1;\n      }\n\n      if (otherNode.closed) {\n        // Already processed this node.\n        return;\n      }\n      if (otherNode.open === 0) {\n        // Remember this node.\n        graph.openSet.push(otherNode);\n        otherNode.open = 1;\n      }\n\n      const tentativeDistance =\n        cameFrom.distanceToSource + distance(otherNode, cameFrom);\n      if (tentativeDistance >= otherNode.distanceToSource) {\n        // This would only make our path longer. Ignore this route.\n        return;\n      }\n\n      // bingo! we found shorter path:\n      otherNode.parentId = cameFrom.id;\n      otherNode.distanceToSource = tentativeDistance;\n      otherNode.fScore = tentativeDistance + heuristic(otherNode, to);\n\n      graph.openSet.updateItem(otherNode.heapIndex);\n    }\n  }\n}\n\nfunction reconstructPath(\n  graph: PiximiGraph,\n  searchNode: PiximiNode | null,\n  width: number,\n  factor: number = 1\n) {\n  if (!searchNode) return;\n\n  const [x, y] = fromIdxToCoord(searchNode.id as number, width);\n  const newCoord = [x / factor, y / factor];\n  let coords = [];\n  const fromId = graph.fromId;\n  if (searchNode!.parentId !== null) {\n    const parentNode = graph.getNode(searchNode!.parentId) as PiximiNode;\n    if (typeof parentNode !== \"undefined\" && parentNode.fromId === fromId) {\n      // Fetch a trace from the last coordinate\n      coords.push(...parentNode.trace);\n      if (coords.length > 1) {\n        const oldDirection = pathDirection(\n          coords[coords.length - 2],\n          coords[coords.length - 1]\n        );\n        const newDirection = pathDirection(coords[coords.length - 1], newCoord);\n        if (oldDirection === newDirection) {\n          coords.pop();\n        }\n      }\n    }\n  }\n  coords.push(newCoord);\n  return coords;\n}\n\nexport const pathDirection = (from: Array<number>, to: Array<number>) => {\n  // Generate a number representing the relative direction of the coordinates.\n  // Assuming TopLeft of an image is 0,0\n  const dx = to[0] - from[0];\n  const dy = to[1] - from[1];\n  if (dx === 0) {\n    if (dy < 0) {\n      return 0; // Up\n    }\n    if (dy > 0) {\n      return 4; // Down\n    }\n  }\n  if (dy === 0) {\n    if (dx > 0) {\n      return 2; // Right\n    }\n    if (dx < 0) {\n      return 6; // Left\n    }\n  }\n  if (dx > 0) {\n    if (dy < 0) {\n      return 1; // Up+Right\n    }\n    if (dy > 0) {\n      return 3; // Down+Right\n    }\n  }\n  if (dx < 0) {\n    if (dy < 0) {\n      return 7; // Up+Left\n    }\n    if (dy > 0) {\n      return 5; // Down+Left\n    }\n  }\n  console.log(\n    \"Invalid direction, this should never appear so check the code\",\n    dx,\n    dy\n  );\n};\n","import createGraph, { Graph, Node } from \"ngraph.graph\";\nimport { getIdx } from \"./imageHelper\";\nimport { DataArray } from \"image-js\";\n\nimport { cachedAStarPathSearch } from \"./pathfinder/PathFinder\";\nimport { NodeHeap } from \"./pathfinder/NodeHeap\";\n\nexport interface PiximiGraph extends Graph {\n  fromId: number;\n  openSet: NodeHeap;\n}\n\nexport interface PiximiNode extends Node {\n  fromId: number;\n  trace: Array<Array<number>>;\n\n  parentId: number | null;\n  closed: boolean;\n  open: number;\n  distanceToSource: number;\n  fScore: number;\n  heapIndex: number;\n}\n\nexport const validNeighbours = (\n  x: number,\n  y: number,\n  height: number,\n  width: number\n) => {\n  const xoffsets = [0];\n  const yoffsets = [0];\n  const output: { x: number; y: number }[] = [];\n  //David will know what to write here\n  if (x > 0) {\n    xoffsets.push(-1);\n  }\n  if (x < width - 1) {\n    xoffsets.push(1);\n  }\n  if (y > 0) {\n    yoffsets.push(-1);\n  }\n  if (y < height - 1) {\n    yoffsets.push(1);\n  }\n  for (let xoffset of xoffsets) {\n    for (let yoffset of yoffsets) {\n      if (!(xoffset === 0 && yoffset === 0)) {\n        output.push({ x: x + xoffset, y: y + yoffset });\n      }\n    }\n  }\n  return output;\n};\n\nexport const fromIdxToCoord = (idx: number, width: number) => {\n  const row = Math.floor(idx / width);\n  const col = idx - row * width;\n  return [col, row];\n};\n\nexport const makeGraph = (\n  edges: Uint8ClampedArray | DataArray,\n  height: number,\n  width: number\n) => {\n  let graph: any = createGraph();\n  graph.fromId = -1;\n  graph.openSet = new NodeHeap();\n  let cap = 255;\n  if (edges.BYTES_PER_ELEMENT === 2) {\n    cap = 65535;\n  }\n  for (let y = 0; y < height; y++) {\n    for (let x = 0; x < width; x++) {\n      const startIdx = getIdx(width, 1)(x, y, 0);\n      const dist = cap - edges[startIdx];\n\n      graph.addNode(startIdx, dist);\n\n      const pixels = validNeighbours(x, y, height, width);\n\n      for (let pixel of pixels) {\n        const idx = getIdx(width, 1)(pixel.x, pixel.y, 0);\n        graph.addLink(startIdx, idx);\n      }\n    }\n  }\n  return graph as PiximiGraph;\n};\n\nexport const createPathFinder = (\n  graph: PiximiGraph,\n  width: number,\n  factor: number\n) => {\n  return cachedAStarPathSearch(graph, width, factor);\n};\n\nexport const convertPathToCoords = (\n  foundPath: any,\n  width: number,\n  factor: number = 1\n) => {\n  const pathCoords = [];\n  for (let node of foundPath) {\n    const id = node.id as number;\n    const [x, y] = fromIdxToCoord(id, width);\n    pathCoords.push([x / factor, y / factor]);\n  }\n  return pathCoords;\n};\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport { createPathFinder, makeGraph, PiximiGraph } from \"../../../GraphHelper\";\nimport { getIdx } from \"../../../imageHelper\";\nimport * as ImageJS from \"image-js\";\nimport * as _ from \"lodash\";\nimport { encode } from \"../../../rle\";\n\nexport class MagneticAnnotationTool extends AnnotationTool {\n  anchor?: { x: number; y: number };\n  buffer: Array<number> = [];\n  factor: number;\n  graph?: PiximiGraph;\n  origin?: { x: number; y: number };\n  path: Array<number> = [];\n  pathfinder?: { find: (fromId: number, toId: number) => any };\n  points: Array<number> = [];\n  previous: Array<number> = [];\n  response?: ImageJS.Image;\n\n  constructor(image: ImageJS.Image, factor: number = 0.5) {\n    super(image);\n\n    this.factor = factor;\n\n    this.filter();\n\n    if (!this.image || !this.response) return;\n\n    this.graph = makeGraph(\n      this.response.data,\n      this.response.height,\n      this.response.width\n    );\n\n    this.pathfinder = createPathFinder(\n      this.graph,\n      this.image.width * factor,\n      factor\n    );\n  }\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.annotation = undefined;\n\n    this.anchor = undefined;\n    this.buffer = [];\n    this.graph = undefined;\n    this.origin = undefined;\n    this.points = [];\n    this.previous = [];\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    if (this.buffer && this.buffer.length === 0) {\n      this.annotating = true;\n\n      if (!this.origin) {\n        this.origin = position;\n      }\n    }\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (!this.image || !this.pathfinder || this.annotated || !this.annotating)\n      return;\n\n    if (this.anchor) {\n      const source = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(this.anchor.x * this.factor),\n        Math.floor(this.anchor.y * this.factor),\n        0\n      );\n\n      const destination = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(position.x * this.factor),\n        Math.floor(position.y * this.factor),\n        0\n      );\n\n      this.path = _.flatten(this.pathfinder.find(source, destination));\n\n      if (\n        this.buffer[this.buffer.length - 2] !== this.anchor.x ||\n        this.buffer[this.buffer.length - 1] !== this.anchor.y\n      ) {\n        this.buffer.pop();\n        this.buffer.pop();\n      }\n\n      this.buffer = [\n        ...this.previous,\n        this.anchor.x,\n        this.anchor.y,\n        ...this.path,\n      ];\n\n      return;\n    }\n\n    if (this.origin) {\n      const source = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(this.origin.x * this.factor),\n        Math.floor(this.origin.y * this.factor),\n        0\n      );\n\n      const destination = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(position.x * this.factor),\n        Math.floor(position.y * this.factor),\n        0\n      );\n\n      this.path = _.flatten(this.pathfinder.find(source, destination));\n\n      this.buffer.pop();\n      this.buffer.pop();\n\n      this.buffer = [this.origin.x, this.origin.y, ...this.path];\n    }\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    if (\n      this.connected(position) &&\n      this.origin &&\n      this.buffer &&\n      this.buffer.length > 0\n    ) {\n      this.buffer = [\n        ...this.buffer,\n        position.x,\n        position.y,\n        this.origin.x,\n        this.origin.y,\n      ];\n\n      this.annotated = true;\n      this.annotating = false;\n\n      this.points = this.buffer;\n\n      this._boundingBox = this.computeBoundingBoxFromContours(this.points);\n\n      const maskImage = this.computeMask().crop({\n        x: this._boundingBox[0],\n        y: this._boundingBox[1],\n        width: this._boundingBox[2] - this._boundingBox[0],\n        height: this._boundingBox[3] - this._boundingBox[1],\n      });\n\n      this._mask = encode(maskImage.data);\n\n      this.buffer = [];\n\n      return;\n    }\n\n    if (this.anchor && this.image) {\n      const source = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(this.anchor.x * this.factor),\n        Math.floor(this.anchor.y * this.factor),\n        0\n      );\n\n      const destination = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(this.buffer[this.buffer.length - 2] * this.factor),\n        Math.floor(this.buffer[this.buffer.length - 1] * this.factor),\n        0\n      );\n\n      if (!this.pathfinder) return;\n\n      this.path = _.flatten(this.pathfinder.find(source, destination));\n\n      this.buffer.pop();\n      this.buffer.pop();\n\n      this.buffer = [...this.previous, ...this.path];\n\n      this.previous = [...this.previous, ...this.path];\n\n      this.anchor = {\n        x: this.buffer[this.buffer.length - 2],\n        y: this.buffer[this.buffer.length - 1],\n      };\n\n      return;\n    }\n\n    if (this.origin && this.buffer.length > 0) {\n      if (!this.image || !this.origin || !this.pathfinder) return;\n\n      this.anchor = {\n        x: this.buffer[this.buffer.length - 2],\n        y: this.buffer[this.buffer.length - 1],\n      };\n\n      const source = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(this.origin.x * this.factor),\n        Math.floor(this.origin.y * this.factor),\n        0\n      );\n\n      const destination = getIdx(this.image.width * this.factor, 1)(\n        Math.floor(this.buffer[this.buffer.length - 2] * this.factor),\n        Math.floor(this.buffer[this.buffer.length - 1] * this.factor),\n        0\n      );\n\n      this.path = _.flatten(this.pathfinder.find(source, destination));\n\n      this.buffer = [this.origin.x, this.origin.y, ...this.path];\n\n      this.previous = [\n        ...this.previous,\n        this.origin.x,\n        this.origin.y,\n        ...this.path,\n      ];\n\n      return;\n    }\n  }\n\n  private connected(\n    position: { x: number; y: number },\n    threshold: number = 4\n  ): boolean | undefined {\n    if (!this.origin) return undefined;\n\n    const distance = Math.hypot(\n      position.x - this.origin.x,\n      position.y - this.origin.y\n    );\n\n    return distance < threshold;\n  }\n\n  private filter() {\n    if (!this.image) return;\n\n    const options = { factor: this.factor };\n\n    this.response = this.image.resize(options).grey().sobelFilter();\n  }\n}\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport * as ImageJS from \"image-js\";\nimport { encode } from \"../../../rle\";\n\nexport class RectangularAnnotationTool extends AnnotationTool {\n  origin?: { x: number; y: number };\n\n  width?: number;\n  height?: number;\n\n  computeBoundingBox(): [number, number, number, number] | undefined {\n    if (!this.points || !this.points.length) return undefined;\n    return [this.points[0], this.points[1], this.points[4], this.points[5]];\n  }\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.origin = undefined;\n\n    this.width = undefined;\n    this.height = undefined;\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    if (!this.width) {\n      this.origin = position;\n\n      this.annotating = true;\n    } else {\n      this.resize(position);\n\n      this.points = this.convertToPoints();\n\n      this._boundingBox = this.computeBoundingBox();\n\n      const mask = this.convertToMask();\n      if (!mask) return;\n      this._mask = encode(new Uint8Array(mask));\n\n      this.annotated = true;\n      this.annotating = false;\n    }\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    this.resize(position);\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n    if (this.width) {\n      this.points = this.convertToPoints();\n\n      this._boundingBox = this.computeBoundingBox();\n\n      const mask = this.convertToMask();\n      if (!mask) return;\n      this._mask = encode(new Uint8Array(mask));\n\n      this.annotated = true;\n      this.annotating = false;\n    }\n  }\n\n  private convertToPoints() {\n    if (!this.width || !this.height || !this.origin) return [];\n\n    const points: Array<number> = [];\n\n    const origin = { x: this.origin.x, y: this.origin.y };\n    let width = this.width;\n    let height = this.height;\n\n    //negative height and width may happen if the rectangle was drawn from right to left\n    if (this.width < 0) {\n      width = Math.abs(this.width);\n      origin.x = this.origin.x - width;\n    }\n    if (this.height < 0) {\n      height = Math.abs(this.height);\n      origin.y = this.origin.y - height;\n    }\n\n    // add corners of the rectangle\n    const x1 = Math.round(origin.x);\n    const y1 = Math.round(origin.y);\n    const x2 = Math.round(origin.x + width);\n    const y2 = Math.round(origin.y + height);\n    points.push(...[x1, y1, x2, y1, x2, y2, x1, y2, x1, y1]);\n\n    return points;\n  }\n\n  private convertToMask() {\n    if (!this.points || !this.boundingBox) return;\n\n    const x1 = this.points[0];\n    const y1 = this.points[1];\n    const x2 = this.points[4];\n    const y2 = this.points[5];\n\n    return new Uint8Array((x2 - x1) * (y2 - y1)).fill(255);\n  }\n\n  private resize(position: { x: number; y: number }) {\n    if (this.origin) {\n      this.width = position.x - this.origin.x;\n      this.height = position.y - this.origin.y;\n    }\n  }\n}\n","import { RectangularAnnotationTool } from \"../RectangularAnnotationTool\";\nimport * as ImageJS from \"image-js\";\nimport * as tensorflow from \"@tensorflow/tfjs\";\nimport * as _ from \"lodash\";\nimport { encode } from \"../../../rle\";\n\nexport class ObjectAnnotationTool extends RectangularAnnotationTool {\n  graph?: tensorflow.LayersModel;\n  prediction?: ImageJS.Image;\n  points: Array<number> = [];\n  // @ts-ignore\n  roi?: ImageJS.Roi;\n  offset?: { x: number; y: number };\n  output?: ImageJS.Image;\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.prediction = undefined;\n    this.points = [];\n    this.roi = undefined;\n    this.offset = undefined;\n    this.output = undefined;\n\n    this.origin = undefined;\n    this.width = undefined;\n  }\n\n  async onMouseUp(position: { x: number; y: number }) {\n    if (!this.annotating || this.annotated) return;\n\n    await this.predict();\n  }\n\n  static async compile(image: ImageJS.Image) {\n    const instance = new ObjectAnnotationTool(image);\n\n    const pathname =\n      \"https://raw.githubusercontent.com/zaidalyafeai/HostedModels/master/unet-128/model.json\";\n\n    instance.graph = await tensorflow.loadLayersModel(pathname);\n\n    const optimizer = tensorflow.train.adam();\n\n    instance.graph.compile({\n      optimizer: optimizer,\n      loss: \"categoricalCrossentropy\",\n      metrics: [\"accuracy\"],\n    });\n\n    return instance;\n  }\n\n  private async predict() {\n    if (!this.image || !this.origin || !this.width || !this.height) return;\n\n    this.annotating = false;\n\n    const width = Math.round(this.width);\n    const height = Math.round(this.height);\n\n    const crop = this.image.crop({\n      x: this.origin.x,\n      y: this.origin.y,\n      width: width,\n      height: height,\n    });\n\n    const prediction = tensorflow.tidy(() => {\n      if (crop) {\n        const cropped: tensorflow.Tensor3D = tensorflow.browser.fromPixels(\n          crop.getCanvas()\n        );\n\n        const size: [number, number] = [128, 128];\n        const resized = tensorflow.image.resizeBilinear(cropped, size);\n        const standardized = resized.div(tensorflow.scalar(255));\n        const batch = standardized.expandDims(0);\n\n        if (!this.height || !this.width || !this.origin) return;\n\n        if (this.graph) {\n          const prediction = this.graph.predict(\n            batch\n          ) as tensorflow.Tensor<tensorflow.Rank>;\n\n          return prediction\n            .squeeze([0])\n            .tile([1, 1, 3])\n            .sub(0.3)\n            .sign()\n            .relu()\n            .resizeBilinear([height, width])\n            .pad([\n              [this.origin.y, this.image.height - (this.origin.y + height)],\n              [this.origin.x, this.image.width - (this.origin.x + width)],\n              [0, 0],\n            ]);\n        }\n      }\n    });\n\n    if (prediction) {\n      const clamped: Uint8ClampedArray = await tensorflow.browser.toPixels(\n        prediction as tensorflow.Tensor3D\n      );\n      // .then(async (clamped) => {\n      this.output = new ImageJS.Image({\n        width: this.image.width,\n        height: this.image.height,\n        data: clamped,\n      });\n\n      const greyMask = this.output.grey();\n\n      //compute bounding box with ROI manager\n      const roiManager = this.image.getRoiManager();\n      //@ts-ignore\n      const binaryMask = greyMask.mask({\n        algorithm: \"threshold\",\n        threshold: 1,\n      });\n      // @ts-ignore\n      roiManager.fromMask(binaryMask);\n      // @ts-ignore\n      const rois = roiManager.getRois();\n      const roi = rois.sort((a: any, b: any) => {\n        return b.surface - a.surface;\n      })[1]; // take the second roi because the first one will be of the size of the image,the second one is the actual largest roi\n      this._boundingBox = [roi.minX, roi.minY, roi.maxX, roi.maxY];\n\n      //threshold\n      const thresholded = _.map(greyMask.data, (i: number) =>\n        i > 1 ? 255 : 0\n      ); //threshold necessary because output of NN is not binary\n\n      // @ts-ignore\n      this._mask = encode(thresholded);\n\n      this.annotated = true;\n      this.width = undefined;\n    }\n  }\n}\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport * as ImageJS from \"image-js\";\nimport * as _ from \"lodash\";\nimport { connectPoints } from \"../../../imageHelper\";\nimport { encode } from \"../../../rle\";\n\nexport class PenAnnotationTool extends AnnotationTool {\n  brushSize: number = 8;\n  circlesData: Uint8ClampedArray | Uint8Array | undefined = undefined;\n  buffer: Array<number> = [];\n  outline: Array<number> = [];\n  points: Array<number> = [];\n\n  computeCircleData(): Uint8Array | Uint8ClampedArray | undefined {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = this.image.width;\n    canvas.height = this.image.height;\n    const ctx = canvas.getContext(\"2d\");\n\n    if (!ctx) return undefined;\n\n    let connected;\n\n    if (this.points.length === 2) {\n      // handling the case in which a single point has been clicked\n      connected = _.chunk(this.points, 2);\n    } else {\n      connected = connectPoints(\n        _.chunk(this.points, 2),\n        new ImageJS.Image(this.image.width, this.image.height)\n      );\n    }\n\n    //compute bounding box coordinates\n    const bbox = this.computeBoundingBoxFromContours(_.flatten(connected));\n    this._boundingBox = [\n      Math.max(0, Math.round(bbox[0] - this.brushSize)),\n      Math.max(0, Math.round(bbox[1] - this.brushSize)),\n      Math.min(this.image.width, Math.round(bbox[2] + this.brushSize)),\n      Math.min(this.image.height, Math.round(bbox[3] + this.brushSize)),\n    ];\n\n    //compute mask by drawing circles over canvas\n    connected.forEach((position) => {\n      ctx.beginPath();\n      ctx.arc(\n        Math.round(position[0]),\n        Math.round(position[1]),\n        this.brushSize,\n        0,\n        Math.PI * 2,\n        true\n      );\n      ctx.fill();\n    });\n\n    const rgbMask = ImageJS.Image.fromCanvas(canvas);\n\n    const croppedRgbMask = rgbMask.crop({\n      x: this._boundingBox[0],\n      y: this._boundingBox[1],\n      width: this._boundingBox[2] - this._boundingBox[0],\n      height: this._boundingBox[3] - this._boundingBox[1],\n    });\n\n    // @ts-ignore\n    this.circlesData = this.thresholdMask(croppedRgbMask.getChannel(3)).data;\n  }\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.circlesData = undefined;\n    this.buffer = [];\n    this.outline = [];\n    this.points = [];\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    this.annotating = true;\n\n    this.buffer = [...this.buffer, position.x, position.y];\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    this.buffer = [...this.buffer, position.x, position.y];\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    this.annotated = true;\n\n    this.annotating = false;\n\n    this.points = this.buffer;\n\n    this.computeCircleData(); //this will set the bounding box as well\n\n    if (!this.circlesData) return [];\n\n    this._mask = encode(this.circlesData);\n  }\n\n  static async setup(image: ImageJS.Image, brushSize: number) {\n    const operator = new PenAnnotationTool(image);\n\n    operator.brushSize = brushSize;\n\n    return operator;\n  }\n\n  private thresholdMask = (mask: ImageJS.Image) => {\n    for (let x = 0; x < mask.width; x++) {\n      for (let y = 0; y < mask.height; y++) {\n        if (mask.getPixelXY(x, y)[0] > 1) {\n          mask.setPixelXY(x, y, [255]);\n        } else {\n          mask.setPixelXY(x, y, [0]);\n        }\n      }\n    }\n    return mask;\n  };\n}\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport { encode } from \"../../../rle\";\n\nexport class PolygonalAnnotationTool extends AnnotationTool {\n  anchor?: { x: number; y: number };\n  buffer: Array<number> = [];\n  origin?: { x: number; y: number };\n  points: Array<number> = [];\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.annotation = undefined;\n\n    this.anchor = undefined;\n    this.buffer = [];\n    this.origin = undefined;\n    this.points = [];\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    if (this.buffer && this.buffer.length === 0) {\n      this.annotating = true;\n\n      if (!this.origin) {\n        this.origin = position;\n      }\n    }\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    if (this.anchor) {\n      if (\n        this.buffer[this.buffer.length - 2] !== this.anchor.x ||\n        this.buffer[this.buffer.length - 1] !== this.anchor.y\n      ) {\n        this.buffer.pop();\n        this.buffer.pop();\n      }\n\n      this.buffer = [...this.buffer, position.x, position.y];\n\n      return;\n    }\n\n    if (this.origin) {\n      this.buffer.pop();\n      this.buffer.pop();\n\n      this.buffer = [this.origin.x, this.origin.y, position.x, position.y];\n    }\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    if (\n      this.connected(position) &&\n      this.origin &&\n      this.buffer &&\n      this.buffer.length > 0\n    ) {\n      this.buffer = [\n        ...this.buffer,\n        position.x,\n        position.y,\n        this.origin.x,\n        this.origin.y,\n      ];\n\n      this.annotated = true;\n      this.annotating = false;\n\n      this.points = this.buffer;\n\n      this._boundingBox = this.computeBoundingBoxFromContours(this.points);\n\n      const maskImage = this.computeMask().crop({\n        x: this._boundingBox[0],\n        y: this._boundingBox[1],\n        width: this._boundingBox[2] - this._boundingBox[0],\n        height: this._boundingBox[3] - this._boundingBox[1],\n      });\n\n      this._mask = encode(maskImage.data);\n\n      this.buffer = [];\n\n      this.anchor = undefined;\n      this.origin = undefined;\n\n      return;\n    }\n\n    if (this.anchor) {\n      this.anchor = {\n        x: this.buffer[this.buffer.length - 2],\n        y: this.buffer[this.buffer.length - 1],\n      };\n\n      return;\n    }\n\n    if (this.origin && this.buffer.length > 0) {\n      this.anchor = {\n        x: this.buffer[this.buffer.length - 2],\n        y: this.buffer[this.buffer.length - 1],\n      };\n\n      return;\n    }\n  }\n\n  private connected(\n    position: { x: number; y: number },\n    threshold: number = 4\n  ): boolean | undefined {\n    if (!this.origin) return undefined;\n\n    const distance = Math.hypot(\n      position.x - this.origin.x,\n      position.y - this.origin.y\n    );\n\n    return distance < threshold;\n  }\n}\n","import { AnnotationTool } from \"../AnnotationTool\";\nimport { slic } from \"../../../slic\";\nimport * as ImageJS from \"image-js\";\nimport { encode } from \"../../../rle\";\nimport * as _ from \"lodash\";\n\nexport class QuickAnnotationTool extends AnnotationTool {\n  brushsize?: number;\n  colorMasks?: Array<string>;\n  currentSuperpixels: Set<number> = new Set<number>();\n  lastSuperpixel: number = 0;\n  superpixels?: Int32Array;\n  superpixelsMap?: { [key: number]: Array<number> };\n  currentMask?: ImageJS.Image;\n  map?: Uint8Array | Uint8ClampedArray;\n\n  flatPixelCoordinate(position: { x: number; y: number }) {\n    return Math.round(position.x) + Math.round(position.y) * this.image.width;\n  }\n\n  filter(): {\n    superpixels: Int32Array;\n  } {\n    const data = this.image.getRGBAData();\n\n    const { count, map, superpixels } = slic(\n      data,\n      this.image.width,\n      this.image.height,\n      this.brushsize\n    );\n\n    return { superpixels };\n  }\n\n  deselect() {\n    this.annotated = false;\n    this.annotating = false;\n\n    this.colorMasks = undefined;\n    this.currentSuperpixels.clear();\n    this.lastSuperpixel = 0;\n    this.currentMask = undefined;\n  }\n\n  onMouseDown(position: { x: number; y: number }) {\n    if (this.annotated) return;\n\n    if (!this.currentMask) {\n      this.currentMask = new ImageJS.Image(\n        this.image.width,\n        this.image.height,\n        new Uint8Array(this.image.width * this.image.height * 4),\n        { alpha: 1 }\n      );\n    }\n\n    if (!this.superpixels) return;\n\n    this.annotating = true;\n  }\n\n  onMouseMove(position: { x: number; y: number }) {\n    if (!this.superpixels) return;\n\n    const pixel = this.flatPixelCoordinate(position);\n\n    const superpixel = this.superpixels[pixel];\n\n    if (this.currentSuperpixels.has(superpixel)) return; // don't draw superpixel mask if already on that superpixel\n\n    this.lastSuperpixel = superpixel;\n\n    if (!this.annotating) {\n      this.currentSuperpixels.clear();\n\n      this.currentMask = new ImageJS.Image(\n        this.image.width,\n        this.image.height,\n        new Uint8Array(this.image.width * this.image.height * 4),\n        { alpha: 1 }\n      );\n    }\n\n    this.currentSuperpixels.add(superpixel);\n\n    this.superpixelsMap![superpixel].forEach((index: number) => {\n      this.currentMask!.setPixel(index, [255, 0, 0, 150]);\n    });\n  }\n\n  onMouseUp(position: { x: number; y: number }) {\n    if (this.annotated || !this.annotating) return;\n\n    if (!this.currentMask) return;\n\n    const greyMask = this.currentMask.grey();\n    //@ts-ignore\n    const binaryMask = greyMask.mask({ algorithm: \"threshold\", threshold: 1 });\n\n    //compute bounding box with ROI manager\n    const roiManager = this.image.getRoiManager();\n    // @ts-ignore\n    roiManager.fromMask(binaryMask);\n    // @ts-ignore\n    const rois = roiManager.getRois();\n    const roi = rois.sort((a: any, b: any) => {\n      return b.surface - a.surface;\n    })[1]; // take the second roi because the first one will be of the size of the image,the second one is the actual largest roi\n    this._boundingBox = [roi.minX, roi.minY, roi.maxX, roi.maxY];\n\n    const croppedGreyMask = greyMask.crop({\n      x: this._boundingBox[0],\n      y: this._boundingBox[1],\n      width: this._boundingBox[2] - this._boundingBox[0],\n      height: this._boundingBox[3] - this._boundingBox[1],\n    });\n\n    const thresholded = _.map(croppedGreyMask.data, (i: number) =>\n      i > 1 ? 255 : 0\n    );\n\n    //compute mask\n    this._mask = encode(Uint8Array.from(thresholded));\n\n    this.annotated = true;\n    this.annotating = false;\n  }\n\n  static setup(image: ImageJS.Image, brushsize: number) {\n    const instance = new QuickAnnotationTool(image);\n\n    instance.update(brushsize);\n\n    return instance;\n  }\n\n  update(brushsize: number) {\n    this.brushsize = Math.round(brushsize);\n\n    const { superpixels } = this.filter();\n\n    this.superpixels = superpixels;\n\n    this.superpixelsMap = {};\n\n    superpixels.forEach((pixel: number, index: number) => {\n      if (!(pixel in this.superpixelsMap!)) {\n        this.superpixelsMap![pixel] = [];\n      }\n      this.superpixelsMap![pixel].push(index);\n    });\n  }\n}\n","export const slic = (\n  data: Uint8Array | Uint8ClampedArray,\n  width: number,\n  height: number,\n  regionSize: number = 40,\n  minRegionSize?: number\n) => {\n  if (!minRegionSize) {\n    minRegionSize = (regionSize * regionSize) / 4;\n  }\n\n  const imWidth = width;\n  const imHeight = height;\n  const numRegionsX = parseInt(String(imWidth / regionSize), 10);\n  const numRegionsY = parseInt(String(imHeight / regionSize), 10);\n  const numRegions = parseInt(String(numRegionsX * numRegionsY), 10);\n  const numPixels = parseInt(String(imWidth * imHeight), 10);\n  const masses = new Array(numPixels);\n  const currentCenters = new Float32Array((2 + 3) * numRegions);\n  const newCenters = new Float32Array((2 + 3) * numRegions);\n  const parameters = new Float32Array(2 * numRegions);\n  const mcMap = new Float32Array(numPixels);\n  const msMap = new Float32Array(numPixels);\n  const distanceMap = new Float32Array(numPixels);\n\n  /*\n   * RGB to XYZ\n   */\n  const xyz = new Float32Array(3 * imWidth * imHeight);\n\n  const gamma = 2.2;\n\n  for (let i = 0; i < imWidth * imHeight; i++) {\n    const r = Math.pow(parseFloat(String(data[4 * i])) * 0.00392156862, gamma);\n\n    const g = Math.pow(\n      parseFloat(String(data[4 * i + 1])) * 0.00392156862,\n      gamma\n    );\n\n    const b = Math.pow(\n      parseFloat(String(data[4 * i + 2])) * 0.00392156862,\n      gamma\n    );\n\n    xyz[i] = r * 0.488718 + g * 0.31068 + b * 0.200602;\n    xyz[i + imWidth * imHeight] = r * 0.176204 + g * 0.812985 + b * 0.0108109;\n    xyz[i + 2 * imWidth * imHeight] = g * 0.0102048 + b * 0.989795;\n  }\n\n  /*\n   * XYZ to Lab\n   */\n  const xw = 1.0 / 3.0;\n  const yw = 1.0 / 3.0;\n  const Yw = 1.0;\n  const Xw = xw / yw;\n  const Zw = ((1 - xw - yw) / yw) * Yw;\n  const ix = 1.0 / Xw;\n  const iy = 1.0 / Yw;\n  const iz = 1.0 / Zw;\n  const lab = new Float32Array(3 * imWidth * imHeight);\n\n  for (let i = 0; i < imWidth * imHeight; i++) {\n    const fx =\n      xyz[i] * ix > 0.00856\n        ? Math.pow(xyz[i] * ix, 0.33333333)\n        : 7.78706891568 * xyz[i] * ix + 0.1379310336;\n\n    const fy =\n      xyz[imWidth * imHeight + i] * iy > 0.00856\n        ? Math.pow(xyz[imWidth * imHeight + i] * iy, 0.33333333)\n        : 7.78706891568 * xyz[imWidth * imHeight + i] * iy + 0.1379310336;\n\n    const fz =\n      xyz[2 * imWidth * imHeight + i] * iz > 0.00856\n        ? Math.pow(xyz[2 * imWidth * imHeight + i] * iz, 0.33333333)\n        : 7.78706891568 * xyz[2 * imWidth * imHeight + i] * iz + 0.1379310336;\n\n    lab[i] = 116.0 * fy - 16.0;\n    lab[i + imWidth * imHeight] = 500.0 * (fx - fy);\n    lab[i + 2 * imWidth * imHeight] = 200.0 * (fy - fz);\n  }\n\n  /*\n   * Compute gradient\n   */\n  const gradient = new Float32Array(numPixels);\n\n  for (let k = 0; k < 3; k++) {\n    for (let y = 1; y < imHeight - 1; y++) {\n      for (let x = 1; x < imWidth - 1; x++) {\n        const a = lab[k * imWidth * imHeight + y * imWidth + x - 1];\n        const b = lab[k * imWidth * imHeight + y * imWidth + x + 1];\n        const c = lab[k * imWidth * imHeight + (y + 1) * imWidth + x];\n        const d = lab[k * imWidth * imHeight + (y - 1) * imWidth + x];\n\n        gradient[y * imWidth + x] =\n          gradient[y * imWidth + x] + (a - b) * (a - b) + (c - d) * (c - d);\n      }\n    }\n  }\n\n  /*\n   * Initialize k-means centroids\n   */\n  let i = 0;\n  let j = 0;\n\n  for (let v = 0; v < numRegionsY; v++) {\n    for (let u = 0; u < numRegionsX; u++) {\n      let centerx = 0;\n      let centery = 0;\n      let minEdgeValue = Infinity;\n\n      let x = parseInt(String(Math.round(regionSize * (u + 0.5))), 10);\n      let y = parseInt(String(Math.round(regionSize * (v + 0.5))), 10);\n\n      x = Math.max(Math.min(x, imWidth - 1), 0);\n      y = Math.max(Math.min(y, imHeight - 1), 0);\n\n      for (\n        let yp = Math.max(0, y - 1);\n        yp <= Math.min(imHeight - 1, y + 1);\n        yp++\n      ) {\n        for (\n          let xp = Math.max(0, x - 1);\n          xp <= Math.min(imWidth - 1, x + 1);\n          xp++\n        ) {\n          const thisEdgeValue = gradient[yp * imWidth + xp];\n\n          if (thisEdgeValue < minEdgeValue) {\n            minEdgeValue = thisEdgeValue;\n            centerx = xp;\n            centery = yp;\n          }\n        }\n      }\n\n      currentCenters[i++] = parseFloat(String(centerx));\n      currentCenters[i++] = parseFloat(String(centery));\n\n      currentCenters[i++] = lab[centery * imWidth + centerx];\n      currentCenters[i++] =\n        lab[imWidth * imHeight + centery * imWidth + centerx];\n      currentCenters[i++] =\n        lab[2 * imWidth * imHeight + centery * imWidth + centerx];\n\n      parameters[j++] = 10 * 10;\n      parameters[j++] = regionSize * regionSize;\n    }\n  }\n\n  const iterations = 10;\n\n  const segmentation = new Int32Array(numPixels);\n\n  for (let iteration = 0; iteration < iterations; ++iteration) {\n    /*\n     * Label\n     */\n    for (let i1 = 0; i1 < distanceMap.length; ++i1) {\n      distanceMap[i1] = Infinity;\n    }\n\n    for (let region = 0; region < numRegionsX * numRegionsY; ++region) {\n      const cx = Math.round(currentCenters[region * 5]);\n      const cy = Math.round(currentCenters[region * 5 + 1]);\n\n      for (\n        let y2 = Math.max(0, cy - regionSize);\n        y2 < Math.min(imHeight, cy + regionSize);\n        ++y2\n      ) {\n        for (\n          let x2 = Math.max(0, cx - regionSize);\n          x2 < Math.min(imWidth, cx + regionSize);\n          ++x2\n        ) {\n          const spatial = (x2 - cx) * (x2 - cx) + (y2 - cy) * (y2 - cy);\n          const dR = lab[y2 * imWidth + x2] - currentCenters[5 * region + 2];\n          const dG =\n            lab[imWidth * imHeight + y2 * imWidth + x2] -\n            currentCenters[5 * region + 3];\n          const dB =\n            lab[2 * imWidth * imHeight + y2 * imWidth + x2] -\n            currentCenters[5 * region + 4];\n          const appearance = dR * dR + dG * dG + dB * dB;\n\n          const distance = Math.sqrt(\n            appearance / parameters[region * 2] +\n              spatial / parameters[region * 2 + 1]\n          );\n\n          if (distance < distanceMap[y2 * imWidth + x2]) {\n            distanceMap[y2 * imWidth + x2] = distance;\n            segmentation[y2 * imWidth + x2] = region;\n          }\n        }\n      }\n    }\n\n    for (let y2 = 0; y2 < imHeight; ++y2) {\n      for (let x2 = 0; x2 < imWidth; ++x2) {\n        if (\n          parameters[segmentation[y2 * imWidth + x2] * 2] <\n          mcMap[y2 * imWidth + x2]\n        ) {\n          parameters[segmentation[y2 * imWidth + x2] * 2] =\n            mcMap[y2 * imWidth + x2];\n        }\n\n        if (\n          parameters[segmentation[y2 * imWidth + x2] * 2 + 1] <\n          msMap[y2 * imWidth + x2]\n        ) {\n          parameters[segmentation[y2 * imWidth + x2] * 2 + 1] =\n            msMap[y2 * imWidth + x2];\n        }\n      }\n    }\n\n    /*\n     * Update parameters\n     */\n    const mc = new Float32Array(parameters.length / 2);\n    const ms = new Float32Array(parameters.length / 2);\n\n    for (let i1 = 0; i1 < segmentation.length; i1++) {\n      const region = segmentation[i1];\n\n      if (mc[region] < mcMap[region]) {\n        mc[region] = mcMap[region];\n\n        parameters[region * 2] = mcMap[region];\n      }\n\n      if (ms[region] < msMap[region]) {\n        ms[region] = msMap[region];\n\n        parameters[region * 2 + 1] = msMap[region];\n      }\n    }\n\n    for (let i = 0; i < masses.length; ++i) {\n      masses[i] = 0;\n    }\n\n    for (let i = 0; i < newCenters.length; ++i) {\n      newCenters[i] = 0;\n    }\n\n    /*\n     * Compute centroids\n     */\n    let region;\n\n    for (let y1 = 0; y1 < imHeight; y1++) {\n      for (let x1 = 0; x1 < imWidth; x1++) {\n        region = segmentation[x1 + y1 * imWidth];\n\n        masses[region]++;\n\n        newCenters[region * 5] += x1;\n        newCenters[region * 5 + 1] += y1;\n        newCenters[region * 5 + 2] += lab[y1 * imWidth + x1];\n        newCenters[region * 5 + 3] +=\n          lab[imWidth * imHeight + y1 * imWidth + x1];\n        newCenters[region * 5 + 4] +=\n          lab[2 * imWidth * imHeight + y1 * imWidth + x1];\n      }\n    }\n\n    for (region = 0; region < numRegions; region++) {\n      const iMass = 1.0 / Math.max(masses[region], 1e-8);\n\n      newCenters[region * 5] = newCenters[region * 5] * iMass;\n      newCenters[region * 5 + 1] = newCenters[region * 5 + 1] * iMass;\n      newCenters[region * 5 + 2] = newCenters[region * 5 + 2] * iMass;\n      newCenters[region * 5 + 3] = newCenters[region * 5 + 3] * iMass;\n      newCenters[region * 5 + 4] = newCenters[region * 5 + 4] * iMass;\n    }\n\n    /*\n     * Compute residual error\n     */\n    let error = 0.0;\n\n    for (let index = 0; index < currentCenters.length; ++index) {\n      const d = currentCenters[index] - newCenters[index];\n\n      error += Math.sqrt(d * d);\n    }\n\n    if (error < 1e-5) {\n      break;\n    }\n\n    for (let i = 0; i < currentCenters.length; ++i) {\n      currentCenters[i] = newCenters[i];\n    }\n  }\n\n  /*\n   * Remove small objects\n   */\n  const cleaned = new Int32Array(numPixels);\n  const segment = new Int32Array(numPixels);\n\n  const dx = [1, -1, 0, 0];\n  const dy = [0, 0, 1, -1];\n\n  let segmentSize;\n  let label;\n  let cleanedLabel;\n  let numExpanded;\n  let x1;\n  let y1;\n  let xp;\n  let yp;\n  let neighbor;\n\n  for (let pixel = 0; pixel < numPixels; pixel++) {\n    if (cleaned[pixel]) continue;\n\n    label = segmentation[pixel];\n    numExpanded = 0;\n    segmentSize = 0;\n    segment[segmentSize++] = pixel;\n\n    cleanedLabel = label + 1;\n    cleaned[pixel] = label + 1;\n    x1 = pixel % imWidth;\n    y1 = Math.floor(pixel / imWidth);\n\n    for (let direction = 0; direction < 4; direction++) {\n      xp = x1 + dx[direction];\n      yp = y1 + dy[direction];\n      neighbor = xp + yp * imWidth;\n\n      if (\n        0 <= xp &&\n        xp < imWidth &&\n        0 <= yp &&\n        yp < imHeight &&\n        cleaned[neighbor]\n      ) {\n        cleanedLabel = cleaned[neighbor];\n      }\n    }\n\n    while (numExpanded < segmentSize) {\n      const open = segment[numExpanded++];\n\n      x1 = open % imWidth;\n      y1 = Math.floor(open / imWidth);\n\n      for (let direction = 0; direction < 4; ++direction) {\n        xp = x1 + dx[direction];\n        yp = y1 + dy[direction];\n        neighbor = xp + yp * imWidth;\n\n        if (\n          0 <= xp &&\n          xp < imWidth &&\n          0 <= yp &&\n          yp < imHeight &&\n          cleaned[neighbor] === 0 &&\n          segmentation[neighbor] === label\n        ) {\n          cleaned[neighbor] = label + 1;\n          segment[segmentSize++] = neighbor;\n        }\n      }\n    }\n\n    if (segmentSize < minRegionSize) {\n      while (segmentSize > 0) {\n        cleaned[segment[--segmentSize]] = cleanedLabel;\n      }\n    }\n  }\n\n  for (let pixel = 0; pixel < numPixels; ++pixel) {\n    --cleaned[pixel];\n  }\n\n  for (let index = 0; index < numPixels; ++index) {\n    segmentation[index] = cleaned[index];\n  }\n\n  return {\n    count: 0,\n    map: data,\n    superpixels: segmentation,\n  };\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const penSelectionBrushSizeSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  return state.present.penSelectionBrushSize;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const quickSelectionBrushSizeSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  return state.present.quickSelectionBrushSize;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imageSrcSelector = ({ state }: { state: HistoryStateType }) => {\n  if (!state.present.images.length) return;\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return;\n\n  return image.src;\n};\n","import { useCallback, useState } from \"react\";\n\nexport const useDialog = () => {\n  const [open, setOpen] = useState(false);\n\n  const onClose = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  const onOpen = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return { onClose, onOpen, open };\n};\n","import React, { useState } from \"react\";\n\nexport const useMarchingAnts = () => {\n  const [dashOffset, setDashOffset] = useState<number>(0);\n\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setDashOffset(dashOffset + 1);\n\n      if (dashOffset > 32) {\n        setDashOffset(0);\n      }\n    }, 200);\n    return () => clearTimeout(timer);\n  });\n\n  return dashOffset;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const scaledImageWidthSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  if (!state.present.images.length) return;\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return;\n\n  return image.shape.width * state.present.stageScale;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const soundEnabledSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  return state.present.soundEnabled;\n};\n","import makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  form: {\n    maginLeft: \"15px\",\n  },\n  content: {\n    marginTop: theme.spacing(2),\n  },\n  boxLayout: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    alignItems: \"center\",\n    margin: \"20px\",\n  },\n  typography: {\n    fontWeight: \"inherit\",\n    marginRight: \"15px\",\n    width: \"100px\",\n    textAlign: \"right\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  appBar: {\n    flexGrow: 1,\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n  },\n}));\n","import React from \"react\";\nimport {\n  AppBar,\n  Dialog,\n  FormControlLabel,\n  InputLabel,\n  Select,\n} from \"@material-ui/core\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Switch from \"@material-ui/core/Switch\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { LanguageType } from \"../../../../types/LanguageType\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { applicationSlice } from \"../../../../store\";\nimport { languageSelector } from \"../../../../store/selectors/languageSelector\";\nimport { soundEnabledSelector } from \"../../../../store/selectors/soundEnabledSelector\";\nimport { useStyles } from \"./SettingsDialog.css\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\ntype SettingsDialogProps = {\n  onClose: () => void;\n  open: boolean;\n};\n\nexport const SettingsDialog = ({ onClose, open }: SettingsDialogProps) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const language = useSelector(languageSelector);\n  const soundEnabled = useSelector(soundEnabledSelector);\n\n  const onLanguageChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    dispatch(\n      applicationSlice.actions.setLanguage({\n        language: event.target.value as LanguageType,\n      })\n    );\n  };\n\n  const onSoundEffectsChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      applicationSlice.actions.setSoundEnabled({\n        soundEnabled: event.target.checked,\n      })\n    );\n  };\n\n  return (\n    <Dialog fullScreen onClose={onClose} open={open}>\n      <AppBar className={classes.appBar} color=\"inherit\" position=\"fixed\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\">\n            Settings\n          </Typography>\n\n          <IconButton aria-label=\"close\" onClick={onClose}>\n            <CloseIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n\n      <div className={classes.toolbar} />\n\n      <DialogContent className={classes.content}>\n        <Grid container spacing={2}>\n          <Grid item xs={3} />\n\n          <Grid item xs={6}>\n            <Grid container>\n              <Grid item xs={12}>\n                <Grid container item xs={4}>\n                  <FormControl color=\"primary\" fullWidth>\n                    <InputLabel shrink id=\"settings-language\">\n                      Language\n                    </InputLabel>\n\n                    <Select\n                      id=\"settings-language-label\"\n                      labelId=\"settings-language\"\n                      onChange={onLanguageChange}\n                      value={language}\n                    >\n                      <MenuItem value={LanguageType.English}>English</MenuItem>\n                      {/*<MenuItem value={LanguageType.Arabic}>Arabic<Arabic/MenuItem>*/}\n                      <MenuItem value={LanguageType.Farsi}>Farsi</MenuItem>\n                      {/*<MenuItem value={LanguageType.Finnish}>Finnish</MenuItem>*/}\n                      <MenuItem value={LanguageType.French}>French</MenuItem>\n                      {/*<MenuItem value={LanguageType.German}>German</MenuItem>*/}\n                      {/*<MenuItem value={LanguageType.Hindi}>Hindi</MenuItem>*/}\n                      {/*<MenuItem value={LanguageType.Hungarian}>*/}\n                      {/*  Hungarian*/}\n                      {/*</MenuItem>*/}\n                      {/*<MenuItem value={LanguageType.Spanish}>Spanish</MenuItem>*/}\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid item style={{ padding: \"32px 0\" }} xs={12}>\n                <Divider />\n              </Grid>\n\n              <Grid item xs={12}>\n                <FormControl component=\"fieldset\">\n                  <FormGroup aria-label=\"position\" row>\n                    <FormControlLabel\n                      control={\n                        <Switch\n                          color=\"default\"\n                          checked={soundEnabled}\n                          onChange={onSoundEffectsChange}\n                          name=\"soundEnabled\"\n                        />\n                      }\n                      label=\"Sound effects\"\n                    />\n                  </FormGroup>\n                </FormControl>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  alert: {\n    width: theme.spacing(64),\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  appBarShift: {\n    marginLeft: theme.spacing(32),\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.easeOut,\n    }),\n    width: `calc(100% - ${theme.spacing(32)}px)`,\n  },\n  card: {},\n  classifierSettingsDialogContent: {\n    marginTop: theme.spacing(8),\n  },\n  chip: {\n    height: \"20px\",\n    borderWidth: \"2px\",\n    fontSize: \"0.875rem\",\n    color: \"white\",\n  },\n  colorPicker: {\n    margin: \"16px\",\n  },\n  container: {\n    paddingBottom: theme.spacing(8),\n    paddingTop: theme.spacing(8),\n  },\n  createCategoryDialogContent: {\n    paddingLeft: \"0 !important\",\n  },\n  createCategoryDialogGrid: {\n    margin: theme.spacing(1),\n  },\n  createCategoryDialogItem: {\n    // paddingLeft: \"0 !important\",\n  },\n  drawer: {\n    flexShrink: 0,\n    width: theme.spacing(32),\n  },\n  drawerHeader: {\n    ...theme.mixins.toolbar,\n    alignItems: \"center\",\n    display: \"flex\",\n    paddingLeft: theme.spacing(3),\n  },\n  drawerPaper: {\n    width: theme.spacing(32),\n  },\n  fileInput: {\n    display: \"none\",\n  },\n  gridList: {\n    transform: \"translateZ(0)\",\n  },\n  gridTileBar: {\n    background:\n      \"linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 50%, rgba(0,0,0,0) 100%)\",\n  },\n  gridTileBarIconButton: {\n    color: \"white\",\n  },\n  imageDialogAppBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  imageDialogContent: {\n    paddingBottom: theme.spacing(12),\n    paddingTop: theme.spacing(12),\n  },\n  imageSelected: {\n    border: \"solid 2px blue\",\n    borderRadius: \"3px\",\n  },\n  imageUnselected: {\n    border: \"none\",\n  },\n  main: {\n    flexGrow: 1,\n    marginLeft: -theme.spacing(32),\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      duration: theme.transitions.duration.leavingScreen,\n      easing: theme.transitions.easing.sharp,\n    }),\n  },\n  mainShift: {\n    marginLeft: theme.spacing(32),\n    transition: theme.transitions.create(\"margin\", {\n      duration: theme.transitions.duration.enteringScreen,\n      easing: theme.transitions.easing.easeOut,\n    }),\n  },\n  media: {},\n  progress: {\n    width: \"100%\",\n  },\n  settingsDialogAppBar: {},\n  slider: {\n    padding: theme.spacing(3),\n  },\n  sliderInput: {\n    width: 42,\n  },\n}));\n","import Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport React, { ChangeEvent, FormEvent, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ColorIcon } from \"../../ColorIcon\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useStyles } from \"./CreateCategoryDialog.css\";\nimport { ColorResult } from \"react-color\";\nimport { sample } from \"underscore\";\nimport { applicationSlice } from \"../../../../../store\";\nimport { v4 } from \"uuid\";\nimport { CategoryType } from \"../../../../../types/CategoryType\";\nimport { categoriesSelector } from \"../../../../../store/selectors\";\nimport { useTranslation } from \"../../../../../hooks/useTranslation\";\nimport { replaceDuplicateName } from \"../../../../../image/imageHelper\";\n\nconst COLORS = [\n  \"#f44336\",\n  \"#e91e63\",\n  \"#9c27b0\",\n  \"#673ab7\",\n  \"#3f51b5\",\n  \"#2196f3\",\n  \"#03a9f4\",\n  \"#00bcd4\",\n  \"#009688\",\n  \"#4caf50\",\n  \"#8bc34a\",\n  \"#cddc39\",\n  \"#ffeb3b\",\n  \"#ffc107\",\n  \"#ff9800\",\n  \"#ff5722\",\n  \"#795548\",\n  \"#607d8b\",\n];\n\ntype CreateCategoryDialogProps = {\n  onClose: () => void;\n  open: boolean;\n};\n\nexport const CreateCategoryDialog = ({\n  onClose,\n  open,\n}: CreateCategoryDialogProps) => {\n  const dispatch = useDispatch();\n\n  const categories = useSelector(categoriesSelector);\n\n  const [color, setColor] = React.useState<string>(sample(COLORS)!);\n\n  const [name, setName] = useState<string>(\"\");\n\n  const classes = useStyles();\n\n  const onCreate = () => {\n    const initialName = name ? name : \"Unnamed\";\n    const categoryNames = categories.map((category: CategoryType) => {\n      return category.name;\n    });\n    const updatedName = replaceDuplicateName(initialName, categoryNames);\n\n    const category: CategoryType = {\n      color: color,\n      id: v4().toString(),\n      name: updatedName,\n      visible: true,\n    };\n\n    dispatch(\n      applicationSlice.actions.setCategories({\n        categories: [...categories, category],\n      })\n    );\n\n    dispatch(\n      applicationSlice.actions.setSelectedCategory({\n        selectedCategory: category.id,\n      })\n    );\n\n    setName(\"\");\n\n    onClose();\n\n    setColor(sample(COLORS)!);\n  };\n\n  const onColorChange = (color: ColorResult) => {\n    setColor(color.hex);\n  };\n\n  const onNameChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  const t = useTranslation();\n\n  const onSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n  };\n\n  return (\n    <Dialog fullWidth maxWidth=\"xs\" onClose={onClose} open={open}>\n      <form onSubmit={(event) => onSubmit(event)}>\n        <DialogTitle>{t(\"Create category\")}</DialogTitle>\n\n        <DialogContent className={classes.createCategoryDialogContent}>\n          <div className={classes.createCategoryDialogGrid}>\n            <Grid container spacing={1}>\n              <Grid item xs={2} className={classes.createCategoryDialogItem}>\n                <ColorIcon color={color} onColorChange={onColorChange} />\n              </Grid>\n              <Grid item xs={10}>\n                <TextField\n                  autoFocus\n                  fullWidth\n                  id=\"name\"\n                  label={t(\"Name\")}\n                  margin=\"dense\"\n                  onChange={onNameChange}\n                />\n              </Grid>\n            </Grid>\n          </div>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={onClose} color=\"primary\">\n            {t(\"Cancel\")}\n          </Button>\n\n          <Button onClick={onCreate} color=\"primary\" type=\"submit\">\n            {t(\"Create\")}\n          </Button>\n        </DialogActions>\n      </form>\n    </Dialog>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { AnnotationType } from \"../../types/AnnotationType\";\n\nexport const selectedAnnotationsIdsSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): Array<string> => {\n  return state.present.selectedAnnotations.map((annotation: AnnotationType) => {\n    return annotation.id;\n  });\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const activeImageIdSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): string | undefined => {\n  return state.present.activeImageId;\n};\n","import React from \"react\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { applicationSlice, setImages } from \"../../../../store\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport { activeImageIdSelector } from \"../../../../store/selectors/activeImageIdSelector\";\nimport {\n  saveAnnotationsAsMasks,\n  saveAnnotationsAsMatrix,\n} from \"../../../../image/imageHelper\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport { categoriesSelector } from \"../../../../store/selectors\";\nimport { imagesSelector } from \"../../../../store/selectors/imagesSelector\";\nimport { ImageType } from \"../../../../types/ImageType\";\nimport { Divider } from \"@material-ui/core\";\n\ntype ImageMenuProps = {\n  anchorElImageMenu: any;\n  onCloseImageMenu: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  openImageMenu: boolean;\n};\n\nexport const ImageMenu = ({\n  anchorElImageMenu,\n  onCloseImageMenu,\n  openImageMenu,\n}: ImageMenuProps) => {\n  const dispatch = useDispatch();\n  const currentImageId = useSelector(activeImageIdSelector);\n  const categories = useSelector(categoriesSelector);\n  const images = useSelector(imagesSelector);\n\n  const onClearAnnotationsClick = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    if (!currentImageId) return;\n    dispatch(\n      applicationSlice.actions.deleteImageInstances({ imageId: currentImageId })\n    );\n    onCloseImageMenu(event);\n  };\n\n  const onDeleteImage = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    if (!currentImageId) return;\n    dispatch(applicationSlice.actions.deleteImage({ id: currentImageId }));\n    onCloseImageMenu(event);\n  };\n\n  const onExportAnnotations = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    let zip = new JSZip();\n\n    const activeImage = images.find((image: ImageType) => {\n      return image.id === currentImageId;\n    });\n\n    if (!activeImage) return;\n\n    Promise.all(saveAnnotationsAsMasks([activeImage], categories, zip)).then(\n      () => {\n        zip.generateAsync({ type: \"blob\" }).then((blob) => {\n          saveAs(blob, \"annotations.zip\");\n        });\n      }\n    );\n  };\n\n  const onExportLabels = (event: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    let zip = new JSZip();\n\n    const activeImage = images.find((image: ImageType) => {\n      return image.id === currentImageId;\n    });\n\n    if (!activeImage) return;\n\n    Promise.all(saveAnnotationsAsMatrix([activeImage], categories, zip)).then(\n      () => {\n        zip.generateAsync({ type: \"blob\" }).then((blob) => {\n          saveAs(blob, \"labels.zip\");\n        });\n      }\n    );\n  };\n\n  const onExportBinaryImage = (\n    event: React.MouseEvent<HTMLElement, MouseEvent>\n  ) => {\n    let zip = new JSZip();\n\n    const activeImage = images.find((image: ImageType) => {\n      return image.id === currentImageId;\n    });\n\n    if (!activeImage) return;\n\n    Promise.all(\n      saveAnnotationsAsMatrix([activeImage], categories, zip, true)\n    ).then(() => {\n      zip.generateAsync({ type: \"blob\" }).then((blob) => {\n        saveAs(blob, \"labels.zip\");\n      });\n    });\n  };\n\n  const t = useTranslation();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLLIElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <Menu\n      anchorEl={anchorElImageMenu}\n      anchorOrigin={{ horizontal: \"center\", vertical: \"bottom\" }}\n      getContentAnchorEl={null}\n      onClose={onCloseImageMenu}\n      open={openImageMenu}\n      transformOrigin={{ horizontal: \"center\", vertical: \"top\" }}\n    >\n      <MenuList dense variant=\"menu\">\n        <div>\n          <MenuItem onClick={handleClick}>Export annotations as</MenuItem>\n          <Menu\n            id=\"save-annotations-as-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            <MenuList dense variant=\"menu\">\n              <div>\n                <MenuItem onClick={onExportAnnotations}>\n                  <Typography variant=\"inherit\">\n                    {t(\"Instance segmentation masks\")}\n                  </Typography>\n                </MenuItem>\n                <MenuItem onClick={onExportBinaryImage}>\n                  <Typography variant=\"inherit\">\n                    {t(\"Semantic segmentation masks\")}\n                  </Typography>\n                </MenuItem>\n                <MenuItem onClick={onExportLabels}>\n                  <Typography variant=\"inherit\">\n                    {t(\"Label matrices\")}\n                  </Typography>\n                </MenuItem>\n              </div>\n            </MenuList>\n          </Menu>\n          <Divider />\n          <MenuItem onClick={onClearAnnotationsClick}>\n            <Typography variant=\"inherit\">{t(\"Clear Annotations\")}</Typography>\n          </MenuItem>\n          <MenuItem onClick={onDeleteImage}>\n            <Typography variant=\"inherit\">{t(\"Delete Image\")}</Typography>\n          </MenuItem>\n        </div>\n      </MenuList>\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch } from \"react-redux\";\nimport { applicationSlice } from \"../../../../store\";\n\ntype DeleteAllAnnotationsDialogProps = {\n  onClose: () => void;\n  open: boolean;\n};\n\nexport const DeleteAllAnnotationsDialog = ({\n  onClose,\n  open,\n}: DeleteAllAnnotationsDialogProps) => {\n  const dispatch = useDispatch();\n\n  const onDelete = () => {\n    dispatch(applicationSlice.actions.deleteAllInstances({ id: \"\" }));\n    dispatch(\n      applicationSlice.actions.setSelectedCategory({\n        selectedCategory: \"00000000-0000-0000-0000-000000000000\",\n      })\n    );\n    onClose();\n  };\n\n  return (\n    <Dialog disableBackdropClick={true} fullWidth onClose={onClose} open={open}>\n      <DialogTitle>Delete all annotations?</DialogTitle>\n\n      <DialogContent>\n        All annotations across all images will be permanently deleted.\"\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n\n        <Button onClick={onDelete} color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { AnnotationType } from \"../../types/AnnotationType\";\nimport { CategoryType } from \"../../types/CategoryType\";\nimport { ImageType } from \"../../types/ImageType\";\nimport { SerializedFileType } from \"../../types/SerializedFileType\";\n\nexport const allSerializedAnnotationsSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): Array<SerializedFileType> => {\n  if (!state.present.images.length) return [];\n\n  return state.present.images.map((image: ImageType) => {\n    const columns = {\n      imageChannels: image.shape.channels,\n      imageChecksum: \"\",\n      imageData: image.originalSrc,\n      imageFilename: image.name,\n      imageFrames: image.shape.frames,\n      imageHeight: image.shape.height,\n      imageId: image.id,\n      imagePlanes: image.shape.planes,\n      imageWidth: image.shape.width,\n    };\n\n    const serializedAnnotations = image.annotations.map(\n      (annotation: AnnotationType) => {\n        const index = state.present.categories.findIndex(\n          (category: CategoryType) => {\n            return category.id === annotation.categoryId;\n          }\n        );\n\n        const category = state.present.categories[index];\n\n        return {\n          annotationBoundingBoxHeight: annotation.boundingBox[3],\n          annotationBoundingBoxWidth: annotation.boundingBox[2],\n          annotationBoundingBoxX: annotation.boundingBox[0],\n          annotationBoundingBoxY: annotation.boundingBox[1],\n          annotationCategoryColor: category.color,\n          annotationCategoryId: category.id,\n          annotationCategoryName: category.name,\n          annotationId: annotation.id,\n          annotationMask: annotation.mask.join(\" \"),\n        };\n      }\n    );\n\n    return { ...columns, annotations: serializedAnnotations };\n  });\n};\n","import { useSelector } from \"react-redux\";\nimport { allSerializedAnnotationsSelector } from \"../../../../store/selectors/allSerializedAnnotationsSelector\";\nimport { saveAs } from \"file-saver\";\nimport { MenuItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React from \"react\";\n\ntype SaveAnnotationsMenuItemProps = {\n  popupState: any;\n};\n\nexport const SaveProjectFileMenuItem = ({\n  popupState,\n}: SaveAnnotationsMenuItemProps) => {\n  const serializedProject = useSelector(allSerializedAnnotationsSelector);\n\n  const onSaveAllAnnotations = () => {\n    const blob = new Blob([JSON.stringify(serializedProject)]);\n\n    saveAs(blob, \"project.json\");\n\n    popupState.close();\n  };\n  return (\n    <MenuItem onClick={onSaveAllAnnotations}>\n      <ListItemText primary=\"Save project file\" />\n    </MenuItem>\n  );\n};\n","import React from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useSelector } from \"react-redux\";\nimport {\n  categoriesSelector,\n  imageInstancesSelector,\n} from \"../../../../store/selectors\";\nimport { imagesSelector } from \"../../../../store/selectors/imagesSelector\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { saveAnnotationsAsMasks } from \"../../../../image/imageHelper\";\n\ntype SaveAnnotationsMenuItemProps = {\n  popupState: any;\n};\n\nexport const ExportAnnotationsAsImagesMenuItem = ({\n  popupState,\n}: SaveAnnotationsMenuItemProps) => {\n  const annotations = useSelector(imageInstancesSelector);\n  const images = useSelector(imagesSelector);\n  const categories = useSelector(categoriesSelector);\n\n  const onExport = () => {\n    popupState.close();\n\n    if (!annotations) return;\n\n    let zip = new JSZip();\n\n    Promise.all(saveAnnotationsAsMasks(images, categories, zip)).then(() => {\n      zip.generateAsync({ type: \"blob\" }).then((blob) => {\n        saveAs(blob, \"annotations.zip\");\n      });\n    });\n  };\n\n  return (\n    <MenuItem onClick={onExport}>\n      <ListItemText primary=\"Instance segmentation masks\" />\n    </MenuItem>\n  );\n};\n","import React from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useSelector } from \"react-redux\";\nimport {\n  categoriesSelector,\n  imageInstancesSelector,\n} from \"../../../../store/selectors\";\nimport { imagesSelector } from \"../../../../store/selectors/imagesSelector\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { saveAnnotationsAsMatrix } from \"../../../../image/imageHelper\";\n\ntype SaveAnnotationsMenuItemProps = {\n  popupState: any;\n};\n\nexport const ExportAnnotationsAsMatrixMenuItem = ({\n  popupState,\n}: SaveAnnotationsMenuItemProps) => {\n  const annotations = useSelector(imageInstancesSelector);\n  const images = useSelector(imagesSelector);\n  const categories = useSelector(categoriesSelector);\n\n  const onExport = () => {\n    popupState.close();\n\n    if (!annotations) return;\n\n    let zip = new JSZip();\n\n    Promise.all(saveAnnotationsAsMatrix(images, categories, zip)).then(() => {\n      zip.generateAsync({ type: \"blob\" }).then((blob) => {\n        saveAs(blob, \"labels.zip\");\n      });\n    });\n  };\n\n  return (\n    <MenuItem onClick={onExport}>\n      <ListItemText primary=\"Label matrices\" />\n    </MenuItem>\n  );\n};\n","import React from \"react\";\nimport { MenuItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useSelector } from \"react-redux\";\nimport {\n  categoriesSelector,\n  imageInstancesSelector,\n} from \"../../../../store/selectors\";\nimport { imagesSelector } from \"../../../../store/selectors/imagesSelector\";\nimport JSZip from \"jszip\";\nimport { saveAs } from \"file-saver\";\nimport { saveAnnotationsAsMatrix } from \"../../../../image/imageHelper\";\n\ntype SaveAnnotationsMenuItemProps = {\n  popupState: any;\n};\n\nexport const ExportAnnotationsAsBinaryImageMenuItem = ({\n  popupState,\n}: SaveAnnotationsMenuItemProps) => {\n  const annotations = useSelector(imageInstancesSelector);\n  const images = useSelector(imagesSelector);\n  const categories = useSelector(categoriesSelector);\n\n  const onExport = () => {\n    popupState.close();\n\n    if (!annotations) return;\n\n    let zip = new JSZip();\n\n    Promise.all(saveAnnotationsAsMatrix(images, categories, zip, true)).then(\n      () => {\n        zip.generateAsync({ type: \"blob\" }).then((blob) => {\n          saveAs(blob, \"labels.zip\");\n        });\n      }\n    );\n  };\n\n  return (\n    <MenuItem onClick={onExport}>\n      <ListItemText primary=\"Semantic segmentation masks\" />\n    </MenuItem>\n  );\n};\n","import { Menu } from \"@material-ui/core\";\nimport { bindMenu } from \"material-ui-popup-state\";\nimport React from \"react\";\nimport { SaveProjectFileMenuItem } from \"./SaveProjectFileMenuItem\";\nimport { ExportAnnotationsAsImagesMenuItem } from \"./ExportAnnotationsAsImagesMenuItem\";\nimport { ExportAnnotationsAsMatrixMenuItem } from \"./ExportAnnotationsAsMatrixMenuItem\";\nimport { ExportAnnotationsAsBinaryImageMenuItem } from \"./ExportAnnotationsAsBinaryImageMenuItem\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\ntype SaveMenuProps = {\n  popupState: any;\n};\n\nexport const SaveMenu = ({ popupState }: SaveMenuProps) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const handleClick = (event: React.MouseEvent<HTMLLIElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  //TODO: do we need the ExportAnnotationsAsJSON button or is it redundant from SaveProjectFileMenuItem?\n  return (\n    <Menu {...bindMenu(popupState)}>\n      <MenuItem onClick={handleClick}>Export annotations as</MenuItem>\n      <Menu\n        id=\"save-annotations-as-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <ExportAnnotationsAsImagesMenuItem popupState={popupState} />\n        <ExportAnnotationsAsBinaryImageMenuItem popupState={popupState} />\n        <ExportAnnotationsAsMatrixMenuItem popupState={popupState} />\n      </Menu>\n      <SaveProjectFileMenuItem popupState={popupState} />\n    </Menu>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport React, { ChangeEvent } from \"react\";\nimport * as ImageJS from \"image-js\";\nimport { ShapeType } from \"../../../../types/ShapeType\";\nimport { ImageType } from \"../../../../types/ImageType\";\nimport { v4 } from \"uuid\";\nimport {\n  addImages,\n  setActiveImage,\n  setSelectedAnnotations,\n} from \"../../../../store/slices\";\nimport { MenuItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\ntype OpenImageMenuItemProps = {\n  popupState: any;\n};\n\nexport const OpenImageMenuItem = ({ popupState }: OpenImageMenuItemProps) => {\n  const dispatch = useDispatch();\n\n  const onOpenImage = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    onClose: () => void\n  ) => {\n    onClose();\n\n    event.persist();\n\n    if (event.currentTarget.files) {\n      for (let i = 0; i < event.currentTarget.files.length; i++) {\n        const file = event.currentTarget.files[i];\n\n        file.arrayBuffer().then((buffer) => {\n          ImageJS.Image.load(buffer).then((image) => {\n            //check whether name already exists\n            const shape: ShapeType = {\n              channels: image.components,\n              frames: 1,\n              height: image.height,\n              planes: 1,\n              width: image.width,\n            };\n\n            const imageDataURL = image.toDataURL(\"image/png\", {\n              useCanvas: true,\n            });\n\n            const loaded: ImageType = {\n              avatar: image\n                .resize({ width: 50 })\n                .toDataURL(\"image/png\", { useCanvas: true }),\n              id: v4(),\n              annotations: [],\n              name: file.name,\n              shape: shape,\n              originalSrc: imageDataURL,\n              src: imageDataURL,\n            };\n\n            dispatch(addImages({ newImages: [loaded] }));\n\n            if (i === 0) {\n              dispatch(\n                setActiveImage({\n                  image: loaded.id,\n                })\n              );\n\n              dispatch(\n                setSelectedAnnotations({\n                  selectedAnnotations: [],\n                  selectedAnnotation: undefined,\n                })\n              );\n            }\n          });\n        });\n      }\n    }\n  };\n\n  return (\n    <MenuItem component=\"label\">\n      <ListItemText primary=\"Open new image\" />\n      <input\n        accept=\"image/*\"\n        hidden\n        multiple\n        id=\"open-image\"\n        onChange={(event: ChangeEvent<HTMLInputElement>) =>\n          onOpenImage(event, popupState.close)\n        }\n        type=\"file\"\n      />\n    </MenuItem>\n  );\n};\n","import { useDispatch } from \"react-redux\";\nimport React from \"react\";\nimport {\n  applicationSlice,\n  setActiveImage,\n  setOperation,\n  setSelectedAnnotations,\n} from \"../../../../store/slices\";\nimport { MenuItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { SerializedFileType } from \"../../../../types/SerializedFileType\";\nimport { ToolType } from \"../../../../types/ToolType\";\n\ntype OpenAnnotationsMenuItemProps = {\n  popupState: any;\n};\n\nexport const OpenProjectFileMenuItem = ({\n  popupState,\n}: OpenAnnotationsMenuItemProps) => {\n  const dispatch = useDispatch();\n\n  const onOpenProjectFile = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    onClose: () => void\n  ) => {\n    onClose();\n\n    event.persist();\n\n    if (!event.currentTarget.files) return;\n\n    const file = event.currentTarget.files[0];\n\n    const reader = new FileReader();\n\n    reader.onload = async (event: ProgressEvent<FileReader>) => {\n      if (event.target && event.target.result) {\n        const project = JSON.parse(event.target.result as string);\n\n        //clear all images\n        dispatch(applicationSlice.actions.setImages({ images: [] }));\n\n        project.forEach(\n          (serializedImage: SerializedFileType, index: number) => {\n            if (index === 0) {\n              dispatch(\n                setActiveImage({\n                  image: serializedImage.imageId,\n                })\n              );\n\n              dispatch(\n                setSelectedAnnotations({\n                  selectedAnnotations: [],\n                  selectedAnnotation: undefined,\n                })\n              );\n\n              dispatch(\n                setOperation({ operation: ToolType.RectangularAnnotation })\n              );\n            }\n            dispatch(\n              applicationSlice.actions.openAnnotations({\n                file: serializedImage,\n              })\n            );\n          }\n        );\n      }\n    };\n\n    reader.readAsText(file);\n  };\n\n  return (\n    <MenuItem component=\"label\">\n      <ListItemText primary=\"Open project file\" />\n      <input\n        accept=\"application/json\"\n        hidden\n        id=\"open-project-file\"\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onOpenProjectFile(event, popupState.close)\n        }\n        type=\"file\"\n      />\n    </MenuItem>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/malaria.5b73ad75.png\";","import Dialog from \"@material-ui/core/Dialog\";\nimport React from \"react\";\nimport { ShapeType } from \"../../../../types/ShapeType\";\nimport {\n  applicationSlice,\n  setActiveImage,\n  setChannels,\n  setImages,\n  setOperation,\n  setSelectedAnnotations,\n} from \"../../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport malaria from \"../../../../images/malaria.png\";\nimport cellpainting from \"../../../../images/cell-painting.png\";\nimport { ChannelType } from \"../../../../types/ChannelType\";\nimport { ToolType } from \"../../../../types/ToolType\";\nimport { ImageType } from \"../../../../types/ImageType\";\nimport { v4 } from \"uuid\";\nimport { imagesSelector } from \"../../../../store/selectors/imagesSelector\";\nimport * as malariaAnnotations from \"../../../../images/malaria.json\";\nimport * as cellpaintingAnnotations from \"../../../../images/cellpainting.json\";\nimport { AnnotationType } from \"../../../../types/AnnotationType\";\nimport { SerializedAnnotationType } from \"../../../../types/SerializedAnnotationType\";\nimport { CategoryType } from \"../../../../types/CategoryType\";\nimport { categoriesSelector } from \"../../../../store/selectors\";\nimport { importSerializedAnnotations } from \"../../../../image/imageHelper\";\n\ntype ExampleImageDialogProps = {\n  onClose: () => void;\n  open: boolean;\n};\n\nexport const ExampleImageDialog = ({\n  onClose,\n  open,\n}: ExampleImageDialogProps) => {\n  const dispatch = useDispatch();\n\n  const images = useSelector(imagesSelector);\n\n  const categories_in = useSelector(categoriesSelector);\n\n  const examples = [\n    {\n      name: \"malaria.png\",\n      description:\n        \"Blood cells infected by malaria and stained with Giemsa reagent. Image from the Broad Bioimage Benchmark Collection, image set BBBC041v1.\",\n      data: malaria,\n      project: (malariaAnnotations as any).default,\n      shape: {\n        channels: 3,\n        frames: 1,\n        height: 1200,\n        planes: 1,\n        width: 1600,\n      },\n    },\n    {\n      name: \"cell-painting.png\",\n      description:\n        \"U2OS cells treated with an RNAi reagent (https://iwww.broadinstitute.org/rnai/db/clone/details?cloneId=TRCN0000195467) and stained for a \" +\n        \"cell-painting experiment (Merged; red: Actin, Golgi, and Plasma membrane stained via phalloidin and wheat germ agglutinin; \" +\n        \"blue: DNA stained via Hoechst; green: mitochondria stained via MitoTracker).\",\n      data: cellpainting,\n      project: (cellpaintingAnnotations as any).default,\n      shape: {\n        channels: 3,\n        frames: 1,\n        height: 512,\n        planes: 1,\n        width: 512,\n      },\n    },\n  ];\n\n  const onClick = ({\n    data,\n    description,\n    name,\n    shape,\n    project,\n  }: {\n    data: any;\n    description: string;\n    name: string;\n    project: any;\n    shape: ShapeType;\n  }) => {\n    onClose();\n\n    const example: ImageType = {\n      avatar: data as string,\n      id: v4(),\n      annotations: [],\n      name: name,\n      shape: shape,\n      originalSrc: data as string,\n      src: data as string,\n    };\n\n    dispatch(setImages({ images: [...images, example] }));\n\n    dispatch(\n      setActiveImage({\n        image: example.id,\n      })\n    );\n\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n\n    let channels: Array<ChannelType> = [];\n    for (let i = 0; i < shape.channels; i++) {\n      channels.push({ visible: true, range: [0, 255] });\n    }\n    dispatch(setChannels({ channels }));\n\n    dispatch(setOperation({ operation: ToolType.RectangularAnnotation }));\n\n    const newAnnotations: Array<AnnotationType> = [];\n\n    let updatedCategories: Array<CategoryType> = categories_in;\n\n    project[0].annotations.forEach(\n      (serializedAnnotation: SerializedAnnotationType) => {\n        const { annotation_out, categories } = importSerializedAnnotations(\n          serializedAnnotation,\n          updatedCategories\n        );\n\n        updatedCategories = categories;\n\n        newAnnotations.push(annotation_out);\n      }\n    );\n\n    dispatch(\n      applicationSlice.actions.setImageInstances({ instances: newAnnotations })\n    );\n    dispatch(\n      applicationSlice.actions.setCategories({ categories: updatedCategories })\n    );\n  };\n\n  return (\n    <Dialog open={open} onClose={onClose}>\n      <List component=\"div\" role=\"list\">\n        {examples.map((example, index) => {\n          return (\n            <ListItem\n              button\n              divider\n              key={index}\n              role=\"listitem\"\n              onClick={() => onClick(example)}\n            >\n              <ListItemText\n                primary={example.name}\n                secondary={example.description}\n              />\n            </ListItem>\n          );\n        })}\n      </List>\n    </Dialog>\n  );\n};\n","import { useDialog } from \"../../../../hooks/useDialog\";\nimport { MenuItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { ExampleImageDialog } from \"../ExampleImageDialog\";\nimport React from \"react\";\n\ntype OpenExampleImageMenuItemProps = {\n  popupState: any;\n};\n\nexport const OpenExampleImageMenuItem = ({\n  popupState,\n}: OpenExampleImageMenuItemProps) => {\n  const { onClose, onOpen, open } = useDialog();\n\n  return (\n    <MenuItem onClick={onOpen}>\n      <ListItemText primary=\"Open example image\" />\n      <ExampleImageDialog\n        onClose={() => {\n          onClose();\n\n          popupState.close();\n        }}\n        open={open}\n      />\n    </MenuItem>\n  );\n};\n","import { Divider, Menu } from \"@material-ui/core\";\nimport { bindMenu } from \"material-ui-popup-state\";\nimport React from \"react\";\nimport { OpenImageMenuItem } from \"./OpenImageMenuItem\";\nimport { OpenProjectFileMenuItem } from \"./OpenProjectFileMenuItem\";\nimport { OpenExampleImageMenuItem } from \"./OpenExampleImageMenuItem\";\n\ntype OpenMenuProps = {\n  popupState: any;\n};\n\nexport const OpenMenu = ({ popupState }: OpenMenuProps) => {\n  return (\n    <Menu {...bindMenu(popupState)}>\n      <OpenImageMenuItem popupState={popupState} />\n\n      <OpenProjectFileMenuItem popupState={popupState} />\n\n      <Divider />\n\n      <OpenExampleImageMenuItem popupState={popupState} />\n    </Menu>\n  );\n};\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport { Typography } from \"@material-ui/core\";\n\ntype CollapsibleHelpContentProps = {\n  children: any;\n  dense: boolean;\n  primary: string;\n  closed?: boolean;\n};\n\nexport const CollapsibleHelpContent = ({\n  children,\n  dense,\n  closed,\n  primary,\n}: CollapsibleHelpContentProps) => {\n  const [collapsed, setCollapsed] = React.useState(closed);\n\n  const onClick = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <List dense={dense}>\n      <ListItem button onClick={onClick}>\n        <ListItemIcon>\n          <DescriptionIcon />\n        </ListItemIcon>\n        <ListItemText primary={<Typography>{primary}</Typography>} />\n      </ListItem>\n\n      <Collapse in={collapsed} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" dense={dense} disablePadding>\n          {children}\n        </List>\n      </Collapse>\n    </List>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  kbd: {\n    backgroundColor: \"rgba(237, 242, 247, 1)\",\n    borderWidth: \"1px 1px 3px\",\n    borderRadius: \"6px\",\n    fontSize: \"0.8em\",\n    paddingInline: \"0.4em\",\n    whiteSpace: \"nowrap\",\n    fontWeight: 700,\n    borderColor: \"rgba(184, 186, 189, 1)\",\n    borderStyle: \"solid\",\n    color: \"rgba(45, 55, 72, 1)\",\n    width: \"fit-content\",\n    lineHeight: \"revert\",\n    marginLeft: \"5px\",\n    marginRight: \"5px\",\n  },\n  title: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  icon: {\n    marginRight: \"8px \",\n  },\n}));\n","import { useStyles } from \"./HelpDialog.css\";\nimport React from \"react\";\n\ntype KeyboardKeyProps = {\n  letter: string;\n};\nexport const KeyboardKey = ({ letter }: KeyboardKeyProps) => {\n  const classes = useStyles();\n\n  return <div className={classes.kbd}>{letter}</div>;\n};\n","import React from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport { useStyles } from \"./HelpDialog.css\";\n\ntype ToolProps = {\n  children: React.ReactNode;\n};\nexport const HelpWindowToolIcon = ({ children }: ToolProps) => {\n  const classes = useStyles();\n  return (\n    <SvgIcon className={classes.icon} fontSize=\"small\">\n      {children}\n    </SvgIcon>\n  );\n};\n","import { useStyles } from \"./HelpDialog.css\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { KeyboardKey } from \"./KeyboardKey\";\nimport React from \"react\";\nimport { HelpWindowToolIcon } from \"./HelpWindowToolIcons\";\nimport { Box } from \"@material-ui/core\";\n\ntype ToolTitleProps = {\n  toolName: string;\n  letter: string;\n  children: React.ReactNode;\n};\nexport const HelpWindowToolTitle = ({\n  children,\n  toolName,\n  letter,\n}: ToolTitleProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.title}>\n      <HelpWindowToolIcon>{children}</HelpWindowToolIcon>\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{toolName}</Box>\n      </Typography>\n      <Typography style={{ marginLeft: \"5px\" }}>(</Typography>\n      <KeyboardKey letter=\"shift\" />\n      <Typography>+</Typography>\n      <KeyboardKey letter={letter} />\n      <Typography>)</Typography>\n    </div>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"CheckboxChecked\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Path\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18,20 L6.00000002,20 C4.89500002,20 4.00000002,19.1050001 4.00000002,18 L4.00000002,6.00000002 C4.00000002,4.89500002 4.89500002,4.00000002 6.00000002,4.00000002 L18,4.00000002 C19.1050001,4.00000002 20,4.89500002 20,6.00000002 L20,18 C20,19.1050001 19.1050001,20 18,20 Z\",\n  stroke: \"#323232\",\n  strokeWidth: 1.5,\n  fill: \"#555555\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"polyline\", {\n  stroke: \"#E5E5E5\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  points: \"16.0000001 10 11 15.0000001 8.00000003 12.0000001\"\n})));\n\nfunction SvgCheckboxChecked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"CheckboxChecked\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckboxChecked);\nexport default __webpack_public_path__ + \"static/media/CheckboxChecked.6700c862.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"CheckboxUnchecked\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Path\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18,20 L6.00000002,20 C4.89500002,20 4.00000002,19.1050001 4.00000002,18 L4.00000002,6.00000002 C4.00000002,4.89500002 4.89500002,4.00000002 6.00000002,4.00000002 L18,4.00000002 C19.1050001,4.00000002 20,4.89500002 20,6.00000002 L20,18 C20,19.1050001 19.1050001,20 18,20 Z\",\n  stroke: \"#323232\",\n  strokeWidth: 1.5,\n  fill: \"#555555\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n})));\n\nfunction SvgCheckboxUnchecked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"CheckboxUnchecked\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheckboxUnchecked);\nexport default __webpack_public_path__ + \"static/media/CheckboxUnchecked.1714692b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Color-adjustment\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Path\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.25100003,21.5020001 C4.80400002,21.5020001 2.00000001,18.6980001 2.00000001,15.2510001 C2.00000001,11.804 4.80400002,9.00000004 8.25100003,9.00000004 C11.698,9.00000004 14.5020001,11.804 14.5020001,15.2510001 C14.5020001,18.6980001 11.698,21.5020001 8.25100003,21.5020001 Z\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15.7490001,21.5020001 C12.3020001,21.5020001 9.49800004,18.6980001 9.49800004,15.2510001 C9.49800004,11.804 12.3020001,9.00000004 15.7490001,9.00000004 C19.1960001,9.00000004 22.0000001,11.804 22.0000001,15.2510001 C22.0000001,18.6980001 19.1960001,21.5020001 15.7490001,21.5020001 Z\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.0100001,15.0000001 C8.56300004,15.0000001 5.75900002,12.1960001 5.75900002,8.74900004 C5.75900002,5.30200002 8.56300004,2.49800001 12.0100001,2.49800001 C15.4570001,2.49800001 18.2610001,5.30200002 18.2610001,8.74900004 C18.2610001,12.1960001 15.4570001,15.0000001 12.0100001,15.0000001 Z\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n})));\n\nfunction SvgColorAdjustment(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Color adjustment\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgColorAdjustment);\nexport default __webpack_public_path__ + \"static/media/ColorAdjustment.b6d05bdf.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Color-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  transform: \"translate(2.000000, 2.000000)\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M5.25800002,14.4180001 L1.51600001,10.676 C0.689000003,9.84900004 0.689000003,8.50900004 1.51600001,7.68200003 L7.15000003,2.04800001 L13.8860001,8.78400004 L8.25200003,14.4180001 C7.42500003,15.2440001 6.08400003,15.2440001 5.25800002,14.4180001 Z\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.8830001,11.774 C16.8830001,11.774 14.7660001,14.0710001 14.7660001,15.4790001 C14.7660001,16.6430001 15.7190001,17.5960001 16.8830001,17.5960001 C18.0470001,17.5960001 19.0000001,16.6430001 19.0000001,15.4780001 C19.0000001,14.0710001 16.8830001,11.774 16.8830001,11.774 L16.8830001,11.774 Z\"\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 7.15000003,\n  y1: 2.05000001,\n  x2: 6.06000003,\n  y2: 0.940000004\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 13.8900001,\n  y1: 8.78000004,\n  x2: 0.930000004,\n  y2: 8.78000004\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 1.42000001,\n  y1: 19.4400001,\n  x2: 10,\n  y2: 19.4400001\n})), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgColorAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Color selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgColorAnnotation);\nexport default __webpack_public_path__ + \"static/media/ColorAnnotation.7f12326e.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Elliptical-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.3640001,5.63604002 C21.8787201,9.15076004 21.8787201,14.8492401 18.3640001,18.3639401 C14.8492801,21.8786601 9.15080004,21.8786601 5.63610002,18.3639401 C2.12138001,14.8492201 2.12138001,9.15074004 5.63610002,5.63604002 C9.15082004,2.12132001 14.8493001,2.12132001 18.3640001,5.63604002\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgEllipticalAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Elliptical selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgEllipticalAnnotation);\nexport default __webpack_public_path__ + \"static/media/EllipticalAnnotation.18552cf6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Hand\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.005000, -0.005000)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.01 0 24.01 24.01 0 24.01\"\n}), /*#__PURE__*/React.createElement(\"g\", {\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  transform: \"translate(3.005000, 3.005000)\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.876688223,7.82337055 C1.82416266,7.02907695 3.20659866,7.09971911 4.07146412,7.98533063 L5.53482321,9.47915396 L5.53482321,3.45217126 C5.53482321,1.10030408 7.78886826,-0.560648269 9.97210561,0.183678925 L14.6976765,1.79294189 C16.0750548,2.26159234 17.0039844,3.57967175 17.0039844,5.06143422 L17.0039844,12.1222047 C17.0039844,15.4044809 14.3992726,18.0664844 11.1876378,18.0664844 L8.44636831,18.0664844 C6.61379765,18.0664844 4.88912444,17.1843188 3.78991922,15.6853265 L0.478816396,11.165951 C-0.284895203,10.1218254 -0.109561856,8.64867779 0.876688223,7.82337055 L0.876688223,7.82337055 Z\"\n}))));\n\nfunction SvgHand(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Hand\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHand);\nexport default __webpack_public_path__ + \"static/media/Hand.57521d91.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Lasso-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  id: \"Path\",\n  stroke: \"#BABABA\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.9200215,5.20050274 C22.7422808,7.79423331 22.7422808,11.9995035 18.9200215,14.593244 C15.0977622,17.1869746 8.90062147,17.1869746 5.07841219,14.593244 C1.25615292,11.9995135 1.25615292,7.79424331 5.07841219,5.20050274 C8.90067146,2.60677217 15.0978122,2.60677217 18.9200215,5.20050274\",\n  strokeWidth: 1.49992515,\n  transform: \"translate(11.999217, 9.896873) rotate(-14.928464) translate(-11.999217, -9.896873) \"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M13.7110001,16.3150001 C9.54400004,17.4260001 4.30200002,16.4030001 4.30200002,12.9560001\",\n  strokeWidth: 1.5\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.048,14.1050001 C10.048,16.3230001 8.89900004,19.8510001 4.30200002,21.0000001\",\n  strokeWidth: 1.5\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.30200002,12.9560001 C4.30200002,9.50900004 10.048,9.50900004 10.048,14.1050001\",\n  strokeWidth: 1.5\n})), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgLassoAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Lasso selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLassoAnnotation);\nexport default __webpack_public_path__ + \"static/media/LassoAnnotation.c53651de.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Magnetic-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(2.995000, 2.995000)\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5\n}, /*#__PURE__*/React.createElement(\"line\", {\n  x1: 15.1525604,\n  y1: 13.35081,\n  x2: 11.8391804,\n  y2: 10.0364296,\n  id: \"Path\"\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 7.97357042,\n  y1: 6.17081958,\n  x2: 4.65919,\n  y2: 2.85743958,\n  id: \"Path\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.75389542,0.324384583 L10.505625,2.07611417 C10.9368635,2.50774241 10.9368635,3.20713676 10.505625,3.638765 L5.487535,8.65585458 C4.41981785,9.72359699 4.41981785,11.4547226 5.487535,12.522465 C6.55527738,13.5901821 8.28640301,13.5901821 9.35414542,12.522465 L14.371235,7.504375 C14.8028633,7.07313649 15.5022576,7.07313649 15.9338858,7.504375 L17.6856154,9.25610458 C17.8936381,9.46269483 18.0106252,9.74375249 18.0106252,10.0369298 C18.0106252,10.3301071 17.8936381,10.6111648 17.6856154,10.817755 L12.6675254,15.835845 C9.76959655,18.7328702 5.07208391,18.7328702 2.174155,15.835845 C-0.722870151,12.9379161 -0.722870151,8.24040345 2.174155,5.34247458 L7.192245,0.324384583 C7.39883524,0.116361933 7.6798929,-0.000625150988 7.97307021,-0.000625150988 C8.26624751,-0.000625150988 8.54730517,0.116361933 8.75389542,0.324384583 Z\",\n  id: \"Path\"\n})), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"-0.005 -0.005 24.005 -0.005 24.005 24.005 -0.005 24.005\"\n}));\n\nfunction SvgMagneticAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Magnetic selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMagneticAnnotation);\nexport default __webpack_public_path__ + \"static/media/MagneticAnnotation.eaf31360.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Object-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(2.000000, 3.000000)\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 1.5\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16.1970001,12.9320001 L16.1970001,12.9320001 L18.1730001,14.9080001 C18.6090001,15.3440001 18.6090001,16.0520001 18.1730001,16.4880001 L16.9870001,17.6740001 C16.5510001,18.1100001 15.8430001,18.1100001 15.4070001,17.6740001 L13.4310001,15.6980001 L11.9420001,17.1870001 C11.6480001,17.4810001 11.1480001,17.3630001 11.0170001,16.9690001 L8.14500004,8.35200005 C7.99900004,7.91500005 8.41500004,7.50000004 8.85200005,7.64500004 L17.4690001,10.5170001 C17.8630001,10.6480001 17.9810001,11.1480001 17.6870001,11.4420001 L16.1970001,12.9320001\"\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 2.78000002,\n  y1: 7.93000005,\n  x2: 0.50000001,\n  y2: 7.93000005\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 4.44000003,\n  y1: 3.94000003,\n  x2: 2.82000002,\n  y2: 2.32000002\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 4.40000003,\n  y1: 11.9600001,\n  x2: 2.78000002,\n  y2: 13.5800001\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 8.43000004,\n  y1: 2.28000002,\n  x2: 8.43000004,\n  y2: 1.25000099e-8\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 12.4600001,\n  y1: 3.90000003,\n  x2: 14.0800001,\n  y2: 2.28000002\n})), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgObjectAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Object selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgObjectAnnotation);\nexport default __webpack_public_path__ + \"static/media/ObjectAnnotation.64bf20e5.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Pen-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  transform: \"translate(3.000000, 3.000000)\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.3500001,1.196 L6.31300003,8.22800003 C5.44200002,8.99000004 5.39800002,10.329 6.21600003,11.147 L7.36500003,12.2960001 C8.18300003,13.1140001 9.52300004,13.0690001 10.284,12.1990001 L17.3160001,4.16200002 C18.0450001,3.33000001 18.0030001,2.07500001 17.2210001,1.29200001 C16.4380001,0.509000002 15.1830001,0.468000002 14.3500001,1.196 Z\"\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 7.87000003,\n  y1: 6.87000003,\n  x2: 11.65,\n  y2: 10.65\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.599000002,17.3230001 L4.30200002,17.3230001 C7.28700003,17.3230001 8.78200004,13.7140001 6.67100003,11.603 C5.11900002,10.051 2.48300001,10.622 1.71300001,12.6770001 L0.191000001,16.7350001 C0.0850000004,17.0200001 0.295000001,17.3230001 0.599000002,17.3230001 Z\"\n})), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgFreehandAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Pen selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFreehandAnnotation);\nexport default __webpack_public_path__ + \"static/media/FreehandAnnotation.ce15dd27.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Polygonal-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.922,3.63000002 L3.68100002,8.89100004 C3.03800001,9.35800004 2.77000001,10.185 3.01500001,10.941 L5.78100002,19.4540001 C6.02600003,20.2090001 6.73000003,20.7210001 7.52500003,20.7210001 L16.4760001,20.7210001 C17.2700001,20.7210001 17.9740001,20.2100001 18.2200001,19.4540001 L20.9860001,10.941 C21.2310001,10.186 20.9630001,9.35800004 20.3200001,8.89100004 L13.0780001,3.63000002 C12.4350001,3.16300001 11.565,3.16300001 10.922,3.63000002 L10.922,3.63000002 Z\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgPolygonalAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Polygonal selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPolygonalAnnotation);\nexport default __webpack_public_path__ + \"static/media/PolygonalAnnotation.a42ec225.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Quick-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(3.000000, 3.000000)\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  strokeWidth: 1.5\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  points: \"2.54200002 13.2190001 0.225000013 15.5370001 1.58200002 17.1480001 4.22900003 17.1480001 5.36900003 16.0500001\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.00300005,14.8300001 L7.29600004,15.5370001 C6.51500004,16.3180001 5.24900003,16.3180001 4.46800003,15.5370001 L3.05400003,14.1230001 C2.27300002,13.3420001 2.27300002,12.0760001 3.05400003,11.2950001 L3.76100003,10.5880001\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.9940001,3.60700003 L14.9830001,0.596000015 C14.2380001,-0.148999988 13.0440001,-0.187999988 12.2520001,0.505000015 L3.95500003,7.76500004 C3.08400003,8.52700005 3.04000003,9.86600005 3.85800003,10.6840001 L7.90600005,14.7320001 C8.72400005,15.5500001 10.0640001,15.5050001 10.8250001,14.6350001 L18.0850001,6.33800004 C18.7780001,5.54600004 18.7380001,4.35200003 17.9940001,3.60700003 Z\"\n})), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgQuickAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Quick selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgQuickAnnotation);\nexport default __webpack_public_path__ + \"static/media/QuickAnnotation.92a60ac4.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Radio-checked\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Path\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.3640001,18.3639401 C14.8492801,21.8786601 9.15080004,21.8786601 5.63610002,18.3639401 C2.12138001,14.8492201 2.12138001,9.15074004 5.63610002,5.63604002 C9.15082004,2.12132001 14.8493001,2.12132001 18.3640001,5.63604002 C21.8787201,9.15076004 21.8787201,14.8492401 18.3640001,18.3639401 Z\",\n  stroke: \"#323232\",\n  fill: \"#555555\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.8284001,14.8284201 C13.2663001,16.3905201 10.73364,16.3905201 9.17155004,14.8284201 C7.60945003,13.2663201 7.60945003,10.73366 9.17155004,9.17157004 C10.73365,7.60947003 13.2663101,7.60947003 14.8284001,9.17157004 C16.3905001,10.73367 16.3905001,13.2663301 14.8284001,14.8284201 Z\",\n  stroke: \"#B7B7B7\",\n  fill: \"#E5E5E5\"\n})));\n\nfunction SvgRadioChecked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Radio checked\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRadioChecked);\nexport default __webpack_public_path__ + \"static/media/RadioChecked.247674a9.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Radio-unchecked\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Path\",\n  transform: \"translate(-0.000000, -0.000000)\",\n  fill: \"#555555\",\n  stroke: \"#323232\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.3640001,5.63604002 C21.8787201,9.15076004 21.8787201,14.8492401 18.3640001,18.3639401 C14.8492801,21.8786601 9.15080004,21.8786601 5.63610002,18.3639401 C2.12138001,14.8492201 2.12138001,9.15074004 5.63610002,5.63604002 C9.15082004,2.12132001 14.8493001,2.12132001 18.3640001,5.63604002\"\n})));\n\nfunction SvgRadioUnchecked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Radio unchecked\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRadioUnchecked);\nexport default __webpack_public_path__ + \"static/media/RadioUnchecked.d9a75d6a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Rectangular-selection\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Group\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.4170001,20.25 L5.58300002,20.25 C4.57000002,20.25 3.75000002,19.4290001 3.75000002,18.4170001 L3.75000002,5.58300002 C3.75000002,4.57000002 4.57100002,3.75000002 5.58300002,3.75000002 L18.4160001,3.75000002 C19.4290001,3.75000002 20.249001,4.57100002 20.249001,5.58300002 L20.249001,18.4160001 C20.25,19.4290001 19.4290001,20.25 18.4170001,20.25 Z\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n})));\n\nfunction SvgRectangularAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Rectangular selection\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRectangularAnnotation);\nexport default __webpack_public_path__ + \"static/media/RectangularAnnotation.3cca93c1.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Pointer\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Path\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.7110001,15.5010001 C20.1020001,15.8920001 20.1020001,16.5250001 19.7110001,16.9150001 L16.9160001,19.7100001 C16.5250001,20.1010001 15.8920001,20.1010001 15.5020001,19.7100001 L12.0000001,16.2080001 L9.90400004,18.3040001 C9.37800004,18.8300001 8.48300004,18.6180001 8.24800003,17.9130001 L4.04800002,5.31200002 C3.78700002,4.53100002 4.53100002,3.78700002 5.31300002,4.04800002 L17.9140001,8.24800003 C18.6190001,8.48300004 18.8310001,9.37800004 18.3050001,9.90400004 L16.2090001,11.999 L19.7110001,15.5010001 Z\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n})));\n\nfunction SvgSelection(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Pointer\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSelection);\nexport default __webpack_public_path__ + \"static/media/Selection.4e4701f2.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Zoom\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Path\",\n  transform: \"translate(-0.000000, -0.000000)\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"0 0 24.0000001 0 24.0000001 24.0000001 0 24.0000001\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.1931001,5.58187002 C16.5249201,7.91369003 16.5249201,11.69432 14.1931001,14.0261401 C11.86128,16.3579601 8.08065003,16.3579601 5.74883002,14.0261401 C3.41701001,11.69432 3.41701001,7.91369003 5.74883002,5.58187002 C8.08065003,3.25005001 11.86128,3.25005001 14.1931001,5.58187002\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 14.1500001,\n  y1: 14.0600001,\n  x2: 20.0000001,\n  y2: 19.9900001,\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n})));\n\nfunction SvgZoom(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Zoom\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgZoom);\nexport default __webpack_public_path__ + \"static/media/Zoom.58f47de7.svg\";\nexport { ForwardRef as ReactComponent };","import { HelpWindowToolTitle } from \"../HelpDialog/HelpWindowToolTitle\";\nimport {\n  ColorAdjustmentIcon,\n  ColorSelectionIcon,\n  EllipticalSelectionIcon,\n  HandIcon,\n  LassoSelectionIcon,\n  MagneticSelectionIcon,\n  PenSelectionIcon,\n  PolygonalSelectionIcon,\n  QuickSelectionIcon,\n  RectangularSelectionIcon,\n  SelectionIcon,\n  ZoomIcon,\n} from \"../../../icons\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { KeyboardKey } from \"../HelpDialog/KeyboardKey\";\nimport Divider from \"@material-ui/core/Divider\";\n\nexport const ManipulatingCanvasContent = () => {\n  return (\n    <React.Fragment>\n      <br />\n      <HelpWindowToolTitle toolName={\"Hand tool\"} letter={\"H\"}>\n        <HandIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Hold and drag to pan the image in the canvas. Click on \"Reset position\"\n        to center the image back onto the canvas.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Zoom tool\"} letter={\"Z\"}>\n        <ZoomIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Use the zoom slider or your mouse wheel to zoom in or out of the image.\n        Alternatively, click on the image to zoom in or out (select the desired\n        zooming mode first).\n      </Typography>\n      <br />\n      <Typography>\n        To zoom in a particular region of the image, use your mouse to select\n        the rectangular region in which you would like to zoom in. Release the\n        mouse to zoom in the selected region.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Intensity adjustment\"} letter={\"I\"}>\n        <ColorAdjustmentIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Filter each color channel by setting new minimum and maximum for each\n        color channel. Untoggle a channel box to disable the channel. Click on\n        \"Reset\" to reset the intensities to their original values.\n      </Typography>\n      <br />\n    </React.Fragment>\n  );\n};\n\nexport const OpeningImagesHelpContent = () => {\n  return (\n    <React.Fragment>\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Opening images\"}</Box>\n      </Typography>\n      <Typography>\n        In the left menu, select \"Open new image\" to select one or multiple\n        image files to open.\n      </Typography>\n      <br />\n      <Typography>\n        Alternatively, drag and drop the desired image files directly onto the\n        canvas.\n      </Typography>\n      <br />\n      <Typography>\n        Note that we currently only support 1-channel (grayscale) or 3-channel\n        2D images. We do not support multi-dimensional images.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Deleting images\"}</Box>\n      </Typography>\n      <Typography>\n        Images can be deleted from the workspace at any time by selecting\n        \"Delete image\" on the menu options next to the image thumbnail.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Example pre-annotated images\"}</Box>\n      </Typography>\n      <Typography>\n        Take a look at our pre-annotated images by clicking \"Open example image\"\n        and selecting the image of choice!\n      </Typography>\n      <br />\n    </React.Fragment>\n  );\n};\n\nexport const CreatingCategoriesContent = () => {\n  return (\n    <React.Fragment>\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\" Creating a new category\"}</Box>\n      </Typography>\n      <Typography>\n        Create a new category by clicking on the \"Create category\" button. Once\n        a category is created, its name and color can be changed at any time by\n        selecting its \"Edit category\" menu on theego right of the catry icon.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">\n          {\" Changing the category of an annotation\"}\n        </Box>\n      </Typography>\n      <Typography>\n        To change the category of an annotation, first select the annotation(s)\n        to be changed and click on the desired new category button in the left\n        toolbar. If the desired category does not exist, click \"Create category\"\n        to make a new category.\n      </Typography>\n      <br />\n      <Typography>\n        Make sure to press the \"Enter\" key to save the selected annotations with\n        the new category assigned.\n      </Typography>\n    </React.Fragment>\n  );\n};\n\nexport const MakingNewAnnotationsHelpContent = () => {\n  return (\n    <React.Fragment>\n      <br />\n      <Typography>\n        All annotation tools are accessed from the toolbar to the right of the\n        canvas or by using their keyboard key shortcut.\n      </Typography>\n      <br />\n      <Typography>\n        Once you an annotation is completed, press \"Enter\" on your keyboard or\n        click on \"confirm\".\n      </Typography>\n      <br />\n      <div>\n        <Typography>\n          To undo an unconfirmed annotation, press \"Escape\" on your keyboard or\n          click on \"cancel\".\n        </Typography>\n      </div>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Rectangular annotation\"} letter={\"R\"}>\n        <RectangularSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Click and drag to start drawing a rectangular annotation (bounding box).\n        Release to close the annotation.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Elliptical annotation\"} letter={\"E\"}>\n        <EllipticalSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Click and drag to start drawing an elliptical annotation. Release to\n        close the annotation.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Pen annotation\"} letter={\"D\"}>\n        <PenSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Select desired brush size using the brush size slider. Draw over pixels\n        by clicking and dragging over the desired area. Release to close the\n        annotation.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Lasso annotation\"} letter={\"L\"}>\n        <LassoSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Click and drag cursor around the desired region. Release to\n        automatically close the lasso annotation.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Polygonal annotation\"} letter={\"P\"}>\n        <PolygonalSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Click and release to create new anchor points. Close the polygonal\n        annotation either by clicking on its origin point or by hitting enter on\n        your keyboard.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Magnetic annotation\"} letter={\"M\"}>\n        <MagneticSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Click and release to create new anchor points. The tool will\n        automatically snap onto the edges of an object. Close the magnetic\n        annotation by clicking on its origin point.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Color annotation\"} letter={\"C\"}>\n        <ColorSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Click on a pixel with the color of interest, hold and drag outwards to\n        select a region of similar color intensities near the point. Release to\n        finish the annotation.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <HelpWindowToolTitle toolName={\"Quick annotation\"} letter={\"Q\"}>\n        <QuickSelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Click and drag to select a region of superpixels. Release to finish the\n        annotation.\n      </Typography>\n      <br />\n    </React.Fragment>\n  );\n};\n\nexport const ChangingAnnotationsHelpContent = () => {\n  return (\n    <React.Fragment>\n      <br />\n      <HelpWindowToolTitle toolName={\"Select tool\"} letter={\"S\"}>\n        <SelectionIcon />\n      </HelpWindowToolTitle>\n      <Typography>\n        Use the Select tool to select annotations. Click on a desired annotation\n        to select it, and hold shift while clicking other annotations to select\n        multiple annotations. Alternatively, draw a rectangular box around\n        multiple annotations to select multiple annotations at once.\n      </Typography>\n      <br />\n      <Typography>\n        Click on \"Select all\" in the Selection tool menu to select all existing\n        annotations. To select/unselect annotations of a specific category,\n        toggle/untoggle the corresponding category in the Selection tool menu.\n      </Typography>\n      <br />\n      <Typography>\n        In the case of overlapping annotations, repeatedly click on the\n        intersecting region of the overlapping annotations until the desired\n        annotation is selected.\n      </Typography>\n      <br />\n      <Typography>\n        Press the \"Escape\" key to undo changes or to unselect annotations.\n      </Typography>\n      <br />\n\n      <Typography>\n        Press the \"Enter\" key to confirm changes to a selected annotation.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Resizing an annotation\"}</Box>\n      </Typography>\n      <Typography>\n        Once an annotation is selected, use the anchor points of the bouding box\n        to resize it.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Adding area to an annotation\"}</Box>\n      </Typography>\n      <Typography>\n        Select the annotation tool to use to add an area and select the \"add\n        area\" selection mode. Draw on the selected annotation with the\n        annotation tool to combine areas together.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">\n          {\"Subtracting an area from an annotation\"}\n        </Box>\n      </Typography>\n      <Typography>\n        Select the annotation tool to use to subtract an area and select the\n        \"subtract area\" selection mode. Draw on the selected annotation with the\n        annotation tool to subtract an area from the selected annotation.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">\n          {\"Intersection of two annotations\"}\n        </Box>\n      </Typography>\n      <Typography>\n        Select the annotation tool to use to use for the intersection operation\n        and select the \"intersect\" selection mode. Draw on the selected\n        annotation with the annotation tool and release to obtain the\n        intersection of the two annotations.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Deleting selected annotations\"}</Box>\n      </Typography>\n      <Typography>\n        First, use the Select tool to select annotations. To delete one or more\n        selected annotations, press the Delete key or click on \"Clear selected\n        annotations\" in the left toolbar.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">\n          {\"  Deleting all annotations for a single image\"}\n        </Box>\n      </Typography>\n      <Typography>\n        To clear annotations of a particular image, click on the menu to the\n        right of the image thumbnail and select \"Clear annotations.\"\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Deleting all annotations\"}</Box>\n      </Typography>\n      <Typography>\n        Delete all annotations by clicking \"Clear all annotations\" in the left\n        toolbar. WARNING: This will delete all annotations across all images\n        loaded, not just the active image.\n      </Typography>\n      <br />\n    </React.Fragment>\n  );\n};\n\nexport const SavingProjectHelpContent = () => {\n  return (\n    <React.Fragment>\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Saving a project\"}</Box>\n      </Typography>\n      <Typography>\n        Save all images and their annotations by clicking on \"Save project file\"\n        in the Save menu on the left toolbar. This will download a .json file\n        that encodes the image data and their annotations.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Opening a saved project\"}</Box>\n      </Typography>\n      <Typography>\n        To open a saved project and make new annotations or change annotations,\n        Click \"Open project file\" in the Open menu on the left toolbar. Select\n        the .json file that was downloaded when saving an earlier project.\n      </Typography>\n      <br />\n      <Divider />\n      <br />\n      <Typography>\n        <Box fontWeight=\"fontWeightBold\">{\"Exporting annotations\"}</Box>\n      </Typography>\n      <Typography>\n        Annotations can be exported as instance segmentation masks (one binary\n        image per instance), semantic segmentation masks (one binary image per\n        category containing all instances), or label matrices. To export all\n        annotations across all images, use the Save menu on the left toolbar.\n        Otherwise, to export annotaions of a single image, click on the\n        corresponding image's submenu to export its annotations.\n      </Typography>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { CollapsibleHelpContent } from \"./CollapsibleHelpContent\";\nimport { IconButton } from \"@material-ui/core\";\nimport {\n  ChangingAnnotationsHelpContent,\n  CreatingCategoriesContent,\n  MakingNewAnnotationsHelpContent,\n  ManipulatingCanvasContent,\n  OpeningImagesHelpContent,\n  SavingProjectHelpContent,\n} from \"../HelpContent/HelpContent\";\nimport Container from \"@material-ui/core/Container\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nexport default function HelpDrawer() {\n  const useStyles = makeStyles((theme) => ({\n    drawer: {\n      width: theme.spacing(35),\n      flexShrink: 0,\n    },\n    drawerPaper: {\n      width: theme.spacing(35),\n    },\n  }));\n\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor: string, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event.type === \"keydown\" &&\n      ((event as React.KeyboardEvent).key === \"Tab\" ||\n        (event as React.KeyboardEvent).key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  return (\n    <div>\n      {\n        <React.Fragment key={\"left\"}>\n          <ListItem button onClick={toggleDrawer(\"left\", true)}>\n            <ListItemIcon>\n              <HelpIcon />\n            </ListItemIcon>\n\n            <ListItemText primary=\"Help\" />\n          </ListItem>\n          <Drawer\n            variant={\"persistent\"}\n            anchor={\"left\"}\n            className={classes.drawer}\n            classes={{\n              paper: classes.drawerPaper,\n            }}\n            open={state[\"left\"]}\n            onClose={toggleDrawer(\"left\", false)}\n          >\n            <div tabIndex={1} role=\"button\">\n              <IconButton\n                style={{ float: \"right\", marginRight: \"20px\" }}\n                onClick={toggleDrawer(\"left\", false)}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n            <CollapsibleHelpContent\n              primary={\"Opening images\"}\n              closed={false}\n              dense={true}\n            >\n              <Container>\n                <OpeningImagesHelpContent />\n              </Container>\n            </CollapsibleHelpContent>\n            <CollapsibleHelpContent\n              primary={\"Manipulating the canvas\"}\n              closed={false}\n              dense={true}\n            >\n              <Container>\n                <ManipulatingCanvasContent />\n              </Container>\n            </CollapsibleHelpContent>\n            <CollapsibleHelpContent\n              primary={\"Creating categories\"}\n              closed={false}\n              dense={true}\n            >\n              <Container>\n                <CreatingCategoriesContent />\n              </Container>\n            </CollapsibleHelpContent>\n            <CollapsibleHelpContent\n              primary={\"Making new annotations\"}\n              closed={false}\n              dense={true}\n            >\n              <Container>\n                <MakingNewAnnotationsHelpContent />\n              </Container>\n            </CollapsibleHelpContent>\n            <CollapsibleHelpContent\n              primary={\"Changing existing annotations\"}\n              closed={false}\n              dense={true}\n            >\n              <Container>\n                <ChangingAnnotationsHelpContent />\n              </Container>\n            </CollapsibleHelpContent>\n            <CollapsibleHelpContent\n              primary={\"Saving project and exporting annotations\"}\n              closed={false}\n              dense={true}\n            >\n              <Container>\n                <SavingProjectHelpContent />\n              </Container>\n            </CollapsibleHelpContent>\n          </Drawer>\n        </React.Fragment>\n      }\n    </div>\n  );\n}\n","import React from \"react\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { applicationSlice } from \"../../../../store\";\nimport { selectedCategorySelector } from \"../../../../store/selectors\";\n\ntype ClearCategoryDialogProps = {\n  onClose: () => void;\n  open: boolean;\n};\n\nexport const ClearCategoryDialog = ({\n  onClose,\n  open,\n}: ClearCategoryDialogProps) => {\n  const dispatch = useDispatch();\n\n  const category = useSelector(selectedCategorySelector);\n\n  const onClear = () => {\n    dispatch(\n      applicationSlice.actions.clearCategoryAnnotations({ category: category })\n    );\n\n    onClose();\n  };\n\n  return (\n    <Dialog disableBackdropClick={true} fullWidth onClose={onClose} open={open}>\n      <DialogTitle>Clear \"{category.name}\" annotations?</DialogTitle>\n\n      <DialogContent>\n        Annotations categorized as \"{category.name}\" will be deleted\".\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n\n        <Button onClick={onClear} color=\"primary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n","import Drawer from \"@material-ui/core/Drawer\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useState } from \"react\";\nimport { CategoryType } from \"../../../../types/CategoryType\";\nimport {\n  categoryCountsSelector,\n  createdCategoriesSelector,\n  imageSelector,\n  selectedCategorySelector,\n  unknownCategorySelector,\n} from \"../../../../store/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useStyles } from \"./CategoriesList.css\";\nimport { CollapsibleList } from \"../CollapsibleList\";\nimport { CategoryListItemCheckbox } from \"../CategoryListItemCheckbox\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport { CategoryMenu } from \"../CategoryMenu\";\nimport { DeleteCategoryDialog } from \"../DeleteCategoryDialog\";\nimport { EditCategoryDialog } from \"../EditCategoryDialog\";\nimport { useDialog } from \"../../../../hooks\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport { applicationSlice, setActiveImage } from \"../../../../store\";\nimport {\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Divider,\n  TextField,\n} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport FolderOpenIcon from \"@material-ui/icons/FolderOpen\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Box from \"@material-ui/core/Box\";\nimport PopupState, { bindTrigger } from \"material-ui-popup-state\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport FeedbackIcon from \"@material-ui/icons/Feedback\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { SettingsDialog } from \"../../SettingsButton/SettingsDialog\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport { CreateCategoryDialog } from \"../CreateCategoryListItem/CreateCategoryDialog\";\nimport { selectedAnnotationsIdsSelector } from \"../../../../store/selectors/selectedAnnotationsIdsSelector\";\nimport { ImageType } from \"../../../../types/ImageType\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { imagesSelector } from \"../../../../store/selectors/imagesSelector\";\nimport { ImageMenu } from \"../ImageMenu\";\nimport { DeleteAllAnnotationsDialog } from \"../DeleteAllAnnotationsDialog\";\nimport { SaveMenu } from \"../SaveMenu/SaveMenu\";\nimport { OpenMenu } from \"../OpenMenu/OpenMenu\";\nimport { HelpDialog } from \"../../Help/HelpDialog/HelpDialog\";\nimport { OpenImageHelpDialog } from \"../../Help/HelpDialog/OpenImageHelpDialog\";\nimport { MakeAnnotationsHelpDialog } from \"../../Help/HelpDialog/MakeAnnotationsHelpDialog\";\nimport { ManipulateCanvasHelpDialog } from \"../../Help/HelpDialog/ManipulateCanvasHelpDialog\";\nimport { ChangingAnnotationsHelpDialog } from \"../../Help/HelpDialog/ChangingAnnotationsHelpDialog\";\nimport { SavingProjectHelpDialog } from \"../../Help/HelpDialog/SavingProjectHelpDialog\";\nimport HelpDrawer from \"../../Help/HelpDrawer/HelpDrawer\";\nimport { ClearCategoryDialog } from \"../ClearCategoryDialog\";\n\nexport const CategoriesList = () => {\n  const classes = useStyles();\n\n  const createdCategories = useSelector(createdCategoriesSelector);\n  const selectedCategory = useSelector(selectedCategorySelector);\n  const unknownCategory = useSelector(unknownCategorySelector);\n\n  const selectedAnnotationsIds = useSelector(selectedAnnotationsIdsSelector);\n\n  const categoryCounts = useSelector(categoryCountsSelector);\n\n  const images = useSelector(imagesSelector);\n  const currentImage = useSelector(imageSelector);\n\n  const dispatch = useDispatch();\n\n  const {\n    onClose: onCloseDeleteCategoryDialog,\n    onOpen: onOpenDeleteCategoryDialog,\n    open: openDeleteCategoryDialog,\n  } = useDialog();\n\n  const {\n    onClose: onCloseEditCategoryDialog,\n    onOpen: onOpenEditCategoryDialog,\n    open: openEditCategoryDialog,\n  } = useDialog();\n\n  const {\n    onClose: onCloseClearCategoryDialog,\n    onOpen: onOpenClearCategoryDialog,\n    open: openClearCategoryDialog,\n  } = useDialog();\n\n  const {\n    onClose: onCloseDeleteAllAnnotationsDialog,\n    onOpen: onOpenDeleteAllAnnotationsDialog,\n    open: openDeleteAllAnnotationsDialog,\n  } = useDialog();\n\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const [imageAnchorEl, setImageAnchorEl] = React.useState<null | HTMLElement>(\n    null\n  );\n\n  const onCategoryClick = (\n    event: React.MouseEvent<HTMLDivElement>,\n    category: CategoryType\n  ) => {\n    dispatch(\n      applicationSlice.actions.setSelectedCategory({\n        selectedCategory: category.id,\n      })\n    );\n  };\n\n  const onCategoryMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    category: CategoryType\n  ) => {\n    dispatch(\n      applicationSlice.actions.setSelectedCategory({\n        selectedCategory: category.id,\n      })\n    );\n    setAnchorEl(event.currentTarget);\n  };\n\n  const onCategoryMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onImageMenuOpen = (\n    event: React.MouseEvent<HTMLButtonElement>,\n    image: ImageType\n  ) => {\n    onImageItemClick(event, image);\n    setImageAnchorEl(event.currentTarget);\n  };\n\n  const onImageMenuClose = () => {\n    setImageAnchorEl(null);\n  };\n\n  const onClearAllAnnotations = () => {\n    const existingAnnotations = images\n      .map((image: ImageType) => {\n        return [...image.annotations];\n      })\n      .flat();\n    if (existingAnnotations.length) {\n      onOpenDeleteAllAnnotationsDialog();\n    }\n  };\n\n  const onClearSelectedAnnotations = () => {\n    if (!selectedAnnotationsIds) return;\n    selectedAnnotationsIds.forEach((id: string) => {\n      dispatch(applicationSlice.actions.deleteImageInstance({ id: id }));\n    });\n    dispatch(\n      applicationSlice.actions.setSelectedCategory({\n        selectedCategory: \"00000000-0000-0000-0000-000000000000\",\n      })\n    );\n    dispatch(\n      applicationSlice.actions.setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n  };\n\n  const onImageItemClick = (\n    evt: React.MouseEvent<HTMLDivElement | HTMLButtonElement, MouseEvent>,\n    image: ImageType\n  ) => {\n    dispatch(setActiveImage({ image: image.id }));\n\n    dispatch(\n      applicationSlice.actions.setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n  };\n\n  const t = useTranslation();\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      className={classes.drawer}\n      classes={{ paper: classes.paper }}\n      open\n      variant=\"persistent\"\n    >\n      <Box\n        style={{ paddingTop: 60 }}\n        className={classes.toolbar}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        px={8}\n      />\n\n      <AppBar className={classes.appBar} color=\"default\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\">\n            Piximi Annotator\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Divider />\n\n      <List dense>\n        <OpenListItem />\n        <SaveListItem />\n      </List>\n\n      <Divider />\n\n      <CollapsibleList closed dense primary={t(\"Images\")}>\n        {images.map((image: ImageType) => {\n          return (\n            <div key={image.id}>\n              <ListItem\n                button\n                id={image.id}\n                onClick={(evt: React.MouseEvent<HTMLDivElement, MouseEvent>) =>\n                  onImageItemClick(evt, image)\n                }\n                selected={image.id === currentImage?.id}\n              >\n                <ListItemAvatar>\n                  <Avatar\n                    alt={image.name}\n                    src={image.avatar}\n                    variant={\"square\"}\n                  />\n                </ListItemAvatar>\n                <ListItemText\n                  id={image.id}\n                  primary={image.name}\n                  primaryTypographyProps={{ noWrap: true }}\n                />\n                {image.annotations.length !== 0 && (\n                  <Chip label={image.annotations.length} size=\"small\" />\n                )}\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    onClick={(event) => onImageMenuOpen(event, image)}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n            </div>\n          );\n        })}\n        <ImageMenu\n          anchorElImageMenu={imageAnchorEl}\n          onCloseImageMenu={onImageMenuClose}\n          openImageMenu={Boolean(imageAnchorEl)}\n        />\n      </CollapsibleList>\n\n      <CollapsibleList closed dense primary={t(\"Categories\")}>\n        {createdCategories.map((category: CategoryType) => {\n          return (\n            <div key={category.id}>\n              <ListItem\n                button\n                id={category.id}\n                onClick={(event) => onCategoryClick(event, category)}\n                selected={category.id === selectedCategory.id}\n              >\n                <CategoryListItemCheckbox category={category} />\n\n                <ListItemText\n                  id={category.id}\n                  primary={category.name}\n                  primaryTypographyProps={{ noWrap: true }}\n                />\n                {categoryCounts[category.id] !== 0 && (\n                  <Chip label={categoryCounts[category.id]} size=\"small\" />\n                )}\n\n                <ListItemSecondaryAction>\n                  <IconButton\n                    edge=\"end\"\n                    onClick={(event) => onCategoryMenuOpen(event, category)}\n                  >\n                    <MoreHorizIcon />\n                  </IconButton>\n                </ListItemSecondaryAction>\n              </ListItem>\n\n              <CategoryMenu\n                anchorElCategoryMenu={anchorEl}\n                onCloseCategoryMenu={onCategoryMenuClose}\n                onOpenCategoryMenu={(event) =>\n                  onCategoryMenuOpen(event, category)\n                }\n                onOpenDeleteCategoryDialog={onOpenDeleteCategoryDialog}\n                onOpenEditCategoryDialog={onOpenEditCategoryDialog}\n                onOpenClearCategoryDialog={onOpenClearCategoryDialog}\n                openCategoryMenu={Boolean(anchorEl)}\n              />\n            </div>\n          );\n        })}\n        {unknownCategory && (\n          <div key={unknownCategory.id}>\n            <ListItem\n              button\n              id={unknownCategory.id}\n              onClick={(event) => onCategoryClick(event, unknownCategory)}\n              selected={unknownCategory.id === selectedCategory.id}\n            >\n              <CategoryListItemCheckbox category={unknownCategory} />\n\n              <ListItemText\n                id={unknownCategory.id}\n                primary={t(unknownCategory.name)}\n                primaryTypographyProps={{ noWrap: true }}\n              />\n              {categoryCounts[unknownCategory.id] !== 0 && (\n                <Chip label={categoryCounts[unknownCategory.id]} size=\"small\" />\n              )}\n              <ListItemSecondaryAction>\n                <IconButton\n                  edge=\"end\"\n                  onClick={(event) =>\n                    onCategoryMenuOpen(event, unknownCategory)\n                  }\n                >\n                  <MoreHorizIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n\n            <CategoryMenu\n              anchorElCategoryMenu={anchorEl}\n              onCloseCategoryMenu={onCategoryMenuClose}\n              onOpenCategoryMenu={(event) =>\n                onCategoryMenuOpen(event, unknownCategory)\n              }\n              onOpenDeleteCategoryDialog={onOpenDeleteCategoryDialog}\n              onOpenEditCategoryDialog={onOpenEditCategoryDialog}\n              openCategoryMenu={Boolean(anchorEl)}\n              onOpenClearCategoryDialog={onOpenClearCategoryDialog}\n            />\n          </div>\n        )}\n\n        <DeleteCategoryDialog\n          onClose={onCloseDeleteCategoryDialog}\n          open={openDeleteCategoryDialog}\n        />\n\n        <EditCategoryDialog\n          onCloseDialog={onCloseEditCategoryDialog}\n          openDialog={openEditCategoryDialog}\n        />\n\n        <ClearCategoryDialog\n          onClose={onCloseClearCategoryDialog}\n          open={openClearCategoryDialog}\n        />\n\n        <CreateCategoryListItem />\n      </CollapsibleList>\n\n      <Divider />\n\n      <List dense>\n        <ListItem button onClick={onClearAllAnnotations}>\n          <ListItemIcon>\n            <DeleteIcon color=\"disabled\" />\n          </ListItemIcon>\n          <ListItemText primary={t(\"Clear all annotations\")} />\n        </ListItem>\n\n        <DeleteAllAnnotationsDialog\n          onClose={onCloseDeleteAllAnnotationsDialog}\n          open={openDeleteAllAnnotationsDialog}\n        />\n\n        <ListItem button onClick={onClearSelectedAnnotations}>\n          <ListItemIcon>\n            <DeleteIcon color=\"disabled\" />\n          </ListItemIcon>\n          <ListItemText primary={t(\"Clear selected annotations\")} />\n        </ListItem>\n      </List>\n\n      <Divider />\n\n      <List dense>\n        <HelpDrawer />\n        <SettingsListItem />\n        <SendFeedbackListItem />\n      </List>\n    </Drawer>\n  );\n};\n\ntype SendFeedbackDialogProps = {\n  onClose: () => void;\n  open: boolean;\n  onSend: (text: string) => void;\n};\n\nconst CreateCategoryListItem = () => {\n  const { onClose, onOpen, open } = useDialog();\n\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={onOpen}>\n        <ListItemIcon>\n          <AddIcon />\n        </ListItemIcon>\n\n        <ListItemText primary={t(\"Create category\")} />\n      </ListItem>\n      <CreateCategoryDialog onClose={onClose} open={open} />\n    </React.Fragment>\n  );\n};\n\n/*\n * WARNING: This list item and its dialog box is not used anymore as it is been replaced with the HelpDrawer component.\n * */\n\nconst HelpListItem = () => {\n  const { onClose, onOpen, open } = useDialog();\n\n  const {\n    onClose: onCloseOpenImagesHelpDialog,\n    onOpen: onOpenOpenImagesHelpDialog,\n    open: openOpenImagesHelpDialog,\n  } = useDialog();\n\n  const {\n    onClose: onCloseManipulatingCanvasHelpDialog,\n    onOpen: onOpenManipulatingCanvasHelpDialog,\n    open: openManipulatingCanvasHelpDialog,\n  } = useDialog();\n\n  const {\n    onClose: onCloseMakeAnnotationsHelpDialog,\n    onOpen: onOpenMakeAnnotationsHelpDialog,\n    open: openMakeAnnotationsHelpDialog,\n  } = useDialog();\n\n  const {\n    onClose: onCloseChangingAnnotationsHelpDialog,\n    onOpen: onOpenChangingAnnotationsHelpDialog,\n    open: openChangingAnnotationsHelpDialog,\n  } = useDialog();\n\n  const {\n    onClose: onCloseSavingProjectHelpDialog,\n    onOpen: onOpenSavingProjectHelpDialog,\n    open: openSavingProjectHelpDialog,\n  } = useDialog();\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={onOpen}>\n        <ListItemIcon>\n          <HelpIcon />\n        </ListItemIcon>\n\n        <ListItemText primary=\"Help\" />\n      </ListItem>\n\n      <HelpDrawer />\n\n      {/*<HelpDialog*/}\n      {/*  onClose={onClose}*/}\n      {/*  open={open}*/}\n      {/*  onOpenOpenImagesHelpDialog={onOpenOpenImagesHelpDialog}*/}\n      {/*  onOpenMakeAnnotationsHelpDialog={onOpenMakeAnnotationsHelpDialog}*/}\n      {/*  onOpenManipulatingCanvasHelpDialog={onOpenManipulatingCanvasHelpDialog}*/}\n      {/*  onOpenChangingAnnotationsHelpDialog={*/}\n      {/*    onOpenChangingAnnotationsHelpDialog*/}\n      {/*  }*/}\n      {/*  onOpenSavingProjectHelpDialog={onOpenSavingProjectHelpDialog}*/}\n      {/*/>*/}\n      {/*<OpenImageHelpDialog*/}\n      {/*  onClose={onCloseOpenImagesHelpDialog}*/}\n      {/*  open={openOpenImagesHelpDialog}*/}\n      {/*/>*/}\n      {/*<MakeAnnotationsHelpDialog*/}\n      {/*  onClose={onCloseMakeAnnotationsHelpDialog}*/}\n      {/*  open={openMakeAnnotationsHelpDialog}*/}\n      {/*/>*/}\n      {/*<ManipulateCanvasHelpDialog*/}\n      {/*  onClose={onCloseManipulatingCanvasHelpDialog}*/}\n      {/*  open={openManipulatingCanvasHelpDialog}*/}\n      {/*/>*/}\n      {/*<ChangingAnnotationsHelpDialog*/}\n      {/*  onClose={onCloseChangingAnnotationsHelpDialog}*/}\n      {/*  open={openChangingAnnotationsHelpDialog}*/}\n      {/*/>*/}\n      {/*<SavingProjectHelpDialog*/}\n      {/*  onClose={onCloseSavingProjectHelpDialog}*/}\n      {/*  open={openSavingProjectHelpDialog}*/}\n      {/*/>*/}\n    </React.Fragment>\n  );\n};\n\nconst OpenListItem = () => {\n  return (\n    <PopupState variant=\"popover\">\n      {(popupState) => (\n        <React.Fragment>\n          <ListItem button {...bindTrigger(popupState)}>\n            <ListItemIcon>\n              <FolderOpenIcon />\n            </ListItemIcon>\n\n            <ListItemText primary=\"Open\" />\n          </ListItem>\n\n          <OpenMenu popupState={popupState} />\n        </React.Fragment>\n      )}\n    </PopupState>\n  );\n};\n\nconst SaveListItem = () => {\n  const t = useTranslation();\n\n  return (\n    <PopupState variant=\"popover\">\n      {(popupState) => (\n        <React.Fragment>\n          <ListItem button {...bindTrigger(popupState)}>\n            <ListItemIcon>\n              <SaveIcon />\n            </ListItemIcon>\n\n            <ListItemText primary={t(\"Save\")} />\n          </ListItem>\n          <SaveMenu popupState={popupState} />\n        </React.Fragment>\n      )}\n    </PopupState>\n  );\n};\n\nconst SendFeedbackDialog = ({\n  onClose,\n  open,\n  onSend,\n}: SendFeedbackDialogProps) => {\n  const t = useTranslation();\n\n  const [input, setInput] = useState(\"\");\n\n  const send = () => {\n    onSend(input);\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={onClose} open={open}>\n      <DialogTitle>{t(\"Send feedback\")}</DialogTitle>\n\n      <DialogContent>\n        <DialogContentText>\n          {t(\"Use this form to report issues with Piximi via our GitHub page\")}.\n        </DialogContentText>\n\n        <TextField\n          autoFocus\n          margin=\"dense\"\n          id=\"feedback\"\n          onChange={(e) => setInput(e.target.value)}\n          multiline\n          rows={12}\n          fullWidth\n          variant=\"filled\"\n        />\n      </DialogContent>\n\n      <DialogActions>\n        <Button onClick={onClose} color=\"primary\">\n          Cancel\n        </Button>\n\n        <Button onClick={send} color=\"primary\">\n          Send feedback\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nconst SendFeedbackListItem = () => {\n  const { onClose, onOpen, open } = useDialog();\n\n  const onSend = (text: string) => {\n    const url =\n      \"https://github.com/piximi/image-viewer/issues/new?title=Bug%20Report&labels=bug&body=\" +\n      encodeURIComponent(text);\n    window.open(url);\n  };\n\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={onOpen}>\n        <ListItemIcon>\n          <FeedbackIcon />\n        </ListItemIcon>\n\n        <ListItemText primary={t(\"Send feedback\")} />\n      </ListItem>\n      <SendFeedbackDialog onClose={onClose} open={open} onSend={onSend} />\n    </React.Fragment>\n  );\n};\n\nconst SettingsListItem = () => {\n  const { onClose, onOpen, open } = useDialog();\n\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <ListItem button onClick={onOpen}>\n        <ListItemIcon>\n          <SettingsIcon />\n        </ListItemIcon>\n\n        <ListItemText primary={t(\"Settings\")} />\n      </ListItem>\n      <SettingsDialog onClose={onClose} open={open} />\n    </React.Fragment>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport texture from \"../../../../images/texture.png\";\n\nconst settingsWidth = 240;\nconst operationsWidth = 56;\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  root: {\n    display: \"flex\",\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    width: \"100%\",\n  },\n  options: {\n    width: settingsWidth,\n    flexShrink: 0,\n  },\n  settingsPaper: {\n    width: settingsWidth,\n    right: operationsWidth,\n    boxShadow: \"inset 0 0 16px #000000\",\n  },\n  toolbar: {\n    backgroundImage: `url(${texture})`,\n    ...theme.mixins.toolbar,\n  },\n  settingsToolbar: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  operations: {\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    width: operationsWidth,\n  },\n  operationsPaper: {\n    width: operationsWidth,\n  },\n  operationsToolbar: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  logo: {\n    flexGrow: 1,\n  },\n  applicationDrawer: {\n    flexShrink: 0,\n    width: theme.spacing(32),\n  },\n  applicationDrawerHeader: {\n    ...theme.mixins.toolbar,\n    alignItems: \"center\",\n    display: \"flex\",\n    paddingLeft: theme.spacing(3),\n  },\n  applicationDrawerPaper: {\n    zIndex: 0,\n    width: theme.spacing(32),\n  },\n}));\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  tooltip: {\n    // backgroundColor: \"#f5f5f9\",\n    border: \"1px solid #dadde9\",\n    // color: \"rgba(0, 0, 0, 0.87)\",\n    // fontSize: theme.typography.pxToRem(12),\n    marginLeft: -100,\n    width: 300,\n  },\n}));\n","import React from \"react\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Box } from \"@material-ui/core\";\nimport { useStyles } from \"./AnnotationModeTooltip.css\";\n\ntype AnnotationModeTooltipProps = {\n  children: React.ReactElement;\n  content: React.ReactElement;\n};\n\nexport const AnnotationModeTooltip = ({\n  children,\n  content,\n}: AnnotationModeTooltipProps) => {\n  const classes = useStyles();\n\n  return (\n    <Tooltip title={<Box>{content}</Box>} placement=\"bottom\">\n      {children}\n    </Tooltip>\n  );\n};\n","import React from \"react\";\nimport { AnnotationModeTooltip } from \"../AnnotationModeTooltip\";\n\ntype NewTooltipProps = {\n  children: React.ReactElement;\n};\n\nexport const NewTooltip = ({ children }: NewTooltipProps) => {\n  return (\n    <AnnotationModeTooltip content={<p>Create a new annotation.</p>}>\n      {children}\n    </AnnotationModeTooltip>\n  );\n};\n","import React from \"react\";\nimport { AnnotationModeTooltip } from \"../AnnotationModeTooltip\";\n\ntype AddTooltipProps = {\n  children: React.ReactElement;\n};\n\nexport const AddTooltip = ({ children }: AddTooltipProps) => {\n  const content = (\n    <React.Fragment>\n      <p>\n        Adding to an annotation adds any new areas you annotate to an existing\n        annotation.\n      </p>\n    </React.Fragment>\n  );\n\n  return (\n    <AnnotationModeTooltip content={content}>{children}</AnnotationModeTooltip>\n  );\n};\n","import React from \"react\";\nimport { AnnotationModeTooltip } from \"../AnnotationModeTooltip\";\n\ntype SubtractTooltipProps = {\n  children: React.ReactElement;\n};\n\nexport const SubtractTooltip = ({ children }: SubtractTooltipProps) => {\n  const content = (\n    <React.Fragment>\n      <p>\n        Subtracting an area removes the area you label from an existing\n        annotation.\n      </p>\n    </React.Fragment>\n  );\n\n  return (\n    <AnnotationModeTooltip content={content}>{children}</AnnotationModeTooltip>\n  );\n};\n","import React from \"react\";\nimport { AnnotationModeTooltip } from \"../AnnotationModeTooltip\";\n\ntype IntersectionTooltipProps = {\n  children: React.ReactElement;\n};\n\nexport const IntersectionTooltip = ({ children }: IntersectionTooltipProps) => {\n  return (\n    <AnnotationModeTooltip\n      content={\n        <p>\n          Constrain the boundary of the new annotation to the selected\n          annotation.\n        </p>\n      }\n    >\n      {children}\n    </AnnotationModeTooltip>\n  );\n};\n","import List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Radio from \"@material-ui/core/Radio\";\nimport React from \"react\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectionModeSelector } from \"../../../../../store/selectors\";\nimport { applicationSlice } from \"../../../../../store\";\nimport { AnnotationModeType } from \"../../../../../types/AnnotationModeType\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { NewTooltip } from \"../NewTooltip\";\nimport { AddTooltip } from \"../AddTooltip\";\nimport { SubtractTooltip } from \"../SubtractTooltip\";\nimport { IntersectionTooltip } from \"../IntersectionTooltip\";\nimport { RadioCheckedIcon, RadioUncheckedIcon } from \"../../../../icons\";\nimport { useTranslation } from \"../../../../../hooks/useTranslation\";\n\nexport const AnnotationMode = () => {\n  const dispatch = useDispatch();\n\n  const annotationMode = useSelector(selectionModeSelector);\n\n  const onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const payload = {\n      selectionMode: parseInt((event.target as HTMLInputElement).value),\n    };\n    dispatch(applicationSlice.actions.setSelectionMode(payload));\n  };\n\n  const onClickLabel = (event: any, mode: AnnotationModeType) => {\n    const payload = {\n      selectionMode: mode,\n    };\n    dispatch(applicationSlice.actions.setSelectionMode(payload));\n  };\n\n  const t = useTranslation();\n\n  return (\n    <RadioGroup\n      aria-label=\"annotation mode\"\n      name=\"annotation-mode\"\n      onChange={onChange}\n      value={annotationMode}\n    >\n      <List\n        component=\"nav\"\n        subheader={\n          <ListSubheader component=\"div\">{t(\"Annotation mode\")}</ListSubheader>\n        }\n      >\n        <NewTooltip>\n          <ListItem\n            button\n            dense\n            onClick={(event) => onClickLabel(event, AnnotationModeType.New)}\n          >\n            <ListItemIcon>\n              <Radio\n                disableRipple\n                edge=\"start\"\n                icon={<RadioUncheckedIcon />}\n                checkedIcon={<RadioCheckedIcon />}\n                tabIndex={-1}\n                value={AnnotationModeType.New}\n              />\n            </ListItemIcon>\n\n            <ListItemText primary={t(\"New annotation\")} />\n          </ListItem>\n        </NewTooltip>\n\n        <AddTooltip>\n          <ListItem\n            button\n            dense\n            onClick={(event) => onClickLabel(event, AnnotationModeType.Add)}\n          >\n            <ListItemIcon>\n              <Radio\n                disableRipple\n                edge=\"start\"\n                icon={<RadioUncheckedIcon />}\n                checkedIcon={<RadioCheckedIcon />}\n                tabIndex={-1}\n                value={AnnotationModeType.Add}\n              />\n            </ListItemIcon>\n\n            <ListItemText primary={t(\"Add area\")} />\n          </ListItem>\n        </AddTooltip>\n\n        <SubtractTooltip>\n          <ListItem\n            button\n            dense\n            onClick={(event) =>\n              onClickLabel(event, AnnotationModeType.Subtract)\n            }\n          >\n            <ListItemIcon>\n              <Radio\n                disableRipple\n                edge=\"start\"\n                icon={<RadioUncheckedIcon />}\n                checkedIcon={<RadioCheckedIcon />}\n                tabIndex={-1}\n                value={AnnotationModeType.Subtract}\n              />\n            </ListItemIcon>\n\n            <ListItemText primary={t(\"Subtract area\")} />\n          </ListItem>\n        </SubtractTooltip>\n\n        <IntersectionTooltip>\n          <ListItem\n            button\n            dense\n            onClick={(event) =>\n              onClickLabel(event, AnnotationModeType.Intersect)\n            }\n          >\n            <ListItemIcon>\n              <Radio\n                disableRipple\n                edge=\"start\"\n                icon={<RadioUncheckedIcon />}\n                checkedIcon={<RadioCheckedIcon />}\n                tabIndex={-1}\n                value={AnnotationModeType.Intersect}\n              />\n            </ListItemIcon>\n\n            <ListItemText primary={t(\"Intersection\")} />\n          </ListItem>\n        </IntersectionTooltip>\n      </List>\n    </RadioGroup>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n    borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n    boxShadow: \"none\",\n    position: \"absolute\",\n  },\n}));\n","import Box from \"@material-ui/core/Box\";\nimport React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { useStyles } from \"./InformationBox.css\";\n\ntype InformationBoxProps = {\n  description: string;\n  name: string;\n};\n\nexport const InformationBox = ({ description, name }: InformationBoxProps) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar className={classes.appBar} color=\"default\">\n      <Toolbar disableGutters={true}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          &nbsp;\n        </Typography>\n        <Typography style={{ marginLeft: 12 }}>{name}</Typography>\n      </Toolbar>\n    </AppBar>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Invert\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"InvertAnnotation\"\n}, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24 0 24 24 0 24\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M15,21 L4,21 C3.448,21 3,20.552 3,20 L3,9 C3,8.448 3.448,8 4,8 L15,8 C15.552,8 16,8.448 16,9 L16,20 C16,20.552 15.552,21 15,21 Z\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21,5 L21,4 C21,3.448 20.552,3 20,3 L19,3\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21,15 L21,16 C21,16.552 20.552,17 20,17 L19,17\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7,5 L7,4 C7,3.448 7.448,3 8,3 L9,3\",\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"line\", {\n  x1: 13,\n  y1: 3,\n  x2: 15,\n  y2: 3,\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  stroke: \"#BABABA\",\n  strokeWidth: 1.5,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  points: \"21 11 21 9 21 9 21 9\"\n})));\n\nfunction SvgInvertAnnotation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Invert\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInvertAnnotation);\nexport default __webpack_public_path__ + \"static/media/InvertAnnotation.ec8719eb.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { invertModeSelector } from \"../../../../store/selectors\";\nimport { applicationSlice } from \"../../../../store/slices\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport { ReactComponent as InvertSelectionIcon } from \"../../../icons/InvertAnnotation.svg\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nexport const InvertAnnotation = () => {\n  const dispatch = useDispatch();\n\n  const invertMode = useSelector(invertModeSelector);\n\n  const onInvertClick = () => {\n    dispatch(\n      applicationSlice.actions.setInvertMode({ invertMode: !invertMode })\n    );\n  };\n\n  const t = useTranslation();\n\n  return (\n    <List>\n      <ListItem button onClick={onInvertClick} dense>\n        <ListItemIcon>\n          <SvgIcon>\n            <InvertSelectionIcon />\n          </SvgIcon>\n        </ListItemIcon>\n\n        <ListItemText primary={t(\"Invert annotation\")} />\n      </ListItem>\n    </List>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const RectangularAnnotationOptions = () => {\n  const t = useTranslation();\n  return (\n    <React.Fragment>\n      <InformationBox\n        description=\"Click and drag to create a rectangular annotation.\"\n        name={t(\"Rectangular annotation\")}\n      />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <InvertAnnotation />\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\n\nexport const EllipticalAnnotationOptions = () => {\n  const t = useTranslation();\n  return (\n    <React.Fragment>\n      <InformationBox\n        description=\"Click and drag to create an elliptical annotation.\"\n        name={t(\"Elliptical annotation\")}\n      />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <InvertAnnotation />\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { penSelectionBrushSizeSelector } from \"../../../../store/selectors/penSelectionBrushSizeSelector\";\nimport { applicationSlice } from \"../../../../store\";\n\nexport const FreehandAnnotationOptions = () => {\n  const dispatch = useDispatch();\n\n  const penSelectionBrushSizeBrushSize = useSelector(\n    penSelectionBrushSizeSelector\n  );\n\n  const onChange = (event: any, changed: number | number[]) => {\n    const payload = { penSelectionBrushSize: changed as number };\n\n    dispatch(applicationSlice.actions.setPenSelectionBrushSize(payload));\n  };\n  const t = useTranslation();\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Freehand annotation\")} />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <List>\n        <ListItem dense>\n          <ListItemText\n            primary={\"Brush size\"}\n            secondary={\n              <Slider\n                aria-labelledby=\"pen-selection-brush-size\"\n                min={2}\n                onChange={onChange}\n                value={penSelectionBrushSizeBrushSize}\n              />\n            }\n          />\n        </ListItem>\n      </List>\n\n      <Divider />\n\n      <InvertAnnotation />\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const LassoAnnotationOptions = () => {\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Lasso annotation\")} />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <InvertAnnotation />\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const PolygonalAnnotationOptions = () => {\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Polygonal annotation\")} />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <InvertAnnotation />\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { SampleList } from \"../SampleList\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const MagneticAnnotationOptions = () => {\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Magnetic annotation\")} />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <InvertAnnotation />\n\n      {/*<Divider />*/}\n\n      {/*<SampleList />*/}\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { SampleList } from \"../SampleList\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const ColorAnnotationOptions = () => {\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Color annotation\")} />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <InvertAnnotation />\n\n      {/*<Divider />*/}\n\n      {/*<SampleList />*/}\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React, { useState } from \"react\";\nimport { SampleList } from \"../SampleList\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { InvertAnnotation } from \"../InvertAnnotation\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { quickSelectionBrushSizeSelector } from \"../../../../store/selectors/quickSelectionBrushSizeSelector\";\nimport { applicationSlice } from \"../../../../store/slices\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const QuickAnnotationOptions = () => {\n  const t = useTranslation();\n\n  const quickSelectionBrushSize = useSelector(quickSelectionBrushSizeSelector);\n\n  const [brushSize, setBrushSize] = useState<number>(quickSelectionBrushSize);\n\n  const dispatch = useDispatch();\n\n  const onChange = (event: any, changed: number | number[]) => {\n    setBrushSize(changed as number);\n  };\n\n  const onChangeCommitted = (event: any, changed: number | number[]) => {\n    const payload = { quickSelectionBrushSize: changed as number };\n    dispatch(applicationSlice.actions.setQuickSelectionBrushSize(payload));\n  };\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Quick annotation\")} />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      <List>\n        <ListItem dense>\n          <ListItemText\n            primary={\"Brush size\"}\n            secondary={\n              <Slider\n                aria-labelledby=\"quick-selection-brush-size\"\n                min={2}\n                onChange={onChange}\n                onChangeCommitted={onChangeCommitted}\n                value={brushSize}\n              />\n            }\n          />\n        </ListItem>\n      </List>\n\n      <Divider />\n\n      <InvertAnnotation />\n\n      {/*<Divider />*/}\n\n      {/*<SampleList />*/}\n    </React.Fragment>\n  );\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { SampleList } from \"../SampleList\";\nimport { AnnotationMode } from \"../AnnotationMode\";\nimport { InformationBox } from \"../InformationBox\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const ObjectAnnotationOptions = () => {\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Object annotation\")} />\n\n      <Divider />\n\n      <AnnotationMode />\n\n      <Divider />\n\n      {/*<Divider />*/}\n\n      {/*<SampleList />*/}\n    </React.Fragment>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const offsetSelector = ({ state }: { state: HistoryStateType }) => {\n  return state.present.offset;\n};\n","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { applicationSlice } from \"../../../../store/slices\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const ResetButton = () => {\n  const dispatch = useDispatch();\n  const t = useTranslation();\n\n  const onResetClick = () => {\n    dispatch(\n      applicationSlice.actions.setStagePosition({\n        stagePosition: { x: 0, y: 0 },\n      })\n    );\n  };\n  return (\n    <ListItem button onClick={onResetClick}>\n      <ListItemText>{t(\"Reset position\")}</ListItemText>\n    </ListItem>\n  );\n};\n","import Radio from \"@material-ui/core/Radio\";\nimport React from \"react\";\nimport { RadioGroup } from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ZoomModeType } from \"../../../../types/ZoomModeType\";\nimport {\n  setOffset,\n  setStageScale,\n  setZoomToolOptions,\n} from \"../../../../store\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {\n  imageSelector,\n  stageHeightSelector,\n  stageScaleSelector,\n  stageWidthSelector,\n  zoomToolOptionsSelector,\n} from \"../../../../store/selectors\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport {\n  CheckboxCheckedIcon,\n  CheckboxUncheckedIcon,\n  RadioCheckedIcon,\n  RadioUncheckedIcon,\n} from \"../../../icons\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { InformationBox } from \"../InformationBox\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ZoomInIcon from \"@material-ui/icons/ZoomIn\";\nimport ZoomOutIcon from \"@material-ui/icons/ZoomOut\";\nimport { offsetSelector } from \"../../../../store/selectors/offsetSelector\";\nimport { ResetButton } from \"../HandToolOptions/ResetButton\";\n\nexport const ZoomOptions = () => {\n  const dispatch = useDispatch();\n\n  const options = useSelector(zoomToolOptionsSelector);\n\n  const stageWidth = useSelector(stageWidthSelector);\n  const stageHeight = useSelector(stageHeightSelector);\n\n  const t = useTranslation();\n\n  const scale = useSelector(stageScaleSelector);\n  const image = useSelector(imageSelector);\n  const offset = useSelector(offsetSelector);\n\n  const onAutomaticCenteringChange = () => {\n    const payload = {\n      options: {\n        ...options,\n        automaticCentering: !options.automaticCentering,\n      },\n    };\n\n    dispatch(setZoomToolOptions(payload));\n\n    const centerOffset = {\n      x:\n        offset.x !== 0\n          ? 0\n          : ((image && image.shape ? image.shape.width : 512) * scale) / 2 -\n            offset.x,\n      y:\n        offset.y !== 0\n          ? 0\n          : ((image && image.shape ? image.shape.height : 512) * scale) / 2 -\n            offset.y,\n    }; //FIXME hardcoded heights and widths before merging with master branch!;\n\n    dispatch(setOffset({ offset: centerOffset }));\n  };\n\n  const onToActualSizeClick = () => {\n    const payload = {\n      options: {\n        ...options,\n        automaticCentering: true,\n        toActualSize: !options.toActualSize,\n      },\n    };\n\n    dispatch(setZoomToolOptions(payload));\n    dispatch(setStageScale({ stageScale: 1 }));\n    dispatch(setOffset({ offset: { x: 0, y: 0 } }));\n  };\n\n  const onToFullSizeClick = () => {\n    const payload = {\n      options: {\n        ...options,\n        automaticCentering: true,\n        toFit: !options.toFit,\n      },\n    };\n\n    if (!image || !image.shape) return;\n\n    dispatch(setZoomToolOptions(payload));\n\n    //FIXME it seems like we are not currently getting the current stageHeight. It currently stays fixes to the initial state in the redux store.\n    const imageWidth = image && image.shape ? image.shape.width : 512;\n    const imageHeight = image && image.shape ? image.shape.height : 512;\n    if (imageHeight / stageHeight > imageWidth / stageWidth) {\n      dispatch(\n        setStageScale({\n          stageScale: stageHeight / imageHeight,\n        })\n      );\n    } else {\n      dispatch(\n        setStageScale({\n          stageScale: stageWidth / imageWidth,\n        })\n      );\n    }\n    dispatch(setOffset({ offset: { x: 0, y: 0 } }));\n  };\n\n  const onToFitClick = () => {\n    const payload = {\n      options: {\n        ...options,\n        automaticCentering: true,\n        toFit: !options.toFit,\n      },\n    };\n\n    if (!image || !image.shape) return;\n\n    dispatch(setZoomToolOptions(payload));\n\n    //FIXME it seems like we are not currently getting the current stageHeight. It currently stays fixes to the initial state in the redux store.\n    const imageWidth = image && image.shape ? image.shape.width : 512;\n    const imageHeight = image && image.shape ? image.shape.height : 512;\n    if (imageHeight / stageHeight > imageWidth / stageWidth) {\n      dispatch(\n        setStageScale({\n          stageScale: (0.95 * stageHeight) / imageHeight,\n        })\n      );\n    } else {\n      dispatch(\n        setStageScale({\n          stageScale: (0.95 * stageWidth) / imageWidth,\n        })\n      );\n    }\n\n    dispatch(setOffset({ offset: { x: 0, y: 0 } }));\n  };\n\n  const onModeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt((event.target as HTMLInputElement).value);\n\n    const payload = {\n      options: {\n        ...options,\n        mode: value as ZoomModeType,\n      },\n    };\n\n    dispatch(setZoomToolOptions(payload));\n  };\n\n  const onModeClick = (event: any, mode: ZoomModeType) => {\n    const payload = {\n      options: {\n        ...options,\n        mode: mode,\n      },\n    };\n\n    dispatch(setZoomToolOptions(payload));\n  };\n\n  const marks = [\n    {\n      value: 0.000625,\n      label: \"-1600%\",\n    },\n    {\n      value: 0.00125,\n      label: \"-800%\",\n    },\n    {\n      value: 0.0025,\n      label: \"-400%\",\n    },\n    {\n      value: 0.005,\n      label: \"-200%\",\n    },\n    {\n      value: 0.05,\n      label: \"-150%\",\n    },\n    {\n      value: 0.25,\n      label: \"-100%\",\n    },\n    {\n      value: 0.5,\n      label: \"50%\",\n    },\n    {\n      value: 1,\n      label: \"100%\",\n    },\n    {\n      value: 1.5,\n      label: \"150%\",\n    },\n    {\n      value: 2,\n      label: \"200%\",\n    },\n    {\n      value: 4,\n      label: \"400%\",\n    },\n    {\n      value: 8,\n      label: \"800%\",\n    },\n    {\n      value: 16,\n      label: \"1600%\",\n    },\n  ];\n\n  const valueLabelFormat = (value: number) => {\n    if (value < 0 || value >= marks.length) return;\n\n    return marks[value].label;\n  };\n\n  const onSliderChange = (value: number) => {\n    dispatch(setStageScale({ stageScale: value }));\n  };\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Zoom\")} />\n\n      <Divider />\n\n      <List\n        component=\"nav\"\n        subheader={\n          <ListSubheader component=\"div\">{t(\"Zoom scale\")}</ListSubheader>\n        }\n      >\n        <ListItem>\n          <Grid container spacing={2}>\n            <Grid item>\n              <ZoomOutIcon />\n            </Grid>\n            <Grid item xs>\n              <Slider\n                defaultValue={1}\n                onChange={(event: any, value: number | number[]) =>\n                  onSliderChange(value as number)\n                }\n                valueLabelDisplay=\"auto\"\n                value={scale}\n                min={0.01}\n                max={10}\n                step={0.01}\n              />\n            </Grid>\n            <Grid item>\n              <ZoomInIcon />\n            </Grid>\n          </Grid>\n        </ListItem>\n      </List>\n\n      <Divider />\n\n      <List dense>\n        <RadioGroup\n          defaultValue={ZoomModeType.In}\n          aria-label=\"annotation mode\"\n          name=\"annotation-mode\"\n          onChange={onModeChange}\n          value={options.mode}\n        >\n          <List\n            component=\"nav\"\n            subheader={\n              <ListSubheader component=\"div\">{t(\"Zoom mode\")}</ListSubheader>\n            }\n          >\n            <ListItem\n              button\n              dense\n              onClick={(event) => onModeClick(event, ZoomModeType.In)}\n            >\n              <ListItemIcon>\n                <Radio\n                  disableRipple\n                  edge=\"start\"\n                  icon={<RadioUncheckedIcon />}\n                  checkedIcon={<RadioCheckedIcon />}\n                  tabIndex={-1}\n                  value={ZoomModeType.In}\n                />\n              </ListItemIcon>\n\n              <ListItemText primary={t(\"Zoom in\")} />\n            </ListItem>\n\n            <ListItem\n              button\n              dense\n              onClick={(event) => onModeClick(event, ZoomModeType.Out)}\n            >\n              <ListItemIcon>\n                <Radio\n                  disableRipple\n                  edge=\"start\"\n                  icon={<RadioUncheckedIcon />}\n                  checkedIcon={<RadioCheckedIcon />}\n                  tabIndex={-1}\n                  value={ZoomModeType.Out}\n                />\n              </ListItemIcon>\n\n              <ListItemText primary={t(\"Zoom out\")} />\n            </ListItem>\n          </List>\n        </RadioGroup>\n      </List>\n\n      <Divider />\n\n      <ListItem button dense onClick={onAutomaticCenteringChange}>\n        <ListItemIcon>\n          <Checkbox\n            checked={options.automaticCentering}\n            disableRipple\n            edge=\"start\"\n            icon={<CheckboxUncheckedIcon />}\n            checkedIcon={<CheckboxCheckedIcon />}\n            tabIndex={-1}\n          />\n        </ListItemIcon>\n\n        <ListItemText primary={t(\"Automatically zoom towards the center\")} />\n      </ListItem>\n\n      <Divider />\n\n      <List dense>\n        <ListItem button onClick={onToActualSizeClick}>\n          <ListItemText>{t(\"Actual size\")}</ListItemText>\n        </ListItem>\n\n        <ListItem button onClick={onToFullSizeClick}>\n          <ListItemText>{t(\"Full size\")}</ListItemText>\n        </ListItem>\n\n        <ListItem button onClick={onToFitClick}>\n          <ListItemText>{t(\"Fit to canvas\")}</ListItemText>\n        </ListItem>\n\n        <ResetButton />\n      </List>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { InformationBox } from \"../InformationBox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useDispatch } from \"react-redux\";\nimport { applicationSlice } from \"../../../../store/slices\";\nimport { ResetButton } from \"./ResetButton\";\n\nexport const HandToolOptions = () => {\n  const t = useTranslation();\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Hand tool\")} />\n\n      <Divider />\n\n      <List dense>\n        <ResetButton />\n      </List>\n    </React.Fragment>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ChannelType } from \"../../types/ChannelType\";\n\nexport const channelsSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): Array<ChannelType> => {\n  return state.present.channels;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imageShapeSelector = ({ state }: { state: HistoryStateType }) => {\n  if (!state.present.images.length) return;\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return;\n\n  return image.shape;\n};\n","import List from \"@material-ui/core/List\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport { ListItem } from \"@material-ui/core\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport React, { useCallback } from \"react\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { CheckboxCheckedIcon, CheckboxUncheckedIcon } from \"../../../../icons\";\nimport { applicationSlice } from \"../../../../../store/slices\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { channelsSelector } from \"../../../../../store/selectors/intensityRangeSelector\";\nimport { ChannelType } from \"../../../../../types/ChannelType\";\nimport { debounce } from \"lodash\";\nimport { imageShapeSelector } from \"../../../../../store/selectors/imageShapeSelector\";\nimport { CollapsibleList } from \"../../../CategoriesList/CollapsibleList\";\n\ntype ColorAdjustmentSlidersProp = {\n  updateDisplayedValues: (values: Array<Array<number>>) => void;\n  displayedValues: Array<Array<number>>;\n};\n\nexport const ChannelsList = ({\n  displayedValues,\n  updateDisplayedValues,\n}: ColorAdjustmentSlidersProp) => {\n  const [open, setOpen] = React.useState(true);\n\n  const onClick = () => {\n    setOpen(!open);\n  };\n\n  const dispatch = useDispatch();\n\n  const channels = useSelector(channelsSelector);\n\n  const imageShape = useSelector(imageShapeSelector);\n\n  const visibleChannelsIndices = channels\n    .map((channel: ChannelType, idx) => channel.visible)\n    .reduce((c: Array<number>, v, i) => (v ? c.concat(i) : c), []);\n\n  const handleSliderChange = (\n    idx: number,\n    event: any,\n    newValue: number | number[]\n  ) => {\n    const copiedValues = [...displayedValues].map((range: Array<number>) => {\n      return [...range];\n    });\n    copiedValues[idx] = newValue as Array<number>;\n    updateDisplayedValues(copiedValues);\n    handler(copiedValues);\n  };\n\n  const updateIntensityRanges = (values: Array<Array<number>>) => {\n    const copiedValues = [...values].map((range: Array<number>) => {\n      return [...range];\n    });\n\n    const updatedChannels = channels.map(\n      (channel: ChannelType, index: number) => {\n        return { ...channel, range: copiedValues[index] };\n      }\n    );\n    dispatch(\n      applicationSlice.actions.setChannels({\n        channels: updatedChannels,\n      })\n    );\n  };\n\n  const handler = useCallback(debounce(updateIntensityRanges, 100), [channels]);\n\n  const onCheckboxChanged = (index: number) => () => {\n    const current = visibleChannelsIndices.indexOf(index);\n\n    const updated = [...visibleChannelsIndices];\n\n    const copiedChannels = [...channels];\n\n    if (current === -1) {\n      updated.push(index);\n      copiedChannels[index] = { ...copiedChannels[index], visible: true };\n    } else {\n      updated.splice(current, 1);\n      copiedChannels[index] = { ...copiedChannels[index], visible: false };\n    }\n    dispatch(\n      applicationSlice.actions.setChannels({\n        channels: copiedChannels,\n      })\n    );\n  };\n\n  const colorAdjustmentSlider = (\n    index: number,\n    name: string,\n    displayedValue: Array<number>\n  ) => {\n    return (\n      <ListItem dense key={index}>\n        <ListItemIcon>\n          <Checkbox\n            onClick={onCheckboxChanged(index)}\n            checked={visibleChannelsIndices.indexOf(index) !== -1}\n            disableRipple\n            edge=\"start\"\n            icon={<CheckboxUncheckedIcon />}\n            checkedIcon={<CheckboxCheckedIcon />}\n            tabIndex={-1}\n          />\n        </ListItemIcon>\n        <ListItemText primary={name} />\n        <Slider\n          key={index}\n          disabled={!(visibleChannelsIndices.indexOf(index) !== -1)} //TODO style slider when disabled mode\n          style={{ width: \"60%\" }}\n          value={displayedValue}\n          max={255}\n          onChange={(event, value: number | number[]) =>\n            handleSliderChange(index, event, value)\n          }\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"range-slider\"\n        />\n      </ListItem>\n    );\n  };\n\n  const allSliders = (displayedValues: Array<Array<number>>) => {\n    if (!imageShape) return;\n    const sliders = [];\n\n    const names =\n      imageShape.channels === 1 ? [\"Grey\"] : [\"Red\", \"Green\", \"Blue\"];\n    for (let i = 0; i < imageShape.channels; i++) {\n      sliders.push(colorAdjustmentSlider(i, names[i], displayedValues[i]));\n    }\n    return sliders;\n  };\n\n  return (\n    <CollapsibleList closed dense primary=\"Channels\">\n      {allSliders(displayedValues)}\n    </CollapsibleList>\n  );\n};\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport { InformationBox } from \"../../InformationBox\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { useTranslation } from \"../../../../../hooks/useTranslation\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { applicationSlice } from \"../../../../../store\";\nimport { imageOriginalSrcSelector } from \"../../../../../store/selectors\";\nimport { ChannelsList } from \"../ChannelsList\";\nimport { channelsSelector } from \"../../../../../store/selectors/intensityRangeSelector\";\nimport { ChannelType } from \"../../../../../types/ChannelType\";\nimport { imageShapeSelector } from \"../../../../../store/selectors/imageShapeSelector\";\nimport { CollapsibleList } from \"../../../CategoriesList/CollapsibleList\";\nimport Slider from \"@material-ui/core/Slider\";\n\nconst LightnessListItem = ({ name }: { name: string }) => {\n  const t = useTranslation();\n\n  return (\n    <ListItem alignItems=\"flex-start\" dense>\n      <ListItemText\n        primary={t(name)}\n        secondary={\n          <Slider\n            defaultValue={0}\n            valueLabelDisplay=\"auto\"\n            step={1}\n            marks\n            min={-200}\n            max={200}\n          />\n        }\n      />\n    </ListItem>\n  );\n};\n\nconst LightnessList = () => {\n  const t = useTranslation();\n\n  return (\n    <CollapsibleList closed dense primary={t(\"Lightness\")}>\n      <LightnessListItem name=\"Exposure\" />\n      <LightnessListItem name=\"Highlights\" />\n      <LightnessListItem name=\"Shadows\" />\n      <LightnessListItem name=\"Brightness\" />\n      <LightnessListItem name=\"Contrast\" />\n      <LightnessListItem name=\"Black Point\" />\n    </CollapsibleList>\n  );\n};\n\nconst HueAndSaturationListItem = ({ name }: { name: string }) => {\n  const t = useTranslation();\n\n  return (\n    <ListItem alignItems=\"flex-start\" dense>\n      <ListItemText\n        primary={t(name)}\n        secondary={\n          <Slider\n            defaultValue={0}\n            valueLabelDisplay=\"auto\"\n            step={1}\n            marks\n            min={-200}\n            max={200}\n          />\n        }\n      />\n    </ListItem>\n  );\n};\n\nconst HueAndSaturationList = () => {\n  const t = useTranslation();\n\n  return (\n    <CollapsibleList closed dense primary={t(\"Hue & Saturation\")}>\n      <HueAndSaturationListItem name=\"Hue\" />\n      <HueAndSaturationListItem name=\"Saturation\" />\n      <HueAndSaturationListItem name=\"Vibrance\" />\n    </CollapsibleList>\n  );\n};\n\nexport function createIntensityFilter(channels: ChannelType[]) {\n  return function (imageData: { data: any }) {\n    let data = imageData.data;\n    const scaleIntensity = (channel: ChannelType, pixel: number) => {\n      if (!channel.visible) return 0;\n      if (pixel < channel.range[0]) return 0;\n      if (pixel >= channel.range[1]) return 255;\n      return (\n        255 *\n        ((pixel - channel.range[0]) / (channel.range[1] - channel.range[0]))\n      );\n    };\n\n    for (let i = 0; i < data.length; i += 4) {\n      // red\n      data[i] = scaleIntensity(channels[0], data[i]);\n      // green\n      data[i + 1] = scaleIntensity(channels[1], data[i + 1]);\n      // blue\n      data[i + 2] = scaleIntensity(channels[2], data[i + 2]);\n    }\n    return data;\n  };\n}\n\nexport const ColorAdjustmentOptions = () => {\n  const t = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const originalSrc = useSelector(imageOriginalSrcSelector);\n\n  const imageShape = useSelector(imageShapeSelector);\n\n  const channels = useSelector(channelsSelector);\n\n  const [displayedValues, setDisplayedValues] = useState<Array<Array<number>>>(\n    channels.map((channel: ChannelType) => [...channel.range])\n  ); //we keep that state variable here and pass it to slider so that visible slider ranges can change accordingly\n\n  const generateDefaultChannels = (components: number) => {\n    const defaultChannels: Array<ChannelType> = []; //number of channels depends on whether image is greyscale or RGB\n    for (let i = 0; i < components; i++) {\n      defaultChannels.push({\n        range: [0, 255],\n        visible: true,\n      });\n    }\n    return defaultChannels;\n  };\n\n  useEffect(() => {\n    if (!originalSrc) return;\n\n    if (!imageShape) return;\n\n    setDisplayedValues(\n      channels.map((channel: ChannelType) => [...channel.range])\n    );\n  }, [originalSrc]);\n\n  const onResetChannelsClick = () => {\n    if (!imageShape) return;\n    const defaultChannels = generateDefaultChannels(imageShape.channels);\n    dispatch(\n      applicationSlice.actions.setChannels({\n        channels: defaultChannels,\n      })\n    );\n    setDisplayedValues(\n      defaultChannels.map((channel: ChannelType) => [...channel.range])\n    );\n  };\n\n  const updateDisplayedValues = (values: Array<Array<number>>) => {\n    setDisplayedValues(values);\n  };\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Color adjustment\")} />\n\n      <Divider />\n\n      <ChannelsList\n        displayedValues={displayedValues}\n        updateDisplayedValues={updateDisplayedValues}\n      />\n\n      <Divider />\n\n      <List dense>\n        <ListItem button onClick={onResetChannelsClick}>\n          <ListItemText>{t(\"Reset\")}</ListItemText>\n        </ListItem>\n      </List>\n    </React.Fragment>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { AnnotationType } from \"../../types/AnnotationType\";\n\nexport const selectedAnnotationsSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): Array<AnnotationType> => {\n  return state.present.selectedAnnotations;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { AnnotationType } from \"../../types/AnnotationType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const unselectedAnnotationsSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): Array<AnnotationType> => {\n  if (!state.present.images.length) return [];\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return [];\n\n  const ids = state.present.selectedAnnotations.map(\n    (annotation: AnnotationType) => {\n      return annotation.id;\n    }\n  );\n\n  return image.annotations.filter((annotation: AnnotationType) => {\n    return !ids.includes(annotation.id);\n  });\n};\n","import Divider from \"@material-ui/core/Divider\";\nimport React from \"react\";\nimport { InformationBox } from \"../InformationBox\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport { ReactComponent as InvertSelectionIcon } from \"../../../icons/InvertAnnotation.svg\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { applicationSlice } from \"../../../../store\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectedAnnotationsSelector } from \"../../../../store/selectors/selectedAnnotationsSelector\";\nimport { unselectedAnnotationsSelector } from \"../../../../store/selectors/unselectedAnnotationsSelector\";\nimport { CategoryType } from \"../../../../types/CategoryType\";\nimport { CollapsibleList } from \"../../CategoriesList/CollapsibleList\";\nimport { categoriesSelector } from \"../../../../store/selectors\";\nimport LabelIcon from \"@material-ui/icons/Label\";\n\nexport const PointerSelectionOptions = () => {\n  const t = useTranslation();\n\n  const dispatch = useDispatch();\n\n  const selectedAnnotations = useSelector(selectedAnnotationsSelector);\n  const unselectedAnnotations = useSelector(unselectedAnnotationsSelector);\n  const categories = useSelector(categoriesSelector);\n\n  const onSelectAll = () => {\n    const allAnnotations = [...selectedAnnotations, ...unselectedAnnotations];\n    dispatch(\n      applicationSlice.actions.setSelectedAnnotations({\n        selectedAnnotations: allAnnotations,\n        selectedAnnotation: allAnnotations[0],\n      })\n    );\n  };\n\n  const onSelectNone = () => {\n    dispatch(\n      applicationSlice.actions.setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n  };\n\n  const onSelectCategory = (\n    event:\n      | React.MouseEvent<HTMLLIElement>\n      | React.MouseEvent<HTMLAnchorElement>\n      | React.MouseEvent<HTMLDivElement>,\n    category: CategoryType\n  ) => {\n    const allAnnotations = [...selectedAnnotations, ...unselectedAnnotations];\n    const desiredAnnotations = allAnnotations.filter((annotation) => {\n      return annotation.categoryId === category.id;\n    });\n    dispatch(\n      applicationSlice.actions.setSelectedAnnotations({\n        selectedAnnotations: desiredAnnotations,\n        selectedAnnotation: desiredAnnotations[0],\n      })\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <InformationBox description=\"…\" name={t(\"Select annotations\")} />\n\n      <Divider />\n\n      <List>\n        <ListItem button onClick={onSelectAll} dense>\n          <ListItemIcon>\n            <SvgIcon>\n              <InvertSelectionIcon />\n            </SvgIcon>\n          </ListItemIcon>\n\n          <ListItemText primary={t(\"Select all\")} />\n        </ListItem>\n        <ListItem button onClick={onSelectNone} dense>\n          <ListItemIcon>\n            <SvgIcon>\n              <InvertSelectionIcon />\n            </SvgIcon>\n          </ListItemIcon>\n\n          <ListItemText primary={t(\"Select none\")} />\n        </ListItem>\n      </List>\n\n      <Divider />\n      <CollapsibleList closed dense primary={t(\"Select Category\")}>\n        {categories.map((category: CategoryType) => {\n          return (\n            <ListItem\n              button\n              id={category.id}\n              onClick={(event) => onSelectCategory(event, category)}\n            >\n              <ListItemIcon>\n                <LabelIcon style={{ color: category.color }} />\n              </ListItemIcon>\n              <ListItemText primary={category.name} />\n            </ListItem>\n          );\n        })}\n      </CollapsibleList>\n    </React.Fragment>\n  );\n};\n","import Drawer from \"@material-ui/core/Drawer\";\nimport React from \"react\";\nimport { useStyles } from \"./ToolOptions.css\";\nimport {\n  ColorAdjustmentIcon,\n  ColorSelectionIcon,\n  EllipticalSelectionIcon,\n  HandIcon,\n  LassoSelectionIcon,\n  MagneticSelectionIcon,\n  ObjectSelectionIcon,\n  PenSelectionIcon,\n  PolygonalSelectionIcon,\n  QuickSelectionIcon,\n  RectangularSelectionIcon,\n  ZoomIcon,\n} from \"../../../icons\";\nimport { ToolType } from \"../../../../types/ToolType\";\nimport { RectangularAnnotationOptions } from \"../RectangularAnnotationOptions\";\nimport { EllipticalAnnotationOptions } from \"../EllipticalAnnotationOptions\";\nimport { FreehandAnnotationOptions } from \"../FreehandAnnotationOptions\";\nimport { LassoAnnotationOptions } from \"../LassoAnnotationOptions\";\nimport { PolygonalAnnotationOptions } from \"../PolygonalAnnotationOptions\";\nimport { MagneticAnnotationOptions } from \"../MagneticAnnotationOptions\";\nimport { ColorAnnotationOptions } from \"../ColorAnnotationOptions\";\nimport { QuickAnnotationOptions } from \"../QuickAnnotationOptions\";\nimport { ObjectAnnotationOptions } from \"../ObjectAnnotationOptions\";\nimport { ZoomOptions } from \"../ZoomOptions\";\nimport { useSelector } from \"react-redux\";\nimport { toolTypeSelector } from \"../../../../store/selectors\";\nimport { useTranslation } from \"react-i18next\";\nimport { HandToolOptions } from \"../HandToolOptions/HandToolOptions\";\nimport Box from \"@material-ui/core/Box\";\nimport { ColorAdjustmentOptions } from \"../ColorAdjustmentOptions/ColorAdjustmentOptions/ColorAdjustmentOptions\";\nimport { PointerSelectionOptions } from \"../PointerSelectionOptions\";\n\nexport const ToolOptions = () => {\n  const classes = useStyles();\n\n  const { t } = useTranslation();\n\n  const activeOperation = useSelector(toolTypeSelector);\n\n  const operations = [\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <ColorAdjustmentIcon />,\n      method: ToolType.ColorAdjustment,\n      name: t(\"Color adjustment\"),\n      options: <ColorAdjustmentOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <RectangularSelectionIcon />,\n      method: ToolType.RectangularAnnotation,\n      name: \"Rectangular selection\",\n      options: <RectangularAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <EllipticalSelectionIcon />,\n      method: ToolType.EllipticalAnnotation,\n      name: \"Elliptical selection\",\n      options: <EllipticalAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <PenSelectionIcon />,\n      method: ToolType.PenAnnotation,\n      name: \"Pen selection\",\n      options: <FreehandAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <LassoSelectionIcon />,\n      method: ToolType.LassoAnnotation,\n      name: \"Lasso selection\",\n      options: <LassoAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <PolygonalSelectionIcon />,\n      method: ToolType.PolygonalAnnotation,\n      name: \"Polygonal selection\",\n      options: <PolygonalAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <MagneticSelectionIcon />,\n      method: ToolType.MagneticAnnotation,\n      name: \"Magnetic selection\",\n      options: <MagneticAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <ColorSelectionIcon />,\n      method: ToolType.ColorAnnotation,\n      name: \"Color selection\",\n      options: <ColorAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <QuickSelectionIcon />,\n      method: ToolType.QuickAnnotation,\n      name: \"Quick selection\",\n      options: <QuickAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <ObjectSelectionIcon />,\n      method: ToolType.ObjectAnnotation,\n      name: \"Object selection\",\n      options: <ObjectAnnotationOptions />,\n    },\n    {\n      description: \"Nam a facilisis velit, sit amet interdum ante. In sodales.\",\n      icon: <HandIcon />,\n      method: ToolType.Hand,\n      name: \"Hand\",\n      options: <HandToolOptions />,\n    },\n    {\n      description: \"Description of zoom here.\",\n      icon: <ZoomIcon />,\n      method: ToolType.Zoom,\n      name: \"Zoom\",\n      options: <ZoomOptions />,\n    },\n    {\n      description: \"Description of pointer here.\",\n      icon: <ObjectSelectionIcon />,\n      method: ToolType.Pointer,\n      name: \"Pointer\",\n      options: <PointerSelectionOptions />,\n    },\n  ];\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      className={classes.options}\n      classes={{ paper: classes.settingsPaper }}\n      variant=\"permanent\"\n    >\n      <Box\n        style={{ paddingTop: 60 }}\n        className={classes.toolbar}\n        display=\"flex\"\n        justifyContent=\"flex-end\"\n        px={8}\n      />\n\n      {\n        operations[\n          operations.findIndex(\n            (operation) => operation.method === activeOperation\n          )\n        ].options\n      }\n    </Drawer>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst operationsWidth = 56;\n\nexport const useStyles = makeStyles((theme) => ({\n  card: {\n    width: 210,\n  },\n  cardContent: {\n    width: \"200px\",\n  },\n  cardHeader: {\n    position: \"absolute\",\n    width: \"100%\",\n  },\n  cardMedia: {\n    height: 230,\n  },\n  drawer: {\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    width: operationsWidth,\n  },\n  paper: {\n    width: operationsWidth,\n  },\n  toolbar: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  tooltip: {\n    backgroundColor: \"transparent\",\n    maxWidth: \"none\",\n  },\n}));\n","import Typography from \"@material-ui/core/Typography\";\nimport React from \"react\";\nimport { KeyboardKey } from \"../../Help/HelpDialog/KeyboardKey\";\nimport { useStyles } from \"../../Help/HelpDialog/HelpDialog.css\";\n\ntype ToolTitleProps = {\n  toolName: string;\n  letter: string;\n};\nexport const ToolBarToolTitle = ({ toolName, letter }: ToolTitleProps) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.title}>\n      <Typography>{toolName}</Typography>\n      <Typography style={{ marginLeft: \"5px\" }}>(</Typography>\n      <KeyboardKey letter=\"shift\" />\n      <Typography>+</Typography>\n      <KeyboardKey letter={letter} />\n      <Typography>)</Typography>\n    </div>\n  );\n};\n","import ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport React, { ReactElement, useState } from \"react\";\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {\n  Button,\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardHeader,\n  IconButton,\n} from \"@material-ui/core\";\nimport { useStyles } from \"./Tool.css\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport { Tooltip } from \"@material-ui/core\";\nimport { HelpWindowToolTitle } from \"../../Help/HelpDialog/HelpWindowToolTitle\";\nimport { ToolBarToolTitle } from \"./ToolBarToolTitle\";\n\ntype TooltipCardProps = {\n  name: string;\n  onClose: () => void;\n};\n\ntype ToolProps = {\n  children: React.ReactNode;\n  name: string;\n  onClick: () => void;\n  selected: boolean;\n};\n\nexport const TooltipCard = ({ name, onClose }: TooltipCardProps) => {\n  const classes = useStyles();\n\n  let description: string | ReactElement;\n\n  switch (name) {\n    case \"Pointer\":\n      description = (\n        <ToolBarToolTitle toolName={\"Select annotations\"} letter={\"S\"} />\n      );\n      break;\n    case \"Rectangular annotation\":\n      description = (\n        <ToolBarToolTitle toolName={\"Rectangular annotation\"} letter={\"R\"} />\n      );\n      break;\n    case \"Elliptical annotation\":\n      description = (\n        <ToolBarToolTitle toolName={\"Elliptical annotation\"} letter={\"E\"} />\n      );\n      break;\n    case \"Freehand annotation\":\n      description = (\n        <ToolBarToolTitle toolName={\"Pen annotation\"} letter={\"D\"} />\n      );\n      break;\n    case \"Lasso annotation (L)\":\n      description = (\n        <ToolBarToolTitle toolName={\"Lasso annotation\"} letter={\"L\"} />\n      );\n      break;\n    case \"Polygonal annotation\":\n      description = (\n        <ToolBarToolTitle toolName={\"Polygonal annotation\"} letter={\"P\"} />\n      );\n      break;\n    case \"Magnetic annotation\":\n      description = (\n        <ToolBarToolTitle toolName={\"Magnetic annotation\"} letter={\"M\"} />\n      );\n      break;\n    case \"Color annotation\":\n      description = (\n        <ToolBarToolTitle toolName={\"Color annotation\"} letter={\"C\"} />\n      );\n      break;\n    case \"Quick annotation\":\n      description = (\n        <ToolBarToolTitle toolName={\"Quick annotation\"} letter={\"Q\"} />\n      );\n      break;\n    case \"Object annotation\":\n      description =\n        \"Select a rectangular annotation around a desired object to automatically generate its boundaries.\";\n      break;\n    case \"Hand\":\n      description = <ToolBarToolTitle toolName={\"Hand tool\"} letter={\"H\"} />;\n      break;\n    case \"Zoom\":\n      description = <ToolBarToolTitle toolName={\"Zoom tool\"} letter={\"Z\"} />;\n      break;\n    case \"Color Adjustment\":\n      description = (\n        <ToolBarToolTitle toolName={\"Intensity adjustment\"} letter={\"I\"} />\n      );\n      break;\n    default:\n      description = \"\";\n  }\n\n  return (\n    <Card className={classes.card} raised variant=\"outlined\">\n      <CardActionArea>\n        <div>\n          {/*<CardHeader*/}\n          {/*  action={*/}\n          {/*    <IconButton onClick={onClose}>*/}\n          {/*      <CancelIcon />*/}\n          {/*    </IconButton>*/}\n          {/*  }*/}\n          {/*  className={classes.cardHeader}*/}\n          {/*/>*/}\n\n          {/*<CardMedia className={classes.cardMedia} image={image} />*/}\n        </div>\n\n        <CardContent>\n          {/*<Typography gutterBottom variant=\"h6\" component=\"h2\">*/}\n          {/*  {name}*/}\n          {/*</Typography>*/}\n\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n\n      {/*<CardActions>*/}\n      {/*  <Button size=\"small\" color=\"primary\">*/}\n      {/*    Learn More*/}\n      {/*  </Button>*/}\n      {/*</CardActions>*/}\n    </Card>\n  );\n};\n\nexport const Tool = ({ children, name, onClick, selected }: ToolProps) => {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const onOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <Tooltip\n      classes={{ tooltip: classes.tooltip }}\n      onClose={onClose}\n      onOpen={onOpen}\n      open={open}\n      placement=\"left\"\n      title={<TooltipCard name={name} onClose={onClose} />}\n      // title={\"test\"}\n    >\n      <ListItem button onClick={onClick} selected={selected}>\n        <ListItemIcon>\n          <SvgIcon fontSize=\"small\">{children}</SvgIcon>\n        </ListItemIcon>\n      </ListItem>\n    </Tooltip>\n    // <ListItem button onClick={onClick} selected={selected}>\n    //   <ListItemIcon>\n    //     <SvgIcon fontSize=\"small\">{children}</SvgIcon>\n    //   </ListItemIcon>\n    // </ListItem>\n  );\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst operationsWidth = 56;\n\nexport const useStyles = makeStyles((theme) => ({\n  drawer: {\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    width: operationsWidth,\n  },\n  paper: {\n    width: operationsWidth,\n  },\n  toolbar: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  child: {\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n  },\n}));\n","import Drawer from \"@material-ui/core/Drawer\";\nimport React from \"react\";\nimport { ToolType as OperationType } from \"../../../../types/ToolType\";\nimport { Tool } from \"../Tool\";\nimport { useStyles } from \"./Tools.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toolTypeSelector } from \"../../../../store/selectors\";\nimport { applicationSlice } from \"../../../../store\";\nimport {\n  ColorAdjustmentIcon,\n  ColorSelectionIcon,\n  EllipticalSelectionIcon,\n  HandIcon,\n  LassoSelectionIcon,\n  MagneticSelectionIcon,\n  PenSelectionIcon,\n  PolygonalSelectionIcon,\n  QuickSelectionIcon,\n  RectangularSelectionIcon,\n  SelectionIcon,\n  ZoomIcon,\n} from \"../../../icons\";\nimport { useTranslation } from \"../../../../hooks/useTranslation\";\n\nexport const Tools = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n\n  const activeOperation = useSelector(toolTypeSelector);\n\n  const t = useTranslation();\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      className={classes.drawer}\n      classes={{ paper: classes.paper }}\n      variant=\"permanent\"\n    >\n      <br />\n      <Tool\n        name={t(\"Hand\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.Hand,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.Hand}\n      >\n        <HandIcon />\n      </Tool>\n\n      <Tool\n        name={t(\"Zoom\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.Zoom,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.Zoom}\n      >\n        <ZoomIcon />\n      </Tool>\n\n      <Tool\n        name={t(\"Color Adjustment\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.ColorAdjustment,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.ColorAdjustment}\n      >\n        <ColorAdjustmentIcon />\n      </Tool>\n\n      <br />\n\n      <Tool\n        name={t(\"Pointer\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.Pointer,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.Pointer}\n      >\n        <SelectionIcon />\n      </Tool>\n\n      <br />\n      <Tool\n        name={t(\"Rectangular annotation\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.RectangularAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.RectangularAnnotation}\n      >\n        <RectangularSelectionIcon />\n      </Tool>\n\n      <Tool\n        name={t(\"Elliptical annotation\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.EllipticalAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.EllipticalAnnotation}\n      >\n        <EllipticalSelectionIcon />\n      </Tool>\n\n      <br />\n\n      <Tool\n        name={t(\"Freehand annotation\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.PenAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.PenAnnotation}\n      >\n        <PenSelectionIcon />\n      </Tool>\n\n      <br />\n\n      <Tool\n        name={t(\"Lasso annotation (L)\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.LassoAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.LassoAnnotation}\n      >\n        <LassoSelectionIcon />\n      </Tool>\n\n      <Tool\n        name={t(\"Polygonal annotation\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.PolygonalAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.PolygonalAnnotation}\n      >\n        <PolygonalSelectionIcon />\n      </Tool>\n\n      <Tool\n        name={t(\"Magnetic annotation\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.MagneticAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.MagneticAnnotation}\n      >\n        <MagneticSelectionIcon />\n      </Tool>\n\n      <br />\n\n      <Tool\n        name={t(\"Color annotation\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.ColorAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.ColorAnnotation}\n      >\n        <ColorSelectionIcon />\n      </Tool>\n\n      <Tool\n        name={t(\"Quick annotation\")}\n        onClick={() => {\n          dispatch(\n            applicationSlice.actions.setOperation({\n              operation: OperationType.QuickAnnotation,\n            })\n          );\n        }}\n        selected={activeOperation === OperationType.QuickAnnotation}\n      >\n        <QuickSelectionIcon />\n      </Tool>\n\n      {/*<Tool*/}\n      {/*  name={t(\"Object annotation\")}*/}\n      {/*  onClick={() => {*/}\n      {/*    dispatch(*/}\n      {/*      applicationSlice.actions.setOperation({*/}\n      {/*        operation: OperationType.ObjectAnnotation,*/}\n      {/*      })*/}\n      {/*    );*/}\n      {/*  }}*/}\n      {/*  selected={activeOperation === OperationType.ObjectAnnotation}*/}\n      {/*>*/}\n      {/*  <ObjectSelectionIcon />*/}\n      {/*</Tool>*/}\n      <br />\n    </Drawer>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const scaledImageHeightSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  if (!state.present.images.length) return;\n\n  const image = state.present.images.filter((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  })[0];\n\n  if (!image) return;\n\n  return image.shape.height * state.present.stageScale;\n};\n","import * as ReactKonva from \"react-konva\";\nimport React, { useEffect, useState } from \"react\";\nimport useImage from \"use-image\";\nimport Konva from \"konva\";\nimport { useSelector } from \"react-redux\";\nimport {\n  boundingClientRectSelector,\n  stageScaleSelector,\n} from \"../../../../../store/selectors\";\nimport { scaledImageWidthSelector } from \"../../../../../store/selectors/scaledImageWidthSelector\";\nimport { scaledImageHeightSelector } from \"../../../../../store/selectors/scaledImageHeightSelector\";\nimport { imageSrcSelector } from \"../../../../../store/selectors/imageSrcSelector\";\nimport { channelsSelector } from \"../../../../../store/selectors/intensityRangeSelector\";\nimport { createIntensityFilter } from \"../../../ToolOptions/ColorAdjustmentOptions/ColorAdjustmentOptions/ColorAdjustmentOptions\";\nimport { ChannelType } from \"../../../../../types/ChannelType\";\nimport { isEqual } from \"lodash\";\n\nexport const Image = React.forwardRef<Konva.Image>((_, ref) => {\n  const src = useSelector(imageSrcSelector);\n\n  const width = useSelector(scaledImageWidthSelector);\n\n  const height = useSelector(scaledImageHeightSelector);\n\n  const [image] = useImage(src ? src : \"\", \"Anonymous\");\n\n  const [filters, setFilters] = useState<Array<any>>();\n\n  const channels = useSelector(channelsSelector);\n\n  const boundingClientRect = useSelector(boundingClientRectSelector);\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  const normalizeFont = 1300;\n\n  useEffect(() => {\n    // @ts-ignore\n    if (!ref || !ref.current) return;\n    const defaultChannels: Array<ChannelType> = []; //number of channels depends on whether image is greyscale or RGB\n    for (let i = 0; i < channels.length; i++) {\n      defaultChannels.push({\n        range: [0, 255],\n        visible: true,\n      });\n    }\n    if (isEqual(channels, defaultChannels)) {\n      setFilters([]);\n      // @ts-ignore\n      ref?.current.clearCache();\n    } else {\n      const IntensityFilter = createIntensityFilter(channels);\n      setFilters([IntensityFilter]);\n      // @ts-ignore\n      ref?.current.cache();\n    }\n  }, [channels, stageScale]);\n\n  useEffect(() => {\n    // @ts-ignore\n    if (!ref || !ref.current) return;\n    setFilters([]);\n    // @ts-ignore\n    ref?.current.clearCache();\n  }, [image]);\n\n  if (!src) {\n    return (\n      <ReactKonva.Text\n        x={\n          boundingClientRect.x + (80 * boundingClientRect.width) / normalizeFont\n        } //center depending on window width\n        y={0.4 * boundingClientRect.height}\n        text={\n          'To start annotating, drag and drop an image onto the canvas or click on \"Open Image\".'\n        }\n        fill={\"white\"}\n        fontSize={(30 * boundingClientRect.width) / normalizeFont} //scale font depending on window width\n      />\n    );\n  }\n\n  return (\n    <ReactKonva.Image\n      height={height}\n      image={image}\n      ref={ref}\n      width={width}\n      filters={filters}\n    />\n  );\n});\n","import { EllipticalAnnotationTool } from \"../../../../../../image/Tool\";\nimport * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype EllipticalSelectionProps = {\n  operator: EllipticalAnnotationTool;\n};\n\nexport const EllipticalSelection = ({ operator }: EllipticalSelectionProps) => {\n  const dashOffset = useMarchingAnts();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  if (!operator.center || !operator.radius) return null;\n\n  const x = operator.center.x * stageScale;\n  const y = operator.center.y * stageScale;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Ellipse\n        dash={[4, 2]}\n        dashOffset={-dashOffset}\n        radiusX={operator.radius.x}\n        radiusY={operator.radius.y}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"black\"\n        strokeWidth={1 / stageScale}\n        x={x}\n        y={y}\n      />\n\n      <ReactKonva.Ellipse\n        dash={[4 / stageScale, 2 / stageScale]}\n        dashOffset={-dashOffset}\n        radiusX={operator.radius.x}\n        radiusY={operator.radius.y}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"white\"\n        strokeWidth={1 / stageScale}\n        x={x}\n        y={y}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { LassoAnnotationTool } from \"../../../../../../image/Tool\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype LassoSelectionProps = {\n  operator: LassoAnnotationTool;\n};\n\nexport const LassoSelection = ({ operator }: LassoSelectionProps) => {\n  const dashOffset = useMarchingAnts();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  if (!operator.origin) return <React.Fragment />;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Circle\n        fill=\"white\"\n        radius={3}\n        stroke=\"black\"\n        strokeWidth={1}\n        x={operator.origin.x * stageScale}\n        y={operator.origin.y * stageScale}\n      />\n\n      {operator.anchor && (\n        <ReactKonva.Circle\n          fill=\"black\"\n          radius={3}\n          stroke=\"white\"\n          strokeWidth={1}\n          x={operator.anchor.x * stageScale}\n          y={operator.anchor.y * stageScale}\n        />\n      )}\n\n      <ReactKonva.Line\n        points={operator.buffer}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"black\"\n        strokeWidth={1 / stageScale}\n      />\n\n      <ReactKonva.Line\n        dash={[4 / stageScale, 2 / stageScale]}\n        dashOffset={-dashOffset}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"white\"\n        points={operator.buffer}\n        strokeWidth={1 / stageScale}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { MagneticAnnotationTool } from \"../../../../../../image/Tool\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype MagneticSelectionProps = {\n  operator: MagneticAnnotationTool;\n};\n\nexport const MagneticSelection = ({ operator }: MagneticSelectionProps) => {\n  const dashOffset = useMarchingAnts();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  if (!operator.origin) return <React.Fragment />;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Circle\n        fill=\"white\"\n        radius={3}\n        stroke=\"black\"\n        strokeWidth={1}\n        x={operator.origin.x * stageScale}\n        y={operator.origin.y * stageScale}\n      />\n\n      {operator.anchor && (\n        <ReactKonva.Circle\n          fill=\"black\"\n          radius={3}\n          stroke=\"white\"\n          strokeWidth={1}\n          x={operator.anchor.x * stageScale}\n          y={operator.anchor.y * stageScale}\n        />\n      )}\n\n      <ReactKonva.Line\n        points={operator.buffer}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"black\"\n        strokeWidth={1 / stageScale}\n      />\n\n      <ReactKonva.Line\n        dash={[4 / stageScale, 2 / stageScale]}\n        scale={{ x: stageScale, y: stageScale }}\n        dashOffset={-dashOffset}\n        stroke=\"white\"\n        points={operator.buffer}\n        strokeWidth={1 / stageScale}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import { ObjectAnnotationTool } from \"../../../../../../image/Tool\";\nimport * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype ObjectSelectionProps = {\n  operator: ObjectAnnotationTool;\n};\n\nexport const ObjectSelection = ({ operator }: ObjectSelectionProps) => {\n  const dashOffset = useMarchingAnts();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  if (!operator.origin || !operator.width || !operator.height) return null;\n\n  if (!operator.origin) return null;\n\n  const x = operator.origin.x * stageScale;\n  const y = operator.origin.y * stageScale;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Rect\n        dash={[4 / stageScale, 2 / stageScale]}\n        dashOffset={-dashOffset}\n        scale={{ x: stageScale, y: stageScale }}\n        height={operator.height}\n        stroke=\"black\"\n        strokeWidth={1 / stageScale}\n        width={operator.width}\n        x={x}\n        y={y}\n      />\n\n      <ReactKonva.Rect\n        dash={[4 / stageScale, 2 / stageScale]}\n        dashOffset={-dashOffset}\n        height={operator.height}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"white\"\n        strokeWidth={1 / stageScale}\n        width={operator.width}\n        x={x}\n        y={y}\n      />\n\n      <ReactKonva.Line\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"white\"\n        points={operator.points}\n        strokeWidth={1}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { PolygonalAnnotationTool } from \"../../../../../../image/Tool\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype PolygonalSelectionProps = {\n  operator: PolygonalAnnotationTool;\n};\n\nexport const PolygonalSelection = ({ operator }: PolygonalSelectionProps) => {\n  const dashOffset = useMarchingAnts();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  if (!operator.origin) return <React.Fragment />;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Circle\n        fill=\"white\"\n        radius={3}\n        stroke=\"black\"\n        strokeWidth={1}\n        x={operator.origin.x * stageScale}\n        y={operator.origin.y * stageScale}\n      />\n\n      {operator.anchor && (\n        <ReactKonva.Circle\n          fill=\"black\"\n          radius={3}\n          stroke=\"white\"\n          strokeWidth={1}\n          x={operator.anchor.x * stageScale}\n          y={operator.anchor.y * stageScale}\n        />\n      )}\n\n      <ReactKonva.Line\n        points={operator.buffer}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"black\"\n        strokeWidth={1 / stageScale}\n      />\n\n      <ReactKonva.Line\n        dash={[4 / stageScale, 2 / stageScale]}\n        dashOffset={-dashOffset}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"white\"\n        points={operator.buffer}\n        strokeWidth={1 / stageScale}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import { RectangularAnnotationTool } from \"../../../../../../image/Tool\";\nimport * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype RectangularSelectionProps = {\n  operator: RectangularAnnotationTool;\n};\n\nexport const RectangularSelection = ({\n  operator,\n}: RectangularSelectionProps) => {\n  const dashOffset = useMarchingAnts();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  if (!operator.origin || !operator.width || !operator.height) return null;\n\n  const x = operator.origin.x * stageScale;\n  const y = operator.origin.y * stageScale;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Rect\n        dash={[4 / stageScale, 2 / stageScale]}\n        dashOffset={-dashOffset}\n        height={operator.height}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"black\"\n        strokeWidth={1 / stageScale}\n        width={operator.width}\n        x={x}\n        y={y}\n      />\n\n      <ReactKonva.Rect\n        dash={[4 / stageScale, 2 / stageScale]}\n        dashOffset={-dashOffset}\n        height={operator.height}\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"white\"\n        strokeWidth={1 / stageScale}\n        width={operator.width}\n        x={x}\n        y={y}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import { ColorAnnotationTool } from \"../../../../../../image/Tool\";\nimport * as ReactKonva from \"react-konva\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype ColorSelectionProps = {\n  operator: ColorAnnotationTool;\n};\n\nexport const ColorSelection = ({ operator }: ColorSelectionProps) => {\n  const [image, setImage] = useState<HTMLImageElement>();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  useEffect(() => {\n    const image = new Image();\n    image.src = operator.overlayData;\n    setImage(image);\n  }, [operator.overlayData]);\n\n  if (!operator.overlayData || !operator.offset) return null;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Image\n        image={image}\n        scale={{ x: stageScale, y: stageScale }}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import { QuickAnnotationTool } from \"../../../../../../image/Tool\";\nimport * as ReactKonva from \"react-konva\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype QuickSelectionProps = {\n  operator: QuickAnnotationTool;\n};\n\nexport const QuickSelection = ({ operator }: QuickSelectionProps) => {\n  const [image, setImage] = useState<HTMLImageElement>();\n\n  useEffect(() => {\n    if (!operator.currentMask) return;\n\n    const image = new Image();\n    image.src = operator.currentMask.toDataURL(\"image/png\", {\n      useCanvas: true,\n    });\n    setImage(image);\n  }, [operator.currentMask, operator.lastSuperpixel]);\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  if (!operator.currentMask) return null;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Image\n        image={image}\n        scale={{ x: stageScale, y: stageScale }}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { PenAnnotationTool } from \"../../../../../../image/Tool\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../../store/selectors\";\n\ntype PenSelectionProps = {\n  operator: PenAnnotationTool;\n};\n\nexport const PenSelection = ({ operator }: PenSelectionProps) => {\n  const stageScale = useSelector(stageScaleSelector);\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Line\n        points={operator.buffer}\n        lineJoin=\"round\"\n        lineCap=\"round\"\n        scale={{ x: stageScale, y: stageScale }}\n        stroke=\"red\"\n        strokeWidth={operator.brushSize * 2}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\nimport { zoomSelectionSelector } from \"../../../../../../store/selectors\";\n\nexport const ZoomSelection = ({}) => {\n  const dashOffset = useMarchingAnts();\n\n  const { dragging, minimum, maximum, selecting } = useSelector(\n    zoomSelectionSelector\n  );\n\n  if (!minimum || !maximum || !selecting || !dragging)\n    return <React.Fragment />;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Rect\n        dash={[4, 2]}\n        dashOffset={-dashOffset}\n        height={maximum.y - minimum.y}\n        stroke=\"black\"\n        strokeWidth={1}\n        width={maximum.x - minimum.x}\n        x={minimum.x}\n        y={minimum.y}\n      />\n\n      <ReactKonva.Rect\n        dash={[4, 2]}\n        dashOffset={-dashOffset}\n        height={maximum.y - minimum.y}\n        stroke=\"white\"\n        strokeWidth={1}\n        width={maximum.x - minimum.x}\n        x={minimum.x}\n        y={minimum.y}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import React from \"react\";\nimport {\n  ColorAnnotationTool,\n  EllipticalAnnotationTool,\n  LassoAnnotationTool,\n  MagneticAnnotationTool,\n  ObjectAnnotationTool,\n  PenAnnotationTool,\n  PolygonalAnnotationTool,\n  QuickAnnotationTool,\n  RectangularAnnotationTool,\n  Tool,\n} from \"../../../../../../image/Tool\";\nimport { EllipticalSelection } from \"../EllipticalSelection\";\nimport { ToolType } from \"../../../../../../types/ToolType\";\nimport { LassoSelection } from \"../LassoSelection\";\nimport { MagneticSelection } from \"../MagneticSelection\";\nimport { ObjectSelection } from \"../ObjectSelection\";\nimport { PolygonalSelection } from \"../PolygonalSelection\";\nimport { RectangularSelection } from \"../RectangularSelection\";\nimport { ColorSelection } from \"../ColorSelection/ColorSelection\";\nimport { QuickSelection } from \"../QuickSelection/QuickSelection\";\nimport { PenSelection } from \"../PenSelection\";\nimport { ZoomSelection } from \"../ZoomSelection\";\n\ntype SelectionProps = {\n  tool?: Tool;\n  toolType?: ToolType;\n};\n\nexport const Selection = ({ tool, toolType }: SelectionProps) => {\n  if (!toolType || !tool) return <React.Fragment />;\n\n  switch (toolType) {\n    case ToolType.ColorAnnotation:\n      return <ColorSelection operator={tool as ColorAnnotationTool} />;\n    case ToolType.EllipticalAnnotation:\n      return (\n        <EllipticalSelection operator={tool as EllipticalAnnotationTool} />\n      );\n    case ToolType.LassoAnnotation:\n      return <LassoSelection operator={tool as LassoAnnotationTool} />;\n    case ToolType.MagneticAnnotation:\n      return <MagneticSelection operator={tool as MagneticAnnotationTool} />;\n    case ToolType.ObjectAnnotation:\n      return <ObjectSelection operator={tool as ObjectAnnotationTool} />;\n    case ToolType.PenAnnotation:\n      return <PenSelection operator={tool as PenAnnotationTool} />;\n    case ToolType.PolygonalAnnotation:\n      return <PolygonalSelection operator={tool as PolygonalAnnotationTool} />;\n    case ToolType.RectangularAnnotation:\n      return (\n        <RectangularSelection operator={tool as RectangularAnnotationTool} />\n      );\n    case ToolType.Zoom:\n      return <ZoomSelection />;\n    case ToolType.QuickAnnotation:\n      return <QuickSelection operator={tool as QuickAnnotationTool} />;\n    default:\n      return <React.Fragment />;\n  }\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const annotatedSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): boolean => {\n  return state.present.annotated;\n};\n","import React from \"react\";\nimport { Selection } from \"../Selection\";\nimport { useSelector } from \"react-redux\";\nimport { annotatedSelector } from \"../../../../../store/selectors/annotatedSelector\";\nimport {\n  annotatingSelector,\n  toolTypeSelector,\n} from \"../../../../../store/selectors\";\nimport { Tool } from \"../../../../../image/Tool\";\nimport { ToolType } from \"../../../../../types/ToolType\";\n\ntype SelectingProps = {\n  tool: Tool;\n};\n\nexport const Selecting = ({ tool }: SelectingProps) => {\n  const annotated = useSelector(annotatedSelector);\n\n  const annotating = useSelector(annotatingSelector);\n\n  const toolType = useSelector(toolTypeSelector);\n\n  if ((annotated || !annotating) && toolType !== ToolType.QuickAnnotation)\n    return <React.Fragment />;\n\n  return (\n    <React.Fragment>\n      <Selection tool={tool} toolType={toolType} />\n    </React.Fragment>\n  );\n};\n","import * as ReactKonva from \"react-konva\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  annotatingSelector,\n  stageScaleSelector,\n  toolTypeSelector,\n} from \"../../../../../store/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { ToolType } from \"../../../../../types/ToolType\";\nimport { annotatedSelector } from \"../../../../../store/selectors/annotatedSelector\";\n\ntype ColorAnnotationToolTipProps = {\n  toolTipPosition?: { x: number; y: number };\n  initialPosition?: { x: number; y: number };\n  tolerance: number;\n};\n\nexport const ColorAnnotationToolTip = ({\n  toolTipPosition,\n  initialPosition,\n  tolerance,\n}: ColorAnnotationToolTipProps) => {\n  const [text, setText] = useState<string>(\"Tolerance: 0%\");\n  const toolType = useSelector(toolTypeSelector);\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  const annotated = useSelector(annotatedSelector);\n  const annotating = useSelector(annotatingSelector);\n\n  useEffect(() => {\n    if (!toolTipPosition) return;\n    setText(`Tolerance: ${tolerance}`);\n  }, [toolTipPosition]);\n\n  if (toolType !== ToolType.ColorAnnotation) return <React.Fragment />;\n\n  if (!annotating || annotated || !toolTipPosition || !initialPosition) {\n    return <React.Fragment />;\n  }\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Line\n        points={[\n          toolTipPosition.x,\n          toolTipPosition.y!,\n          initialPosition.x,\n          initialPosition.y,\n        ]}\n        scale={{ x: stageScale, y: stageScale }}\n        strokeWidth={1}\n        stroke=\"white\"\n      />\n      <ReactKonva.Label\n        position={{\n          x: toolTipPosition.x * stageScale,\n          y: toolTipPosition.y * stageScale,\n        }}\n        opacity={0.75}\n      >\n        <ReactKonva.Tag fill={\"black\"} />\n        <ReactKonva.Text fill={\"white\"} fontSize={12} padding={5} text={text} />\n      </ReactKonva.Label>\n    </ReactKonva.Group>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/pop-up-on.b776a1ef.mp3\";","export default __webpack_public_path__ + \"static/media/pop-up-off.83c6ba5b.mp3\";","import React, { useEffect, useState } from \"react\";\nimport * as ReactKonva from \"react-konva\";\nimport { useSelector } from \"react-redux\";\nimport { scaledImageWidthSelector } from \"../../../../../store/selectors/scaledImageWidthSelector\";\nimport { scaledImageHeightSelector } from \"../../../../../store/selectors/scaledImageHeightSelector\";\nimport {\n  stageHeightSelector,\n  stageWidthSelector,\n  zoomSelectionSelector,\n  zoomToolOptionsSelector,\n} from \"../../../../../store/selectors\";\nimport { offsetSelector } from \"../../../../../store/selectors/offsetSelector\";\n\ntype LayerProps = {\n  children?: React.ReactNode;\n};\n\nexport const Layer = ({ children }: LayerProps) => {\n  const imageWidth = useSelector(scaledImageWidthSelector);\n  const imageHeight = useSelector(scaledImageHeightSelector);\n\n  const offset = useSelector(offsetSelector);\n\n  const { automaticCentering } = useSelector(zoomToolOptionsSelector);\n\n  const zoomSelection = useSelector(zoomSelectionSelector);\n\n  const stageWidth = useSelector(stageWidthSelector);\n  const stageHeight = useSelector(stageHeightSelector);\n\n  const [position, setPosition] = useState<{ x: number; y: number }>({\n    x: 0,\n    y: 0,\n  });\n\n  useEffect(() => {\n    if (!imageWidth || !imageHeight) return;\n\n    if (automaticCentering && !zoomSelection.dragging) {\n      setPosition({\n        x: (stageWidth - imageWidth) / 2,\n        y: (stageHeight - imageHeight) / 2,\n      });\n    } else {\n      setPosition({ x: stageWidth / 2, y: stageHeight / 2 });\n    }\n  }, [automaticCentering, stageWidth, stageHeight, imageWidth, imageHeight]);\n\n  return (\n    <ReactKonva.Layer\n      imageSmoothingEnabled={false}\n      offset={offset}\n      position={position}\n    >\n      {children}\n    </ReactKonva.Layer>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { AnnotationType } from \"../../types/AnnotationType\";\n\nexport const selectedAnnotationSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): AnnotationType | undefined => {\n  return state.present.selectedAnnotation;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imageWidthSelector = ({ state }: { state: HistoryStateType }) => {\n  if (!state.present.images.length || !state.present.activeImageId) return;\n\n  const image = state.present.images.filter((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  })[0];\n\n  return image.shape.width;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\nimport { ImageType } from \"../../types/ImageType\";\n\nexport const imageHeightSelector = ({ state }: { state: HistoryStateType }) => {\n  if (!state.present.images.length || !state.present.activeImageId) return;\n\n  const image = state.present.images.find((image: ImageType) => {\n    return image.id === state.present.activeImageId;\n  });\n\n  if (!image) return;\n\n  return image.shape.height;\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const cursorSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): string => {\n  return state.present.cursor;\n};\n","import * as ReactKonva from \"react-konva\";\nimport React, { useRef, useState } from \"react\";\nimport * as _ from \"lodash\";\nimport { AnnotationType } from \"../../../../../types/AnnotationType\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { stageScaleSelector } from \"../../../../../store/selectors\";\nimport {\n  applicationSlice,\n  setSelectedAnnotations,\n} from \"../../../../../store/slices\";\nimport Konva from \"konva\";\nimport { selectedAnnotationSelector } from \"../../../../../store/selectors/selectedAnnotationSelector\";\nimport { decode, encode } from \"../../../../../image/rle\";\nimport * as ImageJS from \"image-js\";\nimport { selectedAnnotationsSelector } from \"../../../../../store/selectors/selectedAnnotationsSelector\";\nimport { useCursor } from \"../../../../../hooks\";\nimport { AnnotationModeType } from \"../../../../../types/AnnotationModeType\";\nimport { unselectedAnnotationsSelector } from \"../../../../../store/selectors/unselectedAnnotationsSelector\";\nimport useSound from \"use-sound\";\nimport createAnnotationSoundEffect from \"../../../../../sounds/pop-up-on.mp3\";\nimport { soundEnabledSelector } from \"../../../../../store/selectors/soundEnabledSelector\";\nimport deleteAnnotationSoundEffect from \"../../../../../sounds/pop-up-off.mp3\";\nimport { imageWidthSelector } from \"../../../../../store/selectors/imageWidthSelector\";\nimport { imageHeightSelector } from \"../../../../../store/selectors/imageHeightSelector\";\nimport { cursorSelector } from \"../../../../../store/selectors/cursorSelector\";\n\ntype box = {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n  rotation: number;\n};\n\ntype TransformerProps = {\n  transformPosition: ({\n    x,\n    y,\n  }: {\n    x: number;\n    y: number;\n  }) => { x: number; y: number } | undefined;\n  annotationId: string;\n};\n\nexport const Transformer = ({\n  transformPosition,\n  annotationId,\n}: TransformerProps) => {\n  const unselectedAnnotations = useSelector(unselectedAnnotationsSelector);\n\n  const selectedAnnotation = useSelector(selectedAnnotationSelector);\n\n  const selectedAnnotations = useSelector(selectedAnnotationsSelector);\n\n  const transformerRef = useRef<Konva.Transformer | null>(null);\n\n  const dispatch = useDispatch();\n\n  const [boundBox, setBoundBox] = useState<box | null>(null);\n\n  const [startBox, setStartBox] = useState<box>({\n    x: 0,\n    y: 0,\n    height: 0,\n    width: 0,\n    rotation: 0,\n  });\n\n  const [center, setCenter] = useState<{ x: number; y: number } | undefined>();\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  const cursor = useSelector(cursorSelector);\n\n  const soundEnabled = useSelector(soundEnabledSelector);\n\n  const imageWidth = useSelector(imageWidthSelector);\n  const imageHeight = useSelector(imageHeightSelector);\n\n  const [playCreateAnnotationSoundEffect] = useSound(\n    createAnnotationSoundEffect\n  );\n\n  const [playDeleteAnnotationSoundEffect] = useSound(\n    deleteAnnotationSoundEffect\n  );\n\n  const boundingBoxFunc = (oldBox: box, newBox: box) => {\n    if (!boundBox) {\n      setStartBox(oldBox);\n    }\n\n    const relativeNewBox = getRelativeBox(newBox);\n\n    if (!imageWidth || !imageHeight || !relativeNewBox)\n      return boundBox ? boundBox : startBox;\n\n    const minimumBoxArea = 5;\n\n    if (\n      relativeNewBox.width < minimumBoxArea ||\n      relativeNewBox.height < minimumBoxArea\n    )\n      return boundBox ? boundBox : oldBox;\n\n    if (\n      Math.floor(relativeNewBox.x + relativeNewBox.width) > imageWidth ||\n      Math.floor(relativeNewBox.y + relativeNewBox.height) > imageHeight ||\n      relativeNewBox.x < 0 ||\n      relativeNewBox.y < 0\n    ) {\n      return boundBox ? boundBox : oldBox;\n    }\n\n    setBoundBox(newBox);\n    return newBox;\n  };\n\n  /*\n   * Obtain box coordinates in image space\n   */\n  const getRelativeBox = (boundBox: box) => {\n    const relativePosition = transformPosition({\n      x: boundBox.x,\n      y: boundBox.y,\n    });\n    if (!relativePosition) return;\n    return {\n      x: relativePosition.x / stageScale,\n      y: relativePosition.y / stageScale,\n      height: boundBox.height / stageScale,\n      width: boundBox.width / stageScale,\n      rotation: 0,\n    };\n  };\n\n  const getScaledCoordinate = (\n    contour: Array<number>,\n    center: { x: number; y: number },\n    scale: { x: number; y: number }\n  ) => {\n    return _.flatten(\n      _.map(_.chunk(contour, 2), (el: Array<number>) => {\n        return [\n          Math.round(center.x + scale.x * (el[0] - center.x)),\n          Math.round(center.y + scale.y * (el[1] - center.y)),\n        ];\n      })\n    );\n  };\n\n  const onTransformEnd = () => {\n    if (!selectedAnnotation) return;\n\n    if (!boundBox || !startBox) return;\n\n    if (!imageWidth || !imageHeight) return;\n\n    const relativeBoundBox = getRelativeBox(boundBox);\n    const relativeStartBox = getRelativeBox(startBox);\n\n    if (!relativeBoundBox || !relativeStartBox || !center) return;\n\n    // get necessary parameters for transformation\n    const scaleX = relativeBoundBox.width / relativeStartBox.width;\n    const scaleY = relativeBoundBox.height / relativeStartBox.height;\n\n    //extract roi and resize\n    const mask = selectedAnnotation.mask;\n    const boundingBox = selectedAnnotation.boundingBox;\n\n    const roiWidth = boundingBox[2] - boundingBox[0];\n    const roiHeight = boundingBox[3] - boundingBox[1];\n    const roiX = boundingBox[0];\n    const roiY = boundingBox[1];\n\n    const decodedData = new Uint8Array(decode(mask));\n    const roi = new ImageJS.Image(roiWidth, roiHeight, decodedData, {\n      components: 1,\n      alpha: 0,\n    });\n\n    const resizedMaskROI = roi.resize({\n      height: Math.round(roiHeight * scaleY),\n      width: Math.round(roiWidth * scaleX),\n      preserveAspectRatio: false,\n    });\n\n    const scaledOffset = getScaledCoordinate([roiX, roiY], center, {\n      x: scaleX,\n      y: scaleY,\n    });\n\n    const resizedMask = encode(Uint8Array.from(resizedMaskROI.data));\n\n    const updatedAnnotation = {\n      ...selectedAnnotation,\n      boundingBox: [\n        scaledOffset[0],\n        scaledOffset[1],\n        scaledOffset[0] + resizedMaskROI.width,\n        scaledOffset[1] + resizedMaskROI.height,\n      ] as [number, number, number, number],\n      mask: resizedMask,\n    };\n\n    dispatch(\n      applicationSlice.actions.setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n\n    updateSelectedAnnotation(updatedAnnotation);\n\n    setCenter(undefined);\n    setBoundBox(null);\n  };\n\n  const updateSelectedAnnotation = (updatedAnnotation: AnnotationType) => {\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [updatedAnnotation],\n        selectedAnnotation: updatedAnnotation,\n      })\n    );\n  };\n\n  const getOppositeAnchorPosition = () => {\n    if (!transformerRef || !transformerRef.current) return { x: 0, y: 0 };\n    const activeAnchor = transformerRef.current.getActiveAnchor();\n    switch (activeAnchor) {\n      case \"bottom-right\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"top-left\"))\n          .position();\n      }\n      case \"bottom-center\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"top-center\"))\n          .position();\n      }\n      case \"bottom-left\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"top-right\"))\n          .position();\n      }\n      case \"middle-left\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"middle-right\"))\n          .position();\n      }\n      case \"top-left\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"bottom-right\"))\n          .position();\n      }\n      case \"top-center\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"bottom-center\"))\n          .position();\n      }\n      case \"top-right\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"bottom-left\"))\n          .position();\n      }\n      case \"middle-right\": {\n        return transformerRef.current\n          .findOne(\".\".concat(\"middle-left\"))\n          .position();\n      }\n      default: {\n        return { x: 0, y: 0 };\n      }\n    }\n  };\n\n  const onTransform = () => {\n    if (!center) {\n      //at the beginning of transform, find out the \"center\" coordinate used for the resizing (i.e., the coordinate that does not move during resize)\n      const oppositeAnchorPosition = getOppositeAnchorPosition();\n      const scaledOppositeAnchorPosition = {\n        x: oppositeAnchorPosition.x / stageScale,\n        y: oppositeAnchorPosition.y / stageScale,\n      };\n\n      const relativeStartBox = getRelativeBox(startBox);\n\n      if (!relativeStartBox) return;\n\n      setCenter({\n        x: scaledOppositeAnchorPosition.x + relativeStartBox.x,\n        y: scaledOppositeAnchorPosition.y + relativeStartBox.y,\n      });\n    }\n  };\n\n  const onTransformStart = () => {\n    const selected = selectedAnnotations.find((annotation: AnnotationType) => {\n      return annotation.id === annotationId;\n    });\n\n    if (!selected) return;\n\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [selected],\n        selectedAnnotation: selected,\n      })\n    );\n  };\n\n  const onSaveAnnotationClick = (event: Konva.KonvaEventObject<MouseEvent>) => {\n    const container = event.target.getStage()!.container();\n    container.style.cursor = cursor;\n\n    dispatch(\n      applicationSlice.actions.setImageInstances({\n        instances: [...unselectedAnnotations, ...selectedAnnotations],\n      })\n    );\n\n    transformerRef.current!.detach();\n    transformerRef.current!.getLayer()?.batchDraw();\n    dispatch(applicationSlice.actions.setAnnotating({ annotating: false }));\n    dispatch(\n      applicationSlice.actions.setSelectionMode({\n        selectionMode: AnnotationModeType.New,\n      })\n    );\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n    if (soundEnabled) playCreateAnnotationSoundEffect();\n  };\n\n  const onClearAnnotationClick = (\n    event: Konva.KonvaEventObject<MouseEvent>\n  ) => {\n    const container = event.target.getStage()!.container();\n    container.style.cursor = cursor;\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n    if (soundEnabled) playDeleteAnnotationSoundEffect();\n  };\n\n  const onMouseEnter = (event: Konva.KonvaEventObject<MouseEvent>) => {\n    const container = event.target.getStage()!.container();\n    container.style.cursor = \"pointer\";\n  };\n\n  const onMouseLeave = (event: Konva.KonvaEventObject<MouseEvent>) => {\n    const container = event.target.getStage()!.container();\n    container.style.cursor = cursor;\n  };\n\n  let posX = 0;\n  let posY = 0;\n\n  if (selectedAnnotation && selectedAnnotations.length === 1) {\n    posX =\n      Math.max(\n        selectedAnnotation.boundingBox[0],\n        selectedAnnotation.boundingBox[2]\n      ) * stageScale;\n    posY =\n      Math.max(\n        selectedAnnotation.boundingBox[1],\n        selectedAnnotation.boundingBox[3]\n      ) * stageScale;\n  }\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Transformer\n        boundBoxFunc={boundingBoxFunc}\n        onTransform={onTransform}\n        onTransformEnd={onTransformEnd}\n        onTransformStart={onTransformStart}\n        id={\"tr-\".concat(annotationId)}\n        ref={transformerRef}\n        rotateEnabled={false}\n      />\n      {selectedAnnotation && selectedAnnotations.length === 1 && (\n        <ReactKonva.Group>\n          <ReactKonva.Label\n            position={{\n              x: posX - 58,\n              y: posY + 6,\n            }}\n            onClick={onSaveAnnotationClick}\n            id={\"label\"}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n          >\n            <ReactKonva.Tag\n              cornerRadius={3}\n              fill={\"darkgreen\"}\n              lineJoin={\"round\"}\n              shadowColor={\"black\"}\n              shadowBlur={10}\n              shadowOffset={{ x: 5, y: 5 }}\n            />\n            <ReactKonva.Text\n              fill={\"white\"}\n              fontSize={14}\n              padding={6}\n              text={\"Confirm\"}\n            />\n          </ReactKonva.Label>\n          <ReactKonva.Label\n            position={{\n              x: posX - 52,\n              y: posY + 35,\n            }}\n            onClick={onClearAnnotationClick}\n            id={\"label\"}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n          >\n            <ReactKonva.Tag\n              cornerRadius={3}\n              fill={\"darkred\"}\n              lineJoin={\"round\"}\n              shadowColor={\"black\"}\n              shadowBlur={10}\n              shadowOffset={{ x: 5, y: 5 }}\n            />\n            <ReactKonva.Text\n              fill={\"white\"}\n              fontSize={14}\n              padding={6}\n              text={\"Cancel\"}\n            />\n          </ReactKonva.Label>\n        </ReactKonva.Group>\n      )}\n    </ReactKonva.Group>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectedAnnotationsIdsSelector } from \"../../../../../store/selectors/selectedAnnotationsIdsSelector\";\n\nimport { Transformer } from \"../Transformer/Transformer\";\n\ntype TransformersProps = {\n  transformPosition: ({\n    x,\n    y,\n  }: {\n    x: number;\n    y: number;\n  }) => { x: number; y: number } | undefined;\n};\n\nexport const Transformers = ({ transformPosition }: TransformersProps) => {\n  const selectedAnnotationsIds = useSelector(selectedAnnotationsIdsSelector);\n\n  if (!selectedAnnotationsIds) return <React.Fragment />;\n\n  return (\n    <>\n      {selectedAnnotationsIds.map((annotationId, idx) => {\n        return (\n          <React.Fragment key={annotationId}>\n            <Transformer\n              transformPosition={transformPosition}\n              annotationId={annotationId}\n            />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const stagePositionSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): { x: number; y: number } => {\n  return state.present.stagePosition;\n};\n","import React from \"react\";\nimport { ToolType } from \"../../../../../types/ToolType\";\nimport * as ReactKonva from \"react-konva\";\nimport { useSelector } from \"react-redux\";\nimport { AnnotationTool } from \"../../../../../image/Tool/AnnotationTool/AnnotationTool\";\nimport { toolTypeSelector } from \"../../../../../store/selectors\";\nimport { penSelectionBrushSizeSelector } from \"../../../../../store/selectors/penSelectionBrushSizeSelector\";\nimport { scaledImageWidthSelector } from \"../../../../../store/selectors/scaledImageWidthSelector\";\nimport { scaledImageHeightSelector } from \"../../../../../store/selectors/scaledImageHeightSelector\";\n\ntype PenAnnotationToolTipProps = {\n  currentPosition?: { x: number; y: number };\n\n  annotationTool?: AnnotationTool;\n};\nexport const PenAnnotationToolTip = ({\n  annotationTool,\n  currentPosition,\n}: PenAnnotationToolTipProps) => {\n  const toolType = useSelector(toolTypeSelector);\n\n  const penSelectionBrushSize = useSelector(penSelectionBrushSizeSelector);\n\n  const imageWidth = useSelector(scaledImageWidthSelector);\n  const imageHeight = useSelector(scaledImageHeightSelector);\n\n  if (\n    !currentPosition ||\n    !annotationTool ||\n    annotationTool.annotating ||\n    toolType !== ToolType.PenAnnotation ||\n    !imageWidth ||\n    !imageHeight\n  )\n    return <React.Fragment />;\n\n  if (\n    currentPosition.x > imageWidth - penSelectionBrushSize ||\n    currentPosition.y > imageHeight - penSelectionBrushSize ||\n    currentPosition.x < 0 ||\n    currentPosition.y < 0\n  )\n    return <React.Fragment />;\n\n  return (\n    <ReactKonva.Ellipse\n      radiusX={penSelectionBrushSize}\n      radiusY={penSelectionBrushSize}\n      x={currentPosition.x}\n      y={currentPosition.y}\n      stroke=\"grey\"\n      strokewidth={1}\n      dash={[2, 2]}\n    />\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const visibleCategoriesSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  return state.present.categories\n    .filter((category) => category.visible)\n    .map((category) => {\n      return category.id;\n    });\n};\n","export const toRGBA = (color: string, alpha: number) => {\n  const r = parseInt(color.slice(1, 3), 16);\n  const g = parseInt(color.slice(3, 5), 16);\n  const b = parseInt(color.slice(5, 7), 16);\n\n  return [r, g, b];\n  // return `rgba(${r}, ${g}, ${b}, ${alpha})`;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { CategoryType } from \"../../../../../../../types/CategoryType\";\nimport * as ReactKonva from \"react-konva\";\nimport * as _ from \"lodash\";\nimport { AnnotationType } from \"../../../../../../../types/AnnotationType\";\nimport { useSelector } from \"react-redux\";\nimport {\n  categoriesSelector,\n  stageScaleSelector,\n} from \"../../../../../../../store/selectors\";\nimport { colorOverlayROI } from \"../../../../../../../image/imageHelper\";\nimport { imageWidthSelector } from \"../../../../../../../store/selectors/imageWidthSelector\";\nimport { imageHeightSelector } from \"../../../../../../../store/selectors/imageHeightSelector\";\nimport { toRGBA } from \"../../../../../../../image\";\n\ntype AnnotationProps = {\n  annotation: AnnotationType;\n};\n\nexport const Annotation = ({ annotation }: AnnotationProps) => {\n  const categories = useSelector(categoriesSelector);\n  const stageScale = useSelector(stageScaleSelector);\n\n  const imageWidth = useSelector(imageWidthSelector);\n  const imageHeight = useSelector(imageHeightSelector);\n\n  const [imageMask, setImageMask] = useState<HTMLImageElement>();\n\n  const fill = _.find(\n    categories,\n    (category: CategoryType) => category.id === annotation.categoryId\n  )?.color;\n\n  useEffect(() => {\n    if (!annotation.mask || !imageWidth || !imageHeight) return;\n    if (!fill) return;\n    const boxWidth = annotation.boundingBox[2] - annotation.boundingBox[0];\n    const boxHeight = annotation.boundingBox[3] - annotation.boundingBox[1];\n    if (Math.round(boxWidth) <= 0 || Math.round(boxHeight) <= 0) return;\n    const color = toRGBA(fill, 0);\n    setImageMask(\n      colorOverlayROI(\n        annotation.mask,\n        annotation.boundingBox,\n        imageWidth,\n        imageHeight,\n        color\n      )\n    );\n  }, [annotation.mask, fill]);\n\n  if (!annotation) return <React.Fragment />;\n\n  return (\n    <ReactKonva.Group>\n      <ReactKonva.Image\n        id={annotation.id}\n        image={imageMask}\n        scale={{ x: stageScale, y: stageScale }}\n        x={annotation.boundingBox[0] * stageScale}\n        y={annotation.boundingBox[1] * stageScale}\n      />\n    </ReactKonva.Group>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { AnnotationType } from \"../../../../../../types/AnnotationType\";\nimport { useSelector } from \"react-redux\";\nimport { visibleCategoriesSelector } from \"../../../../../../store/selectors/visibleCategoriesSelector\";\nimport { Annotation } from \"./Annotation\";\nimport { imageInstancesSelector } from \"../../../../../../store/selectors\";\nimport { selectedAnnotationsSelector } from \"../../../../../../store/selectors/selectedAnnotationsSelector\";\nimport { unselectedAnnotationsSelector } from \"../../../../../../store/selectors/unselectedAnnotationsSelector\";\n\nexport const ConfirmedAnnotations = () => {\n  const annotations = useSelector(imageInstancesSelector);\n\n  const unselectedAnnotations = useSelector(unselectedAnnotationsSelector);\n\n  const selectedAnnotations = useSelector(selectedAnnotationsSelector);\n\n  const visibleCategories = useSelector(visibleCategoriesSelector);\n\n  const [visibleAnnotations, setVisibleAnnotations] = useState<\n    Array<AnnotationType>\n  >([]);\n\n  useEffect(() => {\n    if (!annotations) return;\n\n    setVisibleAnnotations(\n      unselectedAnnotations.filter((annotation: AnnotationType) =>\n        visibleCategories.includes(annotation.categoryId)\n      )\n    );\n  }, [annotations, selectedAnnotations, visibleCategories]);\n\n  return (\n    <React.Fragment>\n      {visibleAnnotations.map((annotation: AnnotationType) => (\n        <Annotation annotation={annotation} key={annotation.id} />\n      ))}\n    </React.Fragment>\n  );\n};\n","import * as _ from \"lodash\";\nimport { CategoryType } from \"../../../../../../types/CategoryType\";\nimport * as ReactKonva from \"react-konva\";\nimport React, { useEffect, useState } from \"react\";\nimport { AnnotationType } from \"../../../../../../types/AnnotationType\";\nimport { useSelector } from \"react-redux\";\nimport {\n  categoriesSelector,\n  stageScaleSelector,\n} from \"../../../../../../store/selectors\";\nimport { imageWidthSelector } from \"../../../../../../store/selectors/imageWidthSelector\";\nimport { imageHeightSelector } from \"../../../../../../store/selectors/imageHeightSelector\";\nimport { toRGBA } from \"../../../../../../image\";\nimport { colorOverlayROI } from \"../../../../../../image/imageHelper\";\n\ntype AnnotationProps = {\n  annotation: AnnotationType;\n};\n\nexport const SelectedAnnotation = ({ annotation }: AnnotationProps) => {\n  const categories = useSelector(categoriesSelector);\n  const stageScale = useSelector(stageScaleSelector);\n\n  const imageWidth = useSelector(imageWidthSelector);\n  const imageHeight = useSelector(imageHeightSelector);\n\n  const [imageMask, setImageMask] = useState<HTMLImageElement>();\n\n  const fill = _.find(\n    categories,\n    (category: CategoryType) => category.id === annotation.categoryId\n  )?.color;\n\n  useEffect(() => {\n    if (!annotation.mask || !imageWidth || !imageHeight) return;\n    if (!fill) return;\n    const color = toRGBA(fill, 0);\n    setImageMask(\n      colorOverlayROI(\n        annotation.mask,\n        annotation.boundingBox,\n        imageWidth,\n        imageHeight,\n        color\n      )\n    );\n  }, [annotation.mask, fill]);\n\n  return (\n    <React.Fragment>\n      <ReactKonva.Image\n        image={imageMask}\n        id={annotation.id}\n        scale={{ x: stageScale, y: stageScale }}\n        key={annotation.id}\n        x={annotation.boundingBox[0] * stageScale}\n        y={annotation.boundingBox[1] * stageScale}\n        width={annotation.boundingBox[2] - annotation.boundingBox[0]}\n        height={annotation.boundingBox[3] - annotation.boundingBox[1]}\n      />\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectedAnnotationSelector } from \"../../../../../../store/selectors/selectedAnnotationSelector\";\nimport { AnnotationType } from \"../../../../../../types/AnnotationType\";\nimport { selectedAnnotationsSelector } from \"../../../../../../store/selectors/selectedAnnotationsSelector\";\nimport { SelectedAnnotation } from \"../SelectedAnnotation/SelectedAnnotation\";\n\nexport const SelectedAnnotations = () => {\n  const selectedAnnotation = useSelector(selectedAnnotationSelector);\n\n  const selectedAnnotations = useSelector(selectedAnnotationsSelector);\n\n  if (!selectedAnnotations || !selectedAnnotation) return <React.Fragment />;\n\n  return (\n    <React.Fragment>\n      {selectedAnnotations.map((annotation: AnnotationType) => {\n        return (\n          <SelectedAnnotation key={annotation.id} annotation={annotation} />\n        );\n      })}\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { ConfirmedAnnotations } from \"./ConfirmedAnnotations\";\nimport { SelectedAnnotations } from \"./SelectedAnnotations/SelectedAnnotations\";\n\nexport const Annotations = () => {\n  return (\n    <React.Fragment>\n      <SelectedAnnotations />\n      <ConfirmedAnnotations />\n    </React.Fragment>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const pointerSelectionSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}): {\n  dragging: boolean;\n  minimum: { x: number; y: number } | undefined;\n  maximum: { x: number; y: number } | undefined;\n  selecting: boolean;\n} => {\n  return state.present.pointerSelection;\n};\n","import * as ReactKonva from \"react-konva\";\nimport React from \"react\";\nimport { useMarchingAnts } from \"../../../../../../hooks\";\nimport { useSelector } from \"react-redux\";\n\nimport { pointerSelectionSelector } from \"../../../../../../store/selectors/pointerSelectionSelector\";\nimport { toolTypeSelector } from \"../../../../../../store/selectors\";\nimport { ToolType } from \"../../../../../../types/ToolType\";\n\nexport const PointerSelection = () => {\n  const dashOffset = useMarchingAnts();\n\n  const toolType = useSelector(toolTypeSelector);\n\n  const { dragging, minimum, maximum, selecting } = useSelector(\n    pointerSelectionSelector\n  );\n\n  if (!minimum || !maximum || !selecting || !dragging)\n    return <React.Fragment />;\n\n  if (toolType !== ToolType.Pointer) return <React.Fragment />;\n\n  return (\n    <React.Fragment>\n      <ReactKonva.Rect\n        dash={[4, 2]}\n        dashOffset={-dashOffset}\n        height={maximum.y - minimum.y}\n        stroke=\"white\"\n        strokeWidth={1}\n        width={maximum.x - minimum.x}\n        x={minimum.x}\n        y={minimum.y}\n      />\n    </React.Fragment>\n  );\n};\n","import { HistoryStateType } from \"../../types/HistoryStateType\";\n\nexport const currentIndexSelector = ({\n  state,\n}: {\n  state: HistoryStateType;\n}) => {\n  return state.present.currentIndex;\n};\n","import { ToolType } from \"../../types/ToolType\";\nimport {\n  getAnnotationsInBox,\n  getOverlappingAnnotations,\n} from \"../../image/imageHelper\";\nimport { AnnotationType } from \"../../types/AnnotationType\";\nimport {\n  applicationSlice,\n  setPointerSelection,\n  setSelectedAnnotations,\n  setSelectedCategory,\n} from \"../../store/slices\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  imageInstancesSelector,\n  stageScaleSelector,\n  toolTypeSelector,\n} from \"../../store/selectors\";\nimport { selectedAnnotationsSelector } from \"../../store/selectors/selectedAnnotationsSelector\";\nimport { currentIndexSelector } from \"../../store/selectors/currentIndexSelector\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport hotkeys from \"hotkeys-js\";\nimport { useState } from \"react\";\nimport { pointerSelectionSelector } from \"../../store/selectors/pointerSelectionSelector\";\nimport { selectedAnnotationsIdsSelector } from \"../../store/selectors/selectedAnnotationsIdsSelector\";\nimport { imageWidthSelector } from \"../../store/selectors/imageWidthSelector\";\nimport { imageHeightSelector } from \"../../store/selectors/imageHeightSelector\";\n\nexport const usePointer = () => {\n  const dispatch = useDispatch();\n\n  const delta = 10;\n\n  const toolType = useSelector(toolTypeSelector);\n\n  const selectedAnnotations = useSelector(selectedAnnotationsSelector);\n\n  const selectedAnnotationsIds = useSelector(selectedAnnotationsIdsSelector);\n\n  const pointerSelection = useSelector(pointerSelectionSelector);\n\n  const annotations = useSelector(imageInstancesSelector);\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  const imageWidth = useSelector(imageWidthSelector);\n\n  const imageHeight = useSelector(imageHeightSelector);\n\n  let overlappingAnnotationsIds: Array<string> = [];\n\n  const currentIndex = useSelector(currentIndexSelector);\n\n  const [shift, setShift] = useState<boolean>(false);\n\n  useHotkeys(\n    \"*\",\n    (event) => {\n      if (hotkeys.shift) {\n        if (event.type === \"keyup\") {\n          setShift(false);\n        }\n      }\n    },\n    { keyup: true }\n  );\n\n  useHotkeys(\n    \"*\",\n    (event) => {\n      if (hotkeys.shift) {\n        if (event.type === \"keydown\") {\n          setShift(true);\n        }\n      }\n    },\n    { keydown: true }\n  );\n\n  const onMouseDown = (position: { x: number; y: number }) => {\n    dispatch(\n      setPointerSelection({\n        pointerSelection: {\n          ...pointerSelection,\n          dragging: false,\n          minimum: position,\n          selecting: true,\n        },\n      })\n    );\n  };\n\n  const onMouseMove = (position: { x: number; y: number }) => {\n    if (!pointerSelection.selecting) return;\n\n    if (!position || !pointerSelection.minimum) return;\n\n    dispatch(\n      setPointerSelection({\n        pointerSelection: {\n          ...pointerSelection,\n          dragging: Math.abs(position.x - pointerSelection.minimum.x) >= delta,\n          maximum: position,\n        },\n      })\n    );\n  };\n\n  const onMouseUp = (position: { x: number; y: number }) => {\n    if (!pointerSelection.selecting || !pointerSelection.minimum) return;\n\n    if (pointerSelection.dragging) {\n      if (!position) return;\n\n      // correct minimum or maximum in the case where user may have selected rectangle from right to left\n      const maximum: { x: number; y: number } = {\n        x:\n          pointerSelection.minimum.x > position.x\n            ? pointerSelection.minimum.x\n            : position.x,\n        y:\n          pointerSelection.minimum.y > position.y\n            ? pointerSelection.minimum.y\n            : position.y,\n      };\n      const minimum: { x: number; y: number } = {\n        x:\n          pointerSelection.minimum.x > position.x\n            ? position.x\n            : pointerSelection.minimum.x,\n        y:\n          pointerSelection.minimum.y > position.y\n            ? position.y\n            : pointerSelection.minimum.y,\n      };\n\n      dispatch(\n        setPointerSelection({\n          pointerSelection: {\n            ...pointerSelection,\n            minimum: minimum,\n            maximum: maximum,\n          },\n        })\n      );\n\n      if (!minimum || !annotations) return;\n\n      const scaledMinimum = {\n        x: minimum.x / stageScale,\n        y: minimum.y / stageScale,\n      };\n      const scaledMaximum = {\n        x: maximum.x / stageScale,\n        y: maximum.y / stageScale,\n      };\n\n      const annotationsInBox = getAnnotationsInBox(\n        scaledMinimum,\n        scaledMaximum,\n        annotations\n      );\n\n      if (annotationsInBox.length) {\n        if (!shift) {\n          dispatch(\n            setSelectedAnnotations({\n              selectedAnnotations: annotationsInBox,\n              selectedAnnotation: annotationsInBox[0],\n            })\n          );\n          dispatch(\n            setSelectedCategory({\n              selectedCategory: annotationsInBox[0].categoryId,\n            })\n          );\n        } else {\n          //only include if not already selected\n          const additionalAnnotations = annotationsInBox.filter(\n            (annotation: AnnotationType) => {\n              return !selectedAnnotationsIds.includes(annotation.id);\n            }\n          );\n          dispatch(\n            setSelectedAnnotations({\n              selectedAnnotations: [\n                ...selectedAnnotations,\n                ...additionalAnnotations,\n              ],\n              selectedAnnotation: annotationsInBox[0],\n            })\n          );\n        }\n      }\n    } else {\n      onClick(position);\n    }\n\n    dispatch(\n      setPointerSelection({\n        pointerSelection: { ...pointerSelection, selecting: false },\n      })\n    );\n  };\n\n  const onClick = (position: { x: number; y: number }) => {\n    if (toolType !== ToolType.Pointer) return;\n\n    if (!position) return;\n\n    if (!annotations || !annotations.length || !imageWidth || !imageHeight)\n      return;\n\n    const scaledCurrentPosition = {\n      x: position.x / stageScale,\n      y: position.y / stageScale,\n    };\n\n    overlappingAnnotationsIds = getOverlappingAnnotations(\n      scaledCurrentPosition,\n      annotations,\n      imageWidth,\n      imageHeight\n    );\n\n    let currentAnnotation: AnnotationType | undefined;\n\n    if (overlappingAnnotationsIds.length > 1) {\n      dispatch(\n        applicationSlice.actions.setCurrentIndex({\n          currentIndex:\n            currentIndex + 1 === overlappingAnnotationsIds.length\n              ? 0\n              : currentIndex + 1,\n        })\n      );\n      const nextAnnotationId = overlappingAnnotationsIds[currentIndex];\n\n      currentAnnotation = annotations.find((annotation: AnnotationType) => {\n        return annotation.id === nextAnnotationId;\n      });\n    } else {\n      currentAnnotation = annotations.find((annotation: AnnotationType) => {\n        return annotation.id === overlappingAnnotationsIds[0];\n      });\n      dispatch(\n        applicationSlice.actions.setCurrentIndex({\n          currentIndex: 0,\n        })\n      );\n    }\n\n    if (!currentAnnotation) return;\n\n    if (!shift) {\n      dispatch(\n        setSelectedAnnotations({\n          selectedAnnotations: [currentAnnotation],\n          selectedAnnotation: currentAnnotation,\n        })\n      );\n      dispatch(\n        setSelectedCategory({\n          selectedCategory: currentAnnotation.categoryId,\n        })\n      );\n    }\n\n    if (shift && !selectedAnnotationsIds.includes(currentAnnotation.id)) {\n      //include newly selected annotation if not already selected\n      dispatch(\n        setSelectedAnnotations({\n          selectedAnnotations: [...selectedAnnotations, currentAnnotation],\n          selectedAnnotation: currentAnnotation,\n        })\n      );\n    }\n  };\n\n  return { onMouseDown, onMouseUp, onMouseMove, onPointerClick: onClick };\n};\n","import * as ReactKonva from \"react-konva\";\nimport * as _ from \"lodash\";\nimport Konva from \"konva\";\nimport React, { useEffect, useMemo, useReducer, useRef, useState } from \"react\";\nimport { ToolType } from \"../../../../../types/ToolType\";\nimport {\n  imageInstancesSelector,\n  imageOriginalSrcSelector,\n  invertModeSelector,\n  selectedCategorySelector,\n  selectionModeSelector,\n  stageHeightSelector,\n  stageScaleSelector,\n  stageWidthSelector,\n  toolTypeSelector,\n  zoomSelectionSelector,\n} from \"../../../../../store/selectors\";\nimport { applicationSlice, setSelectedAnnotations } from \"../../../../../store\";\nimport {\n  Provider,\n  ReactReduxContext,\n  useDispatch,\n  useSelector,\n} from \"react-redux\";\nimport {\n  useAnnotationTool,\n  useCursor,\n  useHandTool,\n  useZoom,\n} from \"../../../../../hooks\";\nimport { AnnotationType } from \"../../../../../types/AnnotationType\";\nimport { penSelectionBrushSizeSelector } from \"../../../../../store/selectors/penSelectionBrushSizeSelector\";\nimport { AnnotationModeType } from \"../../../../../types/AnnotationModeType\";\nimport { Image } from \"../Image\";\nimport { Selecting } from \"../Selecting\";\nimport { annotatedSelector } from \"../../../../../store/selectors/annotatedSelector\";\nimport {\n  ColorAnnotationTool,\n  ObjectAnnotationTool,\n  Tool,\n} from \"../../../../../image/Tool\";\nimport { ColorAnnotationToolTip } from \"../ColorAnnotationToolTip\";\nimport useSound from \"use-sound\";\nimport createAnnotationSoundEffect from \"../../../../../sounds/pop-up-on.mp3\";\nimport deleteAnnotationSoundEffect from \"../../../../../sounds/pop-up-off.mp3\";\nimport { soundEnabledSelector } from \"../../../../../store/selectors/soundEnabledSelector\";\nimport { Layer } from \"../Layer\";\nimport { ZoomSelection } from \"../Selection/ZoomSelection\";\nimport { useKeyboardShortcuts } from \"../../../../../hooks/useKeyboardShortcuts\";\nimport { selectedAnnotationSelector } from \"../../../../../store/selectors/selectedAnnotationSelector\";\nimport { selectedAnnotationsIdsSelector } from \"../../../../../store/selectors/selectedAnnotationsIdsSelector\";\nimport { Transformers } from \"../Transformers/Transformers\";\nimport { useWindowFocusHandler } from \"../../../../../hooks/useWindowFocusHandler/useWindowFocusHandler\";\nimport { stagePositionSelector } from \"../../../../../store/selectors/stagePositionSelector\";\nimport { KonvaEventObject } from \"konva/types/Node\";\nimport { scaledImageWidthSelector } from \"../../../../../store/selectors/scaledImageWidthSelector\";\nimport { scaledImageHeightSelector } from \"../../../../../store/selectors/scaledImageHeightSelector\";\nimport { PenAnnotationToolTip } from \"../PenAnnotationToolTip/PenAnnotationToolTip\";\nimport { selectedAnnotationsSelector } from \"../../../../../store/selectors/selectedAnnotationsSelector\";\nimport { Annotations } from \"../Annotations/Annotations\";\nimport { unselectedAnnotationsSelector } from \"../../../../../store/selectors/unselectedAnnotationsSelector\";\nimport { quickSelectionBrushSizeSelector } from \"../../../../../store/selectors/quickSelectionBrushSizeSelector\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { PointerSelection } from \"../Selection/PointerSelection\";\nimport { usePointer } from \"../../../../../hooks/usePointer/usePointer\";\nimport { pointerSelectionSelector } from \"../../../../../store/selectors/pointerSelectionSelector\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { channelsSelector } from \"../../../../../store/selectors/intensityRangeSelector\";\nimport { cursorSelector } from \"../../../../../store/selectors/cursorSelector\";\n\nexport const Stage = () => {\n  const imageRef = useRef<Konva.Image | null>(null);\n  const stageRef = useRef<Konva.Stage>(null);\n\n  const src = useSelector(imageOriginalSrcSelector);\n\n  const selectingRef = useRef<Konva.Line | null>(null);\n\n  const toolType = useSelector(toolTypeSelector);\n\n  const invertMode = useSelector(invertModeSelector);\n  const penSelectionBrushSize = useSelector(penSelectionBrushSizeSelector);\n  const selectedAnnotationsIds = useSelector(selectedAnnotationsIdsSelector);\n  const quickSelectionBrushSize = useSelector(quickSelectionBrushSizeSelector);\n  const selectedCategory = useSelector(selectedCategorySelector);\n\n  const channels = useSelector(channelsSelector);\n\n  const selectedAnnotations = useSelector(selectedAnnotationsSelector);\n  const unselectedAnnotations = useSelector(unselectedAnnotationsSelector);\n  const selectionMode = useSelector(selectionModeSelector);\n\n  const stageHeight = useSelector(stageHeightSelector);\n  const stageWidth = useSelector(stageWidthSelector);\n  const stagePosition = useSelector(stagePositionSelector);\n\n  const saveLabelRef = useRef<Konva.Label>();\n  const clearLabelRef = useRef<Konva.Label>();\n\n  const [currentPosition, setCurrentPosition] = useState<{\n    x: number;\n    y: number;\n  }>();\n\n  const scaledImageWidth = useSelector(scaledImageWidthSelector);\n  const scaledImageHeight = useSelector(scaledImageHeightSelector);\n\n  const stageScale = useSelector(stageScaleSelector);\n\n  const dispatch = useDispatch();\n\n  const {\n    deselect: onZoomDeselect,\n    onMouseUp: onZoomMouseUp,\n    onMouseMove: onZoomMouseMove,\n    onMouseDown: onZoomMouseDown,\n    onWheel: onZoomWheel,\n  } = useZoom();\n\n  const {\n    onMouseDown: onPointerMouseDown,\n    onMouseMove: onPointerMouseMove,\n    onMouseUp: onPointerMouseUp,\n  } = usePointer();\n\n  const [annotationTool] = useAnnotationTool();\n\n  const [, update] = useReducer((x) => x + 1, 0);\n\n  const annotations = useSelector(imageInstancesSelector);\n\n  const annotated = useSelector(annotatedSelector);\n\n  const selectedAnnotation = useSelector(selectedAnnotationSelector);\n\n  const { dragging: zoomDragging, selecting: zoomSelecting } = useSelector(\n    zoomSelectionSelector\n  );\n\n  const {\n    dragging: pointerDragging,\n    selecting: pointerSelecting,\n  } = useSelector(pointerSelectionSelector);\n\n  useWindowFocusHandler();\n\n  const [playCreateAnnotationSoundEffect] = useSound(\n    createAnnotationSoundEffect\n  );\n  const [playDeleteAnnotationSoundEffect] = useSound(\n    deleteAnnotationSoundEffect\n  );\n\n  const soundEnabled = useSelector(soundEnabledSelector);\n\n  const detachTransformer = (transformerId: string) => {\n    if (!stageRef || !stageRef.current) return;\n    const transformer = stageRef.current.findOne(`#${transformerId}`);\n\n    if (!transformer) return;\n\n    (transformer as Konva.Transformer).detach();\n    (transformer as Konva.Transformer).getLayer()?.batchDraw();\n  };\n\n  const deselectAllTransformers = () => {\n    if (!stageRef || !stageRef.current) return;\n\n    const transformers = stageRef.current.find(\"Transformer\").toArray();\n    transformers.forEach((tr: any) => {\n      (tr as Konva.Transformer).detach();\n      (tr as Konva.Transformer).getLayer()?.batchDraw();\n    });\n  };\n\n  const deselectAllAnnotations = () => {\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [],\n        selectedAnnotation: undefined,\n      })\n    );\n  };\n\n  const deselectAnnotation = () => {\n    if (!annotationTool) return;\n\n    annotationTool.deselect();\n\n    dispatch(applicationSlice.actions.setAnnotating({ annotating: false }));\n    dispatch(applicationSlice.actions.setAnnotated({ annotated: false }));\n\n    if (!selectedAnnotation) return;\n\n    selectingRef.current = null;\n\n    const transformerId = \"tr-\".concat(selectedAnnotation.id);\n    detachTransformer(transformerId);\n  };\n\n  const cursor = useSelector(cursorSelector);\n  useCursor();\n\n  useEffect(() => {\n    if (!stageRef || !stageRef.current) return;\n    stageRef.current.container().style.cursor = cursor;\n  }, [cursor]);\n\n  useEffect(() => {\n    if (!annotationTool) return;\n\n    if (!selectedAnnotation || !selectedAnnotation.mask) return;\n\n    const [invertedMask, invertedBoundingBox] = annotationTool.invert(\n      selectedAnnotation.mask,\n      selectedAnnotation.boundingBox\n    );\n\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [\n          {\n            ...selectedAnnotation,\n            boundingBox: invertedBoundingBox,\n            mask: invertedMask,\n          },\n        ],\n        selectedAnnotation: {\n          ...selectedAnnotation,\n          boundingBox: invertedBoundingBox,\n          mask: invertedMask,\n        },\n      })\n    );\n  }, [invertMode]);\n\n  useEffect(() => {\n    if (toolType === ToolType.Zoom) return;\n\n    if (selectionMode === AnnotationModeType.New) return;\n\n    if (!annotated || !annotationTool) return;\n\n    dispatch(applicationSlice.actions.setAnnotating({ annotating: false }));\n\n    if (!annotationTool.annotated) return;\n\n    let combinedMask, combinedBoundingBox;\n\n    if (!selectedAnnotation) return;\n\n    if (selectionMode === AnnotationModeType.Add) {\n      [combinedMask, combinedBoundingBox] = annotationTool.add(\n        selectedAnnotation.mask,\n        selectedAnnotation.boundingBox\n      );\n    } else if (selectionMode === AnnotationModeType.Subtract) {\n      [combinedMask, combinedBoundingBox] = annotationTool.subtract(\n        selectedAnnotation.mask,\n        selectedAnnotation.boundingBox\n      );\n    } else if (selectionMode === AnnotationModeType.Intersect) {\n      [combinedMask, combinedBoundingBox] = annotationTool.intersect(\n        selectedAnnotation.mask,\n        selectedAnnotation.boundingBox\n      );\n    }\n\n    annotationTool.mask = combinedMask;\n\n    annotationTool.boundingBox = combinedBoundingBox;\n\n    if (!annotationTool.boundingBox || !annotationTool.mask) return;\n\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [\n          {\n            ...selectedAnnotation,\n            boundingBox: annotationTool.boundingBox,\n            mask: annotationTool.mask,\n          },\n        ],\n        selectedAnnotation: {\n          ...selectedAnnotation,\n          boundingBox: annotationTool.boundingBox,\n          mask: annotationTool.mask,\n        },\n      })\n    );\n  }, [annotated]);\n\n  useEffect(() => {\n    if (!selectedAnnotationsIds) return;\n\n    if (!annotations) return;\n\n    const updatedAnnotations = _.map(\n      selectedAnnotations,\n      (annotation: AnnotationType) => {\n        return { ...annotation, categoryId: selectedCategory.id };\n      }\n    );\n\n    if (!selectedAnnotation) return;\n\n    dispatch(\n      applicationSlice.actions.setSelectedAnnotations({\n        selectedAnnotations: updatedAnnotations,\n        selectedAnnotation: {\n          ...selectedAnnotation,\n          categoryId: selectedCategory.id,\n        },\n      })\n    );\n  }, [selectedCategory]);\n\n  useEffect(() => {\n    if (!annotationTool) return;\n\n    if (annotationTool.annotated) {\n      dispatch(\n        applicationSlice.actions.setAnnotated({\n          annotated: annotationTool.annotated,\n        })\n      );\n\n      if (selectionMode !== AnnotationModeType.New) return;\n      annotationTool.annotate(selectedCategory);\n    }\n\n    if (annotationTool.annotating)\n      dispatch(\n        applicationSlice.actions.setAnnotating({\n          annotating: annotationTool.annotating,\n        })\n      );\n\n    if (selectionMode === AnnotationModeType.New) return;\n  }, [annotationTool?.annotated, annotationTool?.annotating]);\n\n  useEffect(() => {\n    if (toolType === ToolType.PenAnnotation) {\n      // @ts-ignore\n      annotationTool.brushSize = penSelectionBrushSize / stageScale;\n    }\n  }, [penSelectionBrushSize]);\n\n  useEffect(() => {\n    if (toolType === ToolType.QuickAnnotation) {\n      //@ts-ignore\n      annotationTool.update(Math.round(quickSelectionBrushSize / stageScale));\n    }\n  }, [quickSelectionBrushSize]);\n\n  useEffect(() => {\n    if (!annotated) return;\n\n    if (!annotationTool) return;\n\n    annotationTool.annotate(selectedCategory);\n\n    if (!annotationTool.annotation) return;\n\n    if (selectionMode !== AnnotationModeType.New) return;\n\n    dispatch(\n      setSelectedAnnotations({\n        selectedAnnotations: [annotationTool.annotation],\n        selectedAnnotation: annotationTool.annotation,\n      })\n    );\n  }, [annotated]);\n\n  useEffect(() => {\n    if (!stageRef || !stageRef.current) return;\n\n    _.forEach(selectedAnnotationsIds, (annotationId) => {\n      if (!stageRef || !stageRef.current) return;\n\n      const transformerId = \"tr-\".concat(annotationId);\n\n      const transformer = stageRef.current.findOne(`#${transformerId}`);\n      const line = stageRef.current.findOne(`#${annotationId}`);\n\n      if (!line) return;\n\n      if (!transformer) return;\n\n      (transformer as Konva.Transformer).nodes([line]);\n\n      const layer = (transformer as Konva.Transformer).getLayer();\n\n      if (!layer) return;\n\n      layer.batchDraw();\n\n      // Not ideal but this figures out which label is which\n      const label = stageRef.current.find(`#label`);\n      if (label.length > 1) {\n        saveLabelRef.current = label[0] as Konva.Label;\n        clearLabelRef.current = label[1] as Konva.Label;\n      }\n    });\n  }, [selectedAnnotationsIds, selectedAnnotation?.mask]);\n\n  const getRelativePointerPosition = (position: { x: number; y: number }) => {\n    if (!imageRef || !imageRef.current) return;\n\n    const transform = imageRef.current.getAbsoluteTransform().copy();\n\n    transform.invert();\n\n    return transform.point(position);\n  };\n\n  const onMouseDown = (event: KonvaEventObject<MouseEvent>) => {\n    if (\n      !event.target.getParent() ||\n      event.target.getParent().className === \"Transformer\"\n    )\n      return;\n    memoizedOnMouseDown();\n  };\n\n  const memoizedOnMouseDown = useMemo(() => {\n    const func = () => {\n      if (toolType === ToolType.Hand || toolType === ToolType.ColorAdjustment)\n        return;\n\n      if (!stageRef || !stageRef.current) return;\n\n      const position = stageRef.current.getPointerPosition();\n\n      if (!position) return;\n\n      const relative = getRelativePointerPosition(position);\n\n      if (!relative) return;\n\n      if (\n        saveLabelRef &&\n        saveLabelRef.current &&\n        saveLabelRef.current.getText() &&\n        clearLabelRef.current\n      ) {\n        //do not proceed with mouse down events if user has clicked on Save Annotation button\n        if (\n          (relative.x <\n            saveLabelRef.current.x() + saveLabelRef.current.width() &&\n            relative.x > saveLabelRef.current.x() &&\n            relative.y <\n              saveLabelRef.current.y() + saveLabelRef.current.height() &&\n            relative.y > saveLabelRef.current.y()) ||\n          (relative.x <\n            clearLabelRef.current.x() + clearLabelRef.current.width() &&\n            relative.x > clearLabelRef.current.x() &&\n            relative.y <\n              clearLabelRef.current.y() + clearLabelRef.current.height() &&\n            relative.y > clearLabelRef.current.y())\n        ) {\n          return;\n        }\n      }\n\n      if (toolType === ToolType.Pointer) {\n        onPointerMouseDown(relative);\n        return;\n      }\n\n      const rawImagePosition = {\n        x: relative.x / stageScale,\n        y: relative.y / stageScale,\n      };\n\n      if (toolType === ToolType.Zoom) {\n        onZoomMouseDown(relative);\n      } else {\n        if (annotated) {\n          deselectAnnotation();\n          dispatch(applicationSlice.actions.setAnnotated({ annotated: false }));\n        }\n\n        if (selectionMode === AnnotationModeType.New) {\n          dispatch(\n            applicationSlice.actions.setSelectedAnnotations({\n              selectedAnnotations: [],\n              selectedAnnotation: undefined,\n            })\n          );\n        }\n\n        if (!annotationTool) return;\n\n        annotationTool.onMouseDown(rawImagePosition);\n\n        update();\n      }\n    };\n    const throttled = _.throttle(func, 5);\n    return () => throttled();\n  }, [\n    annotated,\n    annotationTool,\n    saveLabelRef,\n    pointerDragging,\n    pointerSelecting,\n    selectionMode,\n    toolType,\n    zoomDragging,\n    zoomSelecting,\n  ]);\n\n  const onMouseMove = useMemo(() => {\n    const func = () => {\n      if (!stageRef || !stageRef.current) return;\n\n      if (toolType === ToolType.ColorAdjustment) return;\n\n      const position = stageRef.current.getPointerPosition();\n\n      if (!position) return;\n\n      const relative = getRelativePointerPosition(position);\n\n      if (!relative || !scaledImageWidth || !scaledImageHeight) return;\n\n      if (toolType === ToolType.PenAnnotation) setCurrentPosition(relative);\n\n      // Add a little leeway around the canvas to aid drawing up to the edges\n      if (relative.x > -50 && relative.x < 0) {\n        relative.x = 0;\n      } else if (\n        relative.x > scaledImageWidth &&\n        relative.x < scaledImageWidth + 50\n      ) {\n        relative.x = scaledImageWidth;\n      }\n      if (relative.y > -50 && relative.y < 0) {\n        relative.y = 0;\n      } else if (\n        relative.y > scaledImageHeight &&\n        relative.y < scaledImageHeight + 50\n      ) {\n        relative.y = scaledImageHeight;\n      }\n\n      if (\n        relative.x > scaledImageWidth ||\n        relative.y > scaledImageHeight ||\n        relative.x < 0 ||\n        relative.y < 0\n      )\n        return;\n\n      const rawImagePosition = {\n        x: relative.x / stageScale,\n        y: relative.y / stageScale,\n      };\n\n      if (toolType === ToolType.Zoom) {\n        onZoomMouseMove(relative);\n      } else if (toolType === ToolType.Pointer) {\n        onPointerMouseMove(relative);\n      } else {\n        if (!annotationTool) return;\n\n        annotationTool.onMouseMove(rawImagePosition);\n\n        update();\n      }\n    };\n    const throttled = _.throttle(func, 5);\n    return () => throttled();\n  }, [\n    annotationTool,\n    pointerDragging,\n    pointerSelecting,\n    toolType,\n    zoomDragging,\n    zoomSelecting,\n  ]);\n\n  const onMouseUp = useMemo(() => {\n    const func = async () => {\n      if (!stageRef || !stageRef.current) return;\n\n      const position = stageRef.current.getPointerPosition();\n\n      if (!position) return;\n\n      const relative = getRelativePointerPosition(position);\n\n      if (!relative) return;\n\n      const rawImagePosition = {\n        x: relative.x / stageScale,\n        y: relative.y / stageScale,\n      };\n\n      if (toolType === ToolType.Zoom) {\n        onZoomMouseUp(relative);\n      } else if (toolType === ToolType.Pointer) {\n        onPointerMouseUp(relative);\n      } else {\n        if (!annotationTool) return;\n\n        if (!relative || !scaledImageWidth || !scaledImageHeight) return;\n\n        if (toolType === ToolType.ObjectAnnotation) {\n          await (annotationTool as ObjectAnnotationTool).onMouseUp(\n            rawImagePosition\n          );\n        }\n        annotationTool.onMouseUp(rawImagePosition);\n\n        update();\n      }\n    };\n    const throttled = _.throttle(func, 10);\n\n    return () => throttled();\n  }, [\n    annotationTool,\n    pointerDragging,\n    pointerSelecting,\n    toolType,\n    zoomDragging,\n    zoomSelecting,\n  ]);\n\n  const confirmAnnotations = () => {\n    if (!annotations || !annotationTool || annotationTool.annotating) return;\n\n    dispatch(\n      applicationSlice.actions.setImageInstances({\n        instances: [...unselectedAnnotations, ...selectedAnnotations],\n      })\n    );\n\n    if (soundEnabled) playCreateAnnotationSoundEffect();\n\n    deselectAnnotation();\n\n    dispatch(applicationSlice.actions.setAnnotated({ annotated: false }));\n\n    if (selectionMode !== AnnotationModeType.New)\n      dispatch(\n        applicationSlice.actions.setSelectionMode({\n          selectionMode: AnnotationModeType.New,\n        })\n      );\n\n    if (!selectedAnnotationsIds.length) return;\n\n    deselectAllAnnotations();\n    deselectAllTransformers();\n  };\n\n  useHotkeys(\n    \"enter\",\n    () => {\n      confirmAnnotations();\n    },\n    [\n      annotations,\n      annotationTool,\n      annotationTool?.annotating,\n      dispatch,\n      selectedAnnotations,\n      unselectedAnnotations,\n      selectionMode,\n      selectedAnnotationsIds,\n    ]\n  );\n\n  useHotkeys(\n    \"enter\",\n    () => {\n      if (\n        toolType !== ToolType.PolygonalAnnotation &&\n        toolType !== ToolType.LassoAnnotation\n      )\n        return;\n\n      if (!annotationTool) return;\n\n      annotationTool.connect();\n    },\n    [toolType, annotationTool]\n  );\n\n  useHotkeys(\n    \"backspace, delete\",\n    () => {\n      _.map(selectedAnnotationsIds, (annotationId: string) => {\n        dispatch(\n          applicationSlice.actions.deleteImageInstance({\n            id: annotationId,\n          })\n        );\n      });\n      deselectAllAnnotations();\n      deselectAllTransformers();\n\n      if (!_.isEmpty(annotations) && soundEnabled) {\n        playDeleteAnnotationSoundEffect();\n      }\n\n      deselectAnnotation();\n    },\n    [selectedAnnotationsIds, annotations]\n  );\n\n  useHotkeys(\n    \"escape\",\n    () => {\n      deselectAllAnnotations();\n      deselectAllTransformers();\n\n      if (!_.isEmpty(annotations) && soundEnabled) {\n        playDeleteAnnotationSoundEffect();\n      }\n\n      deselectAnnotation();\n\n      if (toolType !== ToolType.Zoom) return;\n      onZoomDeselect();\n    },\n    [annotations, annotationTool, toolType]\n  );\n\n  /*/\n  Detach transformers and selections when all annotations are removed\n   */\n  useEffect(() => {\n    if (!annotations) return;\n\n    if (annotations.length) return;\n\n    deselectAllTransformers();\n    deselectAllAnnotations();\n  }, [annotations?.length]);\n\n  const [tool, setTool] = useState<Tool>();\n\n  useEffect(() => {\n    setTool(annotationTool);\n  }, [annotationTool, toolType]);\n\n  useKeyboardShortcuts();\n\n  const { draggable } = useHandTool();\n\n  return (\n    <ReactReduxContext.Consumer>\n      {({ store }) => (\n        <ReactKonva.Stage\n          draggable={draggable}\n          height={stageHeight}\n          onMouseDown={(evt) => onMouseDown(evt)}\n          onMouseMove={onMouseMove}\n          onMouseUp={onMouseUp}\n          onWheel={onZoomWheel}\n          position={stagePosition}\n          ref={stageRef}\n          width={stageWidth}\n        >\n          <Provider store={store}>\n            <DndProvider backend={HTML5Backend}>\n              <Layer>\n                <Image ref={imageRef} />\n\n                <ZoomSelection />\n\n                <Selecting tool={tool!} />\n\n                <PenAnnotationToolTip\n                  currentPosition={currentPosition}\n                  annotationTool={annotationTool}\n                />\n\n                <PointerSelection />\n\n                <Annotations />\n\n                <Transformers transformPosition={getRelativePointerPosition} />\n\n                <ColorAnnotationToolTip\n                  toolTipPosition={\n                    (annotationTool as ColorAnnotationTool)?.toolTipPosition\n                  }\n                  initialPosition={\n                    (annotationTool as ColorAnnotationTool)?.initialPosition\n                  }\n                  tolerance={(annotationTool as ColorAnnotationTool)?.tolerance}\n                />\n              </Layer>\n            </DndProvider>\n          </Provider>\n        </ReactKonva.Stage>\n      )}\n    </ReactReduxContext.Consumer>\n  );\n};\n","import { KonvaEventObject } from \"konva/types/Node\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ToolType } from \"../../types/ToolType\";\nimport { ZoomModeType } from \"../../types/ZoomModeType\";\nimport { setOffset, setStageScale, setZoomSelection } from \"../../store\";\nimport {\n  stageScaleSelector,\n  toolTypeSelector,\n  zoomSelectionSelector,\n  zoomToolOptionsSelector,\n} from \"../../store/selectors\";\nimport { scaledImageWidthSelector } from \"../../store/selectors/scaledImageWidthSelector\";\n\nexport const useZoom = () => {\n  const delta = 10;\n  const scaleBy = 1.25;\n\n  const dispatch = useDispatch();\n\n  const stageScale = useSelector(stageScaleSelector);\n  const toolType = useSelector(toolTypeSelector);\n  const { automaticCentering, mode } = useSelector(zoomToolOptionsSelector);\n  const zoomSelection = useSelector(zoomSelectionSelector);\n\n  const imageWidth = useSelector(scaledImageWidthSelector);\n\n  const zoomAndOffset = (\n    position: { x: number; y: number } | undefined,\n    scaleBy: number,\n    zoomIn: boolean = true\n  ) => {\n    if (!automaticCentering || zoomSelection.dragging) {\n      if (!position) return;\n      dispatch(\n        setOffset({\n          offset: {\n            x: zoomIn ? position.x * scaleBy : position.x / scaleBy,\n            y: zoomIn ? position.y * scaleBy : position.y / scaleBy,\n          },\n        })\n      );\n    }\n    dispatch(\n      setStageScale({\n        stageScale: zoomIn ? stageScale * scaleBy : stageScale / scaleBy,\n      })\n    );\n  };\n\n  const deselect = () => {\n    dispatch(\n      setZoomSelection({\n        zoomSelection: {\n          maximum: undefined,\n          minimum: undefined,\n          selecting: false,\n          dragging: false,\n        },\n      })\n    );\n  };\n\n  const onMouseDown = (position: { x: number; y: number }) => {\n    if (toolType !== ToolType.Zoom) return;\n\n    dispatch(\n      setZoomSelection({\n        zoomSelection: {\n          ...zoomSelection,\n          dragging: false,\n          minimum: position,\n          selecting: true,\n        },\n      })\n    );\n  };\n\n  const onMouseMove = (position: { x: number; y: number }) => {\n    if (mode === ZoomModeType.Out) return;\n\n    if (!zoomSelection.selecting) return;\n\n    if (!position || !zoomSelection.minimum) return;\n\n    dispatch(\n      setZoomSelection({\n        zoomSelection: {\n          ...zoomSelection,\n          dragging: Math.abs(position.x - zoomSelection.minimum.x) >= delta,\n          maximum: position,\n        },\n      })\n    );\n  };\n\n  const onMouseUp = (position: { x: number; y: number }) => {\n    if (!imageWidth) return;\n\n    if (!zoomSelection.selecting) return;\n\n    if (zoomSelection.dragging) {\n      if (!position) return;\n\n      dispatch(\n        setZoomSelection({\n          zoomSelection: { ...zoomSelection, maximum: position },\n        })\n      );\n\n      if (!zoomSelection.minimum) return;\n\n      const selectedWidth = position.x - zoomSelection.minimum.x;\n\n      zoomAndOffset(\n        {\n          x: zoomSelection.minimum.x + selectedWidth / 2,\n          y: zoomSelection.minimum.y + selectedWidth / 2,\n        },\n        imageWidth / selectedWidth / stageScale\n      );\n    } else {\n      zoomAndOffset(position, scaleBy, mode === ZoomModeType.In);\n    }\n\n    dispatch(\n      setZoomSelection({\n        zoomSelection: { ...zoomSelection, dragging: false, selecting: false },\n      })\n    );\n  };\n\n  const onWheel = (event: KonvaEventObject<WheelEvent>) => {\n    if (toolType !== ToolType.Zoom) return;\n\n    if (!imageWidth) return;\n    zoomAndOffset(\n      { x: imageWidth / 2, y: imageWidth / 2 },\n      scaleBy,\n      event.evt.deltaY < 0\n    );\n  };\n\n  return {\n    deselect,\n    onMouseDown,\n    onMouseMove,\n    onMouseUp,\n    onWheel,\n  };\n};\n","import { useEffect, useState } from \"react\";\nimport * as ImageJS from \"image-js\";\nimport { ToolType } from \"../../types/ToolType\";\nimport {\n  AnnotationTool,\n  ColorAnnotationTool,\n  EllipticalAnnotationTool,\n  LassoAnnotationTool,\n  MagneticAnnotationTool,\n  ObjectAnnotationTool,\n  PenAnnotationTool,\n  PolygonalAnnotationTool,\n  QuickAnnotationTool,\n  RectangularAnnotationTool,\n} from \"../../image/Tool\";\nimport { useSelector } from \"react-redux\";\nimport { stageScaleSelector, toolTypeSelector } from \"../../store/selectors\";\nimport { penSelectionBrushSizeSelector } from \"../../store/selectors/penSelectionBrushSizeSelector\";\nimport { quickSelectionBrushSizeSelector } from \"../../store/selectors/quickSelectionBrushSizeSelector\";\nimport { imageSrcSelector } from \"../../store/selectors/imageSrcSelector\";\n\nexport const useAnnotationTool = () => {\n  const src = useSelector(imageSrcSelector);\n  const operation = useSelector(toolTypeSelector);\n  const stageScale = useSelector(stageScaleSelector);\n\n  const [operator, setOperator] = useState<AnnotationTool>();\n\n  const [image, setImage] = useState<ImageJS.Image>();\n\n  const penSelectionBrushSize = useSelector(penSelectionBrushSizeSelector);\n\n  const quickSelectionBrushSize = useSelector(quickSelectionBrushSizeSelector);\n\n  useEffect(() => {\n    if (!src) return;\n\n    const loadImage = async () => {\n      const image = await ImageJS.Image.load(src);\n      setImage(image);\n    };\n\n    loadImage();\n  }, [src]);\n\n  useEffect(() => {\n    if (!image) return;\n\n    switch (operation) {\n      case ToolType.ColorAnnotation:\n        setOperator(new ColorAnnotationTool(image));\n\n        return;\n      case ToolType.EllipticalAnnotation:\n        setOperator(new EllipticalAnnotationTool(image));\n\n        return;\n      case ToolType.LassoAnnotation:\n        setOperator(new LassoAnnotationTool(image));\n\n        return;\n      case ToolType.MagneticAnnotation:\n        setOperator(new MagneticAnnotationTool(image, 0.5));\n\n        return;\n      case ToolType.ObjectAnnotation:\n        ObjectAnnotationTool.compile(image).then(\n          (operator: ObjectAnnotationTool) => {\n            setOperator(operator);\n          }\n        );\n\n        return;\n      case ToolType.PenAnnotation:\n        PenAnnotationTool.setup(\n          image,\n          penSelectionBrushSize / (stageScale ? stageScale : 1)\n        ).then((operator: PenAnnotationTool) => {\n          setOperator(operator);\n        });\n\n        return;\n      case ToolType.PolygonalAnnotation:\n        setOperator(new PolygonalAnnotationTool(image));\n\n        return;\n      case ToolType.QuickAnnotation:\n        const quickSelectionOperator = QuickAnnotationTool.setup(\n          image,\n          quickSelectionBrushSize / Math.round(stageScale ? stageScale : 1)\n        );\n        setOperator(quickSelectionOperator);\n\n        return;\n      case ToolType.RectangularAnnotation:\n        setOperator(new RectangularAnnotationTool(image));\n\n        return;\n    }\n  }, [operation, image]);\n\n  return [operator];\n};\n","// User has switched back to the tab\nimport { useEffect, useState } from \"react\";\nimport { applicationSlice } from \"../../store/slices\";\nimport { AnnotationModeType } from \"../../types/AnnotationModeType\";\nimport { useDispatch } from \"react-redux\";\n\nexport const useWindowFocusHandler = () => {\n  const dispatch = useDispatch();\n\n  const onBlur = () => {\n    dispatch(\n      applicationSlice.actions.setSelectionMode({\n        selectionMode: AnnotationModeType.New,\n      })\n    );\n  };\n\n  useEffect(() => {\n    // window.addEventListener('focus', onFocus);\n    window.addEventListener(\"blur\", onBlur);\n    // Specify how to clean up after this effect:\n    return () => {\n      // window.removeEventListener('focus', onFocus);\n      window.removeEventListener(\"blur\", onBlur);\n    };\n  }, []);\n};\n","import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toolTypeSelector } from \"../../store/selectors\";\nimport { ToolType } from \"../../types/ToolType\";\nimport { applicationSlice } from \"../../store/slices\";\n\nexport const useCursor = () => {\n  const toolType = useSelector(toolTypeSelector);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    switch (toolType) {\n      case ToolType.EllipticalAnnotation:\n        dispatch(applicationSlice.actions.setCursor({ cursor: \"crosshair\" }));\n\n        break;\n      case ToolType.PenAnnotation:\n        dispatch(applicationSlice.actions.setCursor({ cursor: \"none\" }));\n\n        break;\n      case ToolType.RectangularAnnotation:\n        dispatch(applicationSlice.actions.setCursor({ cursor: \"crosshair\" }));\n        break;\n      default:\n        dispatch(applicationSlice.actions.setCursor({ cursor: \"pointer\" }));\n\n        break;\n    }\n  }, [toolType]);\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport {\n  applicationSlice,\n  setOperation,\n  setSelectedCategory,\n} from \"../../store\";\nimport { ToolType } from \"../../types/ToolType\";\nimport {\n  createdCategoriesSelector,\n  toolTypeSelector,\n} from \"../../store/selectors\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\nimport { ActionCreators } from \"redux-undo\";\nimport { AnnotationModeType } from \"../../types/AnnotationModeType\";\nimport hotkeys from \"hotkeys-js\";\n\nexport const useKeyboardShortcuts = () => {\n  const dispatch = useDispatch();\n\n  const categories = useSelector(createdCategoriesSelector);\n  const toolType = useSelector(toolTypeSelector);\n\n  // /*\n  // Undo operation (Ctrl+z)\n  // */\n  // useHotkeys(\"ctrl+z\", () => {\n  //   dispatch(ActionCreators.jump(-1)); //undo should be allowed only if user did an accidental delete or an accidental modification to the selected annotation\n  // });\n  //\n  // /*\n  // Undo operation (Cmd+z)\n  // */\n  // useHotkeys(\"cmd+z\", () => {\n  //   dispatch(ActionCreators.jump(-1)); //undo should be allowed only if user did an accidental delete or an accidental modification to the selected annotation\n  // });\n\n  // /*\n  //  * Cycle lasso tools (Shift + L)\n  //  */\n  // useHotkeys(\n  //   \"shift+l\",\n  //   () => {\n  //     switch (toolType) {\n  //       case ToolType.LassoAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.MagneticAnnotation }));\n  //\n  //         break;\n  //       case ToolType.MagneticAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.PolygonalAnnotation }));\n  //\n  //         break;\n  //       case ToolType.PolygonalAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.LassoAnnotation }));\n  //\n  //         break;\n  //       default:\n  //         dispatch(setOperation({ operation: ToolType.LassoAnnotation }));\n  //\n  //         break;\n  //     }\n  //   },\n  //   [toolType]\n  // );\n\n  // /*\n  //  * Cycle marquee tools (Shift + M)\n  //  */\n  // useHotkeys(\n  //   \"shift+m\",\n  //   () => {\n  //     switch (toolType) {\n  //       case ToolType.EllipticalAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.RectangularAnnotation }));\n  //\n  //         break;\n  //       case ToolType.RectangularAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.EllipticalAnnotation }));\n  //\n  //         break;\n  //       default:\n  //         dispatch(setOperation({ operation: ToolType.RectangularAnnotation }));\n  //\n  //         break;\n  //     }\n  //   },\n  //   [toolType]\n  // );\n\n  // /*\n  //  * Cycle learning-based tools (Shift + W)\n  //  */\n  // useHotkeys(\n  //   \"shift+w\",\n  //   () => {\n  //     switch (toolType) {\n  //       case ToolType.ColorAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.ObjectAnnotation }));\n  //\n  //         break;\n  //       case ToolType.ObjectAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.QuickAnnotation }));\n  //\n  //         break;\n  //       case ToolType.QuickAnnotation:\n  //         dispatch(setOperation({ operation: ToolType.ColorAnnotation }));\n  //\n  //         break;\n  //       default:\n  //         dispatch(setOperation({ operation: ToolType.ColorAnnotation }));\n  //\n  //         break;\n  //     }\n  //   },\n  //   [toolType]\n  // );\n\n  /*\n   * Select arrange tool (V)\n   */\n  useHotkeys(\"shift+s\", () => {\n    dispatch(setOperation({ operation: ToolType.Pointer }));\n  });\n\n  /*\n   * Select category (1-9)\n   */\n  useHotkeys(\"1,2,3,4,5,6,7,8,9\", (event: KeyboardEvent) => {\n    const index = parseInt(event.key) - 1;\n\n    const selectedCategory = categories[index];\n\n    if (!selectedCategory) return;\n\n    dispatch(setSelectedCategory({ selectedCategory: selectedCategory.id }));\n  });\n\n  /*\n   * Select color tool (W)\n   */\n  useHotkeys(\"shift+c\", () => {\n    dispatch(setOperation({ operation: ToolType.ColorAnnotation }));\n  });\n\n  /*\n   * Select quick tool (W)\n   */\n  useHotkeys(\"shift+q\", () => {\n    dispatch(setOperation({ operation: ToolType.QuickAnnotation }));\n  });\n\n  /*\n   * Select hand tool (H)\n   */\n  useHotkeys(\"shift+h\", () => {\n    dispatch(setOperation({ operation: ToolType.Hand }));\n  });\n\n  /*\n   * Select lasso tool (L)\n   */\n  useHotkeys(\"shift+l\", () => {\n    dispatch(setOperation({ operation: ToolType.LassoAnnotation }));\n  });\n\n  /*\n   * Select polygonal tool (L)\n   */\n  useHotkeys(\"shift+p\", () => {\n    dispatch(setOperation({ operation: ToolType.PolygonalAnnotation }));\n  });\n\n  /*\n   * Select magnetic tool (M)\n   */\n  useHotkeys(\"shift+m\", () => {\n    dispatch(setOperation({ operation: ToolType.MagneticAnnotation }));\n  });\n\n  /*\n   * Select pencil tool (P)\n   */\n  useHotkeys(\"shift+d\", () => {\n    dispatch(setOperation({ operation: ToolType.PenAnnotation }));\n  });\n\n  /*\n   * Select rectangular tool (R)\n   */\n  useHotkeys(\"shift+r\", () => {\n    dispatch(setOperation({ operation: ToolType.RectangularAnnotation }));\n  });\n\n  /*\n   * Select elliptical tool (E)\n   */\n  useHotkeys(\"shift+e\", () => {\n    dispatch(setOperation({ operation: ToolType.EllipticalAnnotation }));\n  });\n\n  /*\n   * Select zoom tool (Z)\n   */\n  useHotkeys(\"shift+z\", () => {\n    dispatch(setOperation({ operation: ToolType.Zoom }));\n  });\n\n  /*\n   * Select intensity adjustment tool (Z)\n   */\n  useHotkeys(\"shift+i\", () => {\n    dispatch(setOperation({ operation: ToolType.ColorAdjustment }));\n  });\n\n  /*\n   * Key shortcuts for special selection mode\n   * */\n  // useHotkeys(\n  //   \"*\",\n  //   () => {\n  //     if (hotkeys.shift) {\n  //       if (toolType === ToolType.Pointer) return; //pointer tool has its own shift handler for multiple selections\n  //       dispatch(\n  //         applicationSlice.actions.setSelectionMode({\n  //           selectionMode: AnnotationModeType.Add,\n  //         })\n  //       );\n  //     }\n  //     if (hotkeys.alt) {\n  //       dispatch(\n  //         applicationSlice.actions.setSelectionMode({\n  //           selectionMode: AnnotationModeType.Subtract,\n  //         })\n  //       );\n  //     }\n  //   },\n  //   [toolType]\n  // );\n};\n","import { useEffect, useState } from \"react\";\nimport { ToolType } from \"../../types/ToolType\";\nimport { useSelector } from \"react-redux\";\nimport { toolTypeSelector } from \"../../store/selectors\";\nimport { useHotkeys } from \"react-hotkeys-hook\";\n\nexport const useHandTool = () => {\n  const toolType = useSelector(toolTypeSelector);\n\n  const [draggable, setDraggable] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (toolType === ToolType.Hand) {\n      setDraggable(true);\n    } else {\n      setDraggable(false);\n    }\n  }, [toolType]);\n\n  return { draggable };\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderBottom: \"1px solid #3F3F3F\",\n    backgroundColor: \"rgba(50, 50, 50)\",\n    boxShadow: \"none\",\n    left: theme.spacing(32),\n    position: \"absolute\",\n    opacity: \"50%\",\n  },\n  content: {\n    backgroundColor: theme.palette.background.default,\n    width: \"100%\",\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n  },\n  parent: {\n    cursor: \"crosshair\",\n    width: \"100%\",\n  },\n}));\n","import React, { useRef } from \"react\";\nimport { Stage } from \"../Stage\";\nimport { useStyles } from \"./Content.css\";\nimport { NativeTypes } from \"react-dnd-html5-backend\";\nimport { DropTargetMonitor, useDrop } from \"react-dnd\";\nimport { useBoundingClientRect } from \"../../../../hooks/useBoundingClientRect\";\nimport { useCursor } from \"../../../../hooks\";\n\ntype ContentProps = {\n  onDrop: (item: { files: any[] }) => void;\n};\n\nexport const Content = ({ onDrop }: ContentProps) => {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const classes = useStyles();\n\n  useBoundingClientRect(ref);\n\n  const [, drop] = useDrop(\n    () => ({\n      accept: [NativeTypes.FILE],\n      drop(item: { files: any[] }) {\n        if (onDrop) {\n          onDrop(item);\n        }\n      },\n      collect: (monitor: DropTargetMonitor) => ({\n        isOver: monitor.isOver(),\n        canDrop: monitor.canDrop(),\n      }),\n    }),\n    []\n  );\n\n  return (\n    <React.Fragment>\n      {/*<AppBar className={classes.appBar} color=\"default\">*/}\n      {/*  <Toolbar>*/}\n      {/*    <Typography variant=\"h6\" color=\"inherit\">*/}\n      {/*      &nbsp;*/}\n      {/*    </Typography>*/}\n      {/*  </Toolbar>*/}\n      {/*</AppBar>*/}\n\n      {/*<Divider />*/}\n\n      <main className={classes.content} ref={ref}>\n        <div ref={drop}>\n          <Stage />\n        </div>\n      </main>\n    </React.Fragment>\n  );\n};\n","import useResizeObserver from \"@react-hook/resize-observer\";\nimport React, { useEffect, useLayoutEffect } from \"react\";\nimport {\n  setBoundingClientRect,\n  setStageWidth,\n  setStageScale,\n} from \"../../store/slices\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  boundingClientRectSelector,\n  imageSelector,\n  stageHeightSelector,\n  stageWidthSelector,\n} from \"../../store/selectors\";\n\nexport const useBoundingClientRect = (target: React.RefObject<HTMLElement>) => {\n  const dispatch = useDispatch();\n\n  const boundingClientRect = useSelector(boundingClientRectSelector);\n  const stageWidth = useSelector(stageWidthSelector);\n  const stageHeight = useSelector(stageHeightSelector);\n  const image = useSelector(imageSelector);\n\n  useLayoutEffect(() => {\n    if (!target || !target.current) return;\n\n    dispatch(\n      setBoundingClientRect({\n        boundingClientRect: target.current.getBoundingClientRect(),\n      })\n    );\n  }, [dispatch, target]);\n\n  useResizeObserver(target, (entry: ResizeObserverEntry) => {\n    dispatch(\n      setBoundingClientRect({\n        boundingClientRect: entry.contentRect as DOMRect,\n      })\n    );\n  });\n\n  useEffect(() => {\n    if (!boundingClientRect) return;\n    dispatch(setBoundingClientRect({ boundingClientRect: boundingClientRect }));\n  }, [boundingClientRect, dispatch]);\n\n  useEffect(() => {\n    dispatch(setStageWidth({ stageWidth: boundingClientRect.width }));\n    if (!image || !image.shape) return;\n\n    //FIXME it seems like we are not currently getting the current stageHeight. It currently stays fixes to the initial state in the redux store.\n    if (image.shape.height / stageHeight > image.shape.width / stageWidth) {\n      dispatch(\n        setStageScale({\n          stageScale: (0.95 * stageHeight) / image.shape.height,\n        })\n      );\n    } else {\n      dispatch(\n        setStageScale({\n          stageScale: (0.95 * stageWidth) / image.shape.width,\n        })\n      );\n    }\n  }, [boundingClientRect, dispatch, stageWidth, image?.shape]);\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst settingsWidth = 240;\nconst operationsWidth = 56;\n\nexport const useStyles = makeStyles((theme) => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  root: {\n    display: \"flex\",\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n    width: \"100%\",\n  },\n  settings: {\n    width: settingsWidth,\n    flexShrink: 0,\n  },\n  settingsPaper: {\n    width: settingsWidth,\n    right: operationsWidth,\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n  },\n  settingsToolbar: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  operations: {\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n    width: operationsWidth,\n  },\n  operationsPaper: {\n    width: operationsWidth,\n  },\n  operationsToolbar: {\n    alignItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  logo: {\n    flexGrow: 1,\n  },\n  applicationDrawer: {\n    flexShrink: 0,\n    width: theme.spacing(32),\n  },\n  applicationDrawerHeader: {\n    ...theme.mixins.toolbar,\n    alignItems: \"center\",\n    display: \"flex\",\n    paddingLeft: theme.spacing(3),\n  },\n  applicationDrawerPaper: {\n    zIndex: 0,\n    width: theme.spacing(32),\n  },\n}));\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nexport const theme = createMuiTheme({\n  overrides: {\n    MuiDrawer: {\n      paperAnchorDockedLeft: {\n        borderRight: \"1px solid rgba(16, 16, 16)\",\n      },\n      paperAnchorDockedRight: {\n        borderLeft: \"1px solid rgba(16, 16, 16)\",\n      },\n    },\n    MuiListItem: {\n      root: {\n        \"&$selected\": {\n          backgroundColor: \"rgba(60, 61, 62)\",\n        },\n      },\n    },\n    MuiListItemIcon: {\n      root: {\n        minWidth: 36,\n      },\n    },\n    MuiSlider: {\n      rail: {\n        color: \"rgba(73, 73, 73)\",\n      },\n      thumb: {\n        color: \"rgba(201, 201, 201)\",\n      },\n      track: {\n        color: \"rgba(159, 159, 159)\",\n      },\n    },\n  },\n  palette: {\n    background: {\n      paper: \"rgba(40, 40, 40)\",\n      default: \"rgba(50, 50, 50)\",\n    },\n    divider: \"rgba(72, 72, 72)\",\n    text: {\n      primary: \"rgba(190, 190, 190)\",\n    },\n    type: \"dark\",\n  },\n});\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { ImageType } from \"../../../types/ImageType\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { CategoriesList } from \"../CategoriesList\";\nimport { ToolOptions } from \"../ToolOptions\";\nimport { Tools } from \"../Tools\";\nimport {\n  addImages,\n  applicationSlice,\n  setActiveImage,\n  setOperation,\n  setSelectedAnnotations,\n} from \"../../../store\";\nimport { Content } from \"../Content\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { useStyles } from \"./ImageViewer.css\";\nimport { theme } from \"./theme\";\nimport * as ImageJS from \"image-js\";\nimport { ShapeType } from \"../../../types/ShapeType\";\nimport { loadLayersModelThunk } from \"../../../store/thunks\";\nimport { ToolType } from \"../../../types/ToolType\";\nimport { v4 } from \"uuid\";\nimport { imagesSelector } from \"../../../store/selectors/imagesSelector\";\n\ntype ImageViewerProps = {\n  image?: ImageType;\n};\n\nexport const ImageViewer = (props: ImageViewerProps) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const path =\n      \"https://raw.githubusercontent.com/zaidalyafeai/HostedModels/master/unet-128/model.json\";\n\n    dispatch(loadLayersModelThunk({ name: \"foo\", path: path }));\n  });\n\n  useEffect(() => {\n    if (props.image) {\n      dispatch(\n        applicationSlice.actions.setActiveImage({ image: props.image.id })\n      );\n    }\n  }, [dispatch, props.image]);\n\n  const images = useSelector(imagesSelector);\n\n  const classes = useStyles();\n\n  const [, setDropped] = useState<File[]>([]);\n\n  const onDrop = useCallback(\n    (item) => {\n      if (item) {\n        for (let i = 0; i < item.files.length; i++) {\n          const file = item.files[i];\n\n          file.arrayBuffer().then((buffer: any) => {\n            ImageJS.Image.load(buffer).then((image) => {\n              const shape: ShapeType = {\n                channels: image.components,\n                frames: 1,\n                height: image.height,\n                planes: 1,\n                width: image.width,\n              };\n\n              const imageDataURL = image.toDataURL(\"image/png\", {\n                useCanvas: true,\n              });\n\n              const loaded: ImageType = {\n                avatar: image\n                  .resize({ width: 50 })\n                  .toDataURL(\"image/png\", { useCanvas: true }),\n                id: v4(),\n                annotations: [],\n                name: file.name,\n                shape: shape,\n                originalSrc: imageDataURL,\n                src: imageDataURL,\n              };\n\n              console.error(\n                images.map((image: ImageType) => {\n                  return image.name.split(\".\")[0];\n                })\n              );\n\n              dispatch(addImages({ newImages: [loaded] }));\n\n              if (i === 0) {\n                dispatch(\n                  setActiveImage({\n                    image: loaded.id,\n                  })\n                );\n\n                dispatch(\n                  setSelectedAnnotations({\n                    selectedAnnotations: [],\n                    selectedAnnotation: undefined,\n                  })\n                );\n\n                dispatch(\n                  setOperation({ operation: ToolType.RectangularAnnotation })\n                );\n              }\n            });\n          });\n        }\n      }\n    },\n    [setDropped]\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <CategoriesList />\n\n        <Content onDrop={onDrop} />\n\n        <ToolOptions />\n\n        <Tools />\n      </div>\n    </ThemeProvider>\n  );\n};\n","import i18n, { InitOptions } from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport { de, en, fi, hi, hu, se, gr } from \"./translations\";\n\nconst resources = {\n  de: de,\n  en: en,\n  fi: fi,\n  hi: hi,\n  hu: hu,\n  se: se,\n  gr: gr,\n};\n\nconst options: InitOptions = {\n  resources,\n  interpolation: { escapeValue: false },\n  keySeparator: false,\n  lng: \"en\",\n};\n\ni18n\n  .use(initReactI18next)\n  .init(options)\n  .then(() => {});\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ImageViewer } from \"./components\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport * as Sentry from \"@sentry/react\";\nimport \"./i18n\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\n\nSentry.init({\n  dsn:\n    \"https://756e21ab7263457eab9bc2f65edddc79@o71028.ingest.sentry.io/5668724\",\n  release: \"image-viewer@\" + process.env.npm_package_version,\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <DndProvider backend={HTML5Backend}>\n        <ImageViewer />\n      </DndProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}